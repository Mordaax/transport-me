Index: app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.maps.model.LatLng;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class StepAdapter extends RecyclerView.Adapter<StepViewHolder> {\r\n    ArrayList<RouteStep> data;\r\n    Context c;\r\n    public StepAdapter(Context c, ArrayList<RouteStep> data){\r\n        this.data = data;\r\n        this.c = c;\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        if(position == 0 || position+1 == data.size()){\r\n            return 4;\r\n        }\r\n        if (data.get(position).TravelMode.equals(\"Walk\")){\r\n            return 1;\r\n        }\r\n        else if(data.get(position).TravelMode.equals(\"Bus\")){\r\n            return 2;\r\n        }\r\n        else{\r\n            return 3;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public StepViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View item = null;\r\n        if (viewType ==1)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_walk_layout,parent,false);\r\n        else if(viewType ==2)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_bus_layout,parent,false);\r\n        else if(viewType == 3)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_mrt_layout,parent,false);\r\n        else if(viewType == 4)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_startend_layout,parent,false);\r\n        return new StepViewHolder(item);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull StepViewHolder holder, int position) {\r\n        RouteStep content = data.get(position);\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (content.stepcoordinates.size() > 0) {\r\n                    ((Route) c).moveMapCamera(content.stepcoordinates);\r\n                }\r\n            }\r\n        });\r\n        if (position == 0 || position+1 == data.size()){\r\n            holder.instructions.setText(content.Instructions);\r\n        }\r\n        else{\r\n            holder.instructions.setText(content.Instructions);\r\n            holder.duration.setText(content.Duration);\r\n            holder.distance.setText(content.Distance);\r\n            holder.previouslocation.setText(content.PreviousLocation);\r\n            holder.nextlocation.setText(content.NextLocation);\r\n            if (!content.TravelMode.equals(\"Walk\")){\r\n                holder.line.setText(content.LineName);\r\n                holder.stopcount.setText(content.NumStops.toString());\r\n                if (content.TravelMode.equals(\"Subway\")){\r\n                    holder.linearlayout_mrt.setBackgroundColor(Color.parseColor(content.LineColor));\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return data.size();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java b/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java	(date 1658839742795)
@@ -1,19 +1,48 @@
 package sg.edu.np.mad.transportme;
 
+import static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;
+
 import android.content.Context;
 import android.content.Intent;
 import android.graphics.Color;
+import android.os.Build;
+import android.transition.AutoTransition;
+import android.transition.TransitionManager;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.ImageView;
+import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.RequiresApi;
 import androidx.cardview.widget.CardView;
+import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.android.volley.Request;
+import com.android.volley.Response;
+import com.android.volley.VolleyError;
+import com.android.volley.toolbox.JsonObjectRequest;
 import com.google.android.gms.maps.model.LatLng;
 
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.time.Duration;
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
 import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import sg.edu.np.mad.transportme.api.ApiBusStopService;
+import sg.edu.np.mad.transportme.api.MySingleton;
+import sg.edu.np.mad.transportme.views.MainActivity;
 
 public class StepAdapter extends RecyclerView.Adapter<StepViewHolder> {
     ArrayList<RouteStep> data;
@@ -34,6 +63,9 @@
         else if(data.get(position).TravelMode.equals("Bus")){
             return 2;
         }
+        else if(data.get(position).TravelMode.equals("Drive")){
+            return 5;
+        }
         else{
             return 3;
         }
@@ -57,18 +89,194 @@
         else if(viewType == 4)
             item = LayoutInflater.from(parent.getContext())
                     .inflate(R.layout.step_startend_layout,parent,false);
+        else if(viewType == 5)
+            item = LayoutInflater.from(parent.getContext())
+                    .inflate(R.layout.step_car_layout,parent,false);
         return new StepViewHolder(item);
     }
 
     @Override
     public void onBindViewHolder(@NonNull StepViewHolder holder, int position) {
         RouteStep content = data.get(position);
-
+        ArrayList<BusStop> globallol = globalBusStops;
         holder.itemView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 if (content.stepcoordinates.size() > 0) {
                     ((Route) c).moveMapCamera(content.stepcoordinates);
+                }
+                if (content.TravelMode.equals("Bus")){
+                    Log.d("Hello","Kena clucked");
+                    String BusNumber = content.LineName;
+                    Log.d("Hello", BusNumber);
+                    Log.d("Hello", globallol.toString());
+                    for (int i=0;i<globallol.size();i++){
+                        BusStop currentstop = globallol.get(i);
+
+                        if (currentstop.getDescription().equalsIgnoreCase(content.PreviousLocation) || currentstop.getRoadName().equalsIgnoreCase(content.PreviousLocation) ){
+
+                            JsonObjectRequest jsonObjectRequest = new JsonObjectRequest
+                                    (Request.Method.GET, "https://mad-assignment-backend.herokuapp.com/BusCodes?codes="+currentstop.getBusStopCode(), null, new Response.Listener<JSONObject>() {
+
+                                        @RequiresApi(api = Build.VERSION_CODES.O)
+                                        @Override
+                                        public void onResponse(JSONObject response) {
+                                            try{
+                                                JSONArray jsonArrayBusStops = response.getJSONArray("Results");
+                                                List<String> nextBusString = Arrays.asList("NextBus","NextBus2","NextBus3");
+                                                ArrayList<BusStop> nearBusStopLoaded = new ArrayList<>();
+                                                LocalDateTime current = LocalDateTime.now(); //Get Current time to compare with estimated arrival time
+
+                                                DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern("uuuu-MM-dd'T'HH:mm:ssXXXXX");
+                                                //Load API data into objects
+
+                                                JSONObject jsonBusStop = (JSONObject) jsonArrayBusStops.get(0);
+
+                                                ArrayList<BusService> busServices = new ArrayList<>();
+                                                JSONArray jsonArrayBusServices = jsonBusStop.getJSONArray("Services");
+                                                for (int j=0;j<jsonArrayBusServices.length();j++){
+                                                    JSONObject jsonBusService = jsonArrayBusServices.getJSONObject(j);
+                                                    String serviceNumber = jsonBusService.getString("ServiceNo");
+                                                    ArrayList<NextBus> nextBuses = new ArrayList<>();
+
+                                                    for (String nextbusstring: nextBusString){
+                                                        JSONObject nextbus = jsonBusService.getJSONObject(nextbusstring);
+                                                        // Load next bus data to object
+                                                        String estArrival = nextbus.getString("EstimatedArrival");
+                                                        String arrivalMinutes = "Null";
+                                                        if (!estArrival.equals("")){  //Get difference between time for Arrival Time
+                                                            LocalDateTime parsed = LocalDateTime.parse(estArrival,DATE_TIME_FORMATTER);
+                                                            Duration duration = Duration.between(current,parsed);
+                                                            arrivalMinutes = String.valueOf(duration.toMinutes());
+                                                        }
+
+                                                        String Latitude =  nextbus.getString("Latitude");
+                                                        String Longitude = nextbus.getString("Longitude");
+                                                        String Load = nextbus.getString("Load");
+                                                        String Feature = nextbus.getString("Feature");
+                                                        String Type = nextbus.getString("Type");
+                                                        nextBuses.add(new NextBus(arrivalMinutes,Latitude,Longitude,Load,Feature,Type));
+                                                    }
+
+                                                    busServices.add(new BusService(serviceNumber,nextBuses));
+                                                }
+                                                currentstop.setBusServices(busServices);
+                                                holder.ServiceNumber.setText(BusNumber);       //Set the Text of Bus Service Number
+                                                //Populating the list with each attribute of the next bus (Bus, Type, Feature)
+                                                ArrayList<TextView> nextBusList= new ArrayList<TextView>(Arrays.asList(holder.NextBus1, holder.NextBus2, holder.NextBus3));
+                                                ArrayList<TextView> nextBusTypeList = new ArrayList<TextView>(Arrays.asList(holder.NextBus1Type, holder.NextBus2Type, holder.NextBus3Type));
+                                                ArrayList<ImageView> nextBusFeatureList = new ArrayList<>(Arrays.asList(holder.NextBus1Feature, holder.NextBus2Feature, holder.NextBus3Feature));
+                                                for (int i = 0; i < nextBusList.size(); i++)        //Loops through the 3 next busses
+                                                {
+                                                    //Declaring the next bus
+                                                    NextBus nb = currentstop.getBusServices().get(0).getNextBuses().get(i);
+                                                    //Assigning variables to their corresponding holder views
+                                                    TextView busTV = nextBusList.get(i);
+                                                    TextView busTypeTV = nextBusTypeList.get(i);
+                                                    ImageView busFeatureIV = nextBusFeatureList.get(i);
+                                                    if (nb.getEstimatedArrival() == "Null")                 //Checks if the bus exists (Null == non-existent)
+                                                    {
+                                                        busTV.setTextColor(Color.parseColor("#000000"));    //Sets the text to 一 in black to indicate no bus
+                                                        busTV.setText("一");
+                                                        busTypeTV.setText("");
+                                                        busFeatureIV.setVisibility(View.GONE);
+                                                        continue;
+                                                    }
+                                                    else if (Integer.parseInt(nb.getEstimatedArrival()) == 0)       //When 0 minutes is left to arrival, set to Arr
+                                                    {
+                                                        busTV.setText("Arr");
+                                                    }
+                                                    else if (Integer.parseInt(nb.getEstimatedArrival()) < 0)        //If estimated arrival is negative, set to Left
+                                                    {
+                                                        busTV.setText("Left");
+                                                    }
+                                                    else
+                                                    {
+                                                        nextBusList.get(i).setText(nb.getEstimatedArrival());       //Else set it to estimated arrival time in mins
+                                                    }
+
+                                                    if (nb.getFeature().equals("none"))                             //Checks if bus is WAB (Wheel chair accessible)
+                                                    {
+                                                        busFeatureIV.setVisibility(View.GONE);                      //Does not display WAB icon if none
+                                                    }
+
+                                                    if (nb.getLoad().equals("SEA"))     //SEA = Seats Available
+                                                    {
+                                                        busTV.setTextColor(Color.parseColor("#90a959"));           //Sets text color to green (Green = Not Full)
+                                                    }
+                                                    else if (nb.getLoad().equals("SDA"))    //SDA = Standing Available
+                                                    {
+                                                        busTV.setTextColor(Color.parseColor("#e9b872"));           //Sets text color to yellow (Yellow = medium fullness)
+                                                        busFeatureIV.setImageResource(R.drawable.wheelchair_yellow);        //Sets WAB icon to yellow
+                                                    }
+                                                    else        //Else = LSD = Limited Standing
+                                                    {
+                                                        busTV.setTextColor(Color.parseColor("#a63d40"));          //Sets text color to red (Red = Extremely full)
+                                                        busFeatureIV.setImageResource(R.drawable.wheelchair_red);          //sets WAB icon to red
+                                                    }
+
+                                                    if (nb.getType().equals("SD"))      //SD = Single Deck
+                                                    {
+                                                        busTypeTV.setText("Single");    //Displays bus type as Single
+                                                    }
+                                                    else if (nb.getType().equals("DD")) //DD = Double Deck
+                                                    {
+                                                        busTypeTV.setText("Double");    //Displays bus type as Double
+                                                    }
+                                                    else        //Else = BD = Bendy
+                                                    {
+                                                        busTypeTV.setText("Bendy");     //Displays bus type as Bendy
+                                                    }
+                                                }
+                                                if (holder.linearlayout_timing.getVisibility() == View.VISIBLE){
+                                                    holder.linearlayout_timing.setVisibility(View.GONE);
+                                                    TransitionManager.beginDelayedTransition(holder.buscardview,new AutoTransition());
+                                                }
+                                                else{
+                                                    holder.linearlayout_timing.setVisibility(View.VISIBLE);
+                                                    TransitionManager.beginDelayedTransition(holder.buscardview,new AutoTransition());
+                                                }
+                                            } catch (JSONException e) {
+                                                e.printStackTrace();
+                                            }
+                                        }
+                                    }, new Response.ErrorListener() {
+
+                                        @Override
+                                        public void onErrorResponse(VolleyError error) {
+                                            // TODO: Handle error
+
+                                        }
+                                    });
+
+// Access the RequestQueue through your singleton class.
+                            MySingleton.getInstance(c).addToRequestQueue(jsonObjectRequest);
+
+
+
+                            ApiBusStopService apiBusStopService = new ApiBusStopService(c);
+                            /*apiBusStopService.getBusService(currentStop, new ApiBusStopService.VolleyResponseListener2() { //call api to get bus services
+                                @Override
+                                public void onError(String message) {
+                                    Toast.makeText(c, "Cannot Get Bus Stops, Check Location and Connection", Toast.LENGTH_LONG).show();
+                                }
+
+                                @Override
+                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {
+                                    BusStop thisStop = busStopsLoaded.get(0);
+
+                                    for (BusService currentService: thisStop.getBusServices()){
+                                        if (currentService.getServiceNumber().equals(BusNumber)){
+
+                                            h
+
+                                        }
+                                    }
+                                }
+                            });*/
+                        }
+                    }
+
                 }
             }
         });
@@ -79,9 +287,12 @@
             holder.instructions.setText(content.Instructions);
             holder.duration.setText(content.Duration);
             holder.distance.setText(content.Distance);
-            holder.previouslocation.setText(content.PreviousLocation);
-            holder.nextlocation.setText(content.NextLocation);
-            if (!content.TravelMode.equals("Walk")){
+            if (!content.TravelMode.equals("Drive")){
+                holder.previouslocation.setText(content.PreviousLocation);
+                holder.nextlocation.setText(content.NextLocation);
+            }
+
+            if (!content.TravelMode.equals("Walk") && !content.TravelMode.equals("Drive")){
                 holder.line.setText(content.LineName);
                 holder.stopcount.setText(content.NumStops.toString());
                 if (content.TravelMode.equals("Subway")){
Index: app/src/main/java/sg/edu/np/mad/transportme/StepViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme;\r\n\r\nimport android.view.View;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\npublic class StepViewHolder extends RecyclerView.ViewHolder {\r\n    TextView instructions;\r\n    TextView duration;\r\n    TextView distance;\r\n    TextView line;\r\n    TextView previouslocation;\r\n    TextView nextlocation;\r\n    TextView stopcount;\r\n    LinearLayout linearlayout_mrt;\r\n    CardView startend_cardview;\r\n    View viewItem;\r\n    public StepViewHolder(View item){\r\n        super(item);\r\n        viewItem = item;\r\n        instructions = item.findViewById(R.id.textView_Instructions);\r\n        duration = item.findViewById(R.id.textView_Duration);\r\n        distance = item.findViewById(R.id.textView_Distance);\r\n        line = item.findViewById(R.id.textView_Line);\r\n        previouslocation = item.findViewById(R.id.textView_PreviousLocation);\r\n        nextlocation = item.findViewById(R.id.textView_NextLocation);\r\n        stopcount = item.findViewById(R.id.textView_StopNumber);\r\n        linearlayout_mrt = item.findViewById(R.id.linearLayout_mrt);\r\n        startend_cardview = item.findViewById(R.id.cardView_startend);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/StepViewHolder.java b/app/src/main/java/sg/edu/np/mad/transportme/StepViewHolder.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/StepViewHolder.java	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/StepViewHolder.java	(date 1658839742789)
@@ -1,6 +1,7 @@
 package sg.edu.np.mad.transportme;
 
 import android.view.View;
+import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
@@ -18,6 +19,20 @@
     LinearLayout linearlayout_mrt;
     CardView startend_cardview;
     View viewItem;
+    LinearLayout linearlayout_timing;
+    CardView buscardview;
+
+    TextView ServiceNumber;
+    TextView NextBus1;
+    TextView NextBus2;
+    TextView NextBus3;
+    TextView NextBus1Type;
+    TextView NextBus2Type;
+    TextView NextBus3Type;
+    ImageView NextBus1Feature;
+    ImageView NextBus2Feature;
+    ImageView NextBus3Feature;
+
     public StepViewHolder(View item){
         super(item);
         viewItem = item;
@@ -30,6 +45,20 @@
         stopcount = item.findViewById(R.id.textView_StopNumber);
         linearlayout_mrt = item.findViewById(R.id.linearLayout_mrt);
         startend_cardview = item.findViewById(R.id.cardView_startend);
+
+        ServiceNumber = item.findViewById(R.id.ServiceNumber);
+        NextBus1 = item.findViewById(R.id.NextBus1);
+        NextBus2 = item.findViewById(R.id.NextBus2);
+        NextBus3 = item.findViewById(R.id.NextBus3);
+        NextBus1Type = item.findViewById(R.id.NextBus1Type);
+        NextBus2Type = item.findViewById(R.id.NextBus2Type);
+        NextBus3Type = item.findViewById(R.id.NextBus3Type);
+        NextBus1Feature = item.findViewById(R.id.NextBus1Feature);
+        NextBus2Feature = item.findViewById(R.id.NextBus2Feature);
+        NextBus3Feature = item.findViewById(R.id.NextBus3Feature);
+
+        linearlayout_timing = item.findViewById(R.id.bustimingview);
+        buscardview = item.findViewById(R.id.buscardview);
     }
 
 }
Index: app/src/main/java/sg/edu/np/mad/transportme/Route.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Point;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.RetryPolicy;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.Dash;\r\nimport com.google.android.gms.maps.model.Dot;\r\nimport com.google.android.gms.maps.model.Gap;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.PatternItem;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.jsoup.Jsoup;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\nimport sg.edu.np.mad.transportme.views.CarparkActivity;\r\nimport sg.edu.np.mad.transportme.views.MainActivity;\r\n\r\npublic class Route extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\r\n    DrawerLayout drawerLayout;\r\n    LinearLayout contentView;\r\n    NavigationView navigationView;\r\n    static final float END_SCALE = 0.7f;\r\n    private GoogleMap mMap;\r\n    String currentLocation = \"\";\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_route);\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.routemap);\r\n        mapFragment.getMapAsync(this);\r\n\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        contentView = findViewById(R.id.contentView);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_route);\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                }\r\n                else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n\r\n        AutoCompleteTextView atcfrom = findViewById(R.id.actfrom);\r\n        AutoCompleteTextView actto = findViewById(R.id.actto);\r\n\r\n        ArrayList<String> searchStrings = new ArrayList<String>();\r\n        for (int i = 0; i < globalBusStops.size(); i++) {\r\n            searchStrings.add(globalBusStops.get(i).getDescription());\r\n            searchStrings.add(globalBusStops.get(i).getRoadName());\r\n\r\n        }\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, searchStrings);\r\n        atcfrom.setAdapter(adapter);\r\n        actto.setAdapter(adapter);\r\n\r\n        atcfrom.setText(\"Current Location\");\r\n        //makes it such that when user clicks on edit textbox, textbox is not automatically filled with \"CHANGE PASSWORD\"\r\n        atcfrom.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b) {\r\n                    atcfrom.setText(\"\");\r\n                } else /*if(b == false && password.getEditableText().equals(\"\"))*/ {\r\n                    if (!(atcfrom.getEditableText().length() > 0)) {\r\n                        atcfrom.setText(\"Current Location\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        TextView placeholder = findViewById(R.id.textviewplaceholder);\r\n        Button routeButton = findViewById(R.id.buttonRoute);\r\n\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            Toast.makeText(Route.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        } else {\r\n            if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) {\r\n                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000, 5, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                        Double Longitude = location.getLongitude();\r\n                        currentLocation = Latitude.toString()+\",\"+Longitude.toString();\r\n                        routeButton.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                mMap.clear();\r\n                                String from = String.valueOf(atcfrom.getText());\r\n                                String to = String.valueOf(actto.getText());\r\n                                direction(from, to);\r\n                                placeholder.setVisibility(View.GONE);\r\n                            }\r\n                        });\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                    }\r\n                });\r\n            }\r\n            else if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 5, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                        Double Longitude = location.getLongitude();\r\n                        currentLocation = Latitude.toString()+\",\"+Longitude.toString();\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap){\r\n        mMap = googleMap;\r\n        LatLng singapore = new LatLng(1.3521,103.8198);\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(singapore, 10f));\r\n        mMap.setMyLocationEnabled(true);\r\n    }\r\n\r\n    private void direction(String From, String Destination){\r\n        RequestQueue requestQueue= Volley.newRequestQueue(this);\r\n        ArrayList<RouteStep> routeSteps = new ArrayList<>();\r\n        if (From.equals(\"Current Location\")){\r\n            if (!currentLocation.isEmpty()){\r\n                From = currentLocation;\r\n            }\r\n            else{\r\n                Toast.makeText(Route.this, \"Cannot Get Current location\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n        /*String url = \"https://mad-assignment-backend.herokuapp.com/routetest\";*/\r\n        String url = Uri.parse(\"https://maps.googleapis.com/maps/api/directions/json\")\r\n                .buildUpon()\r\n                .appendQueryParameter(\"destination\",Destination)\r\n                .appendQueryParameter(\"origin\",From)\r\n                .appendQueryParameter(\"mode\",\"transit\")\r\n                .appendQueryParameter(\"key\",\"AIzaSyC5TLFoQWmsorYN0--un6BieG6VI2STONE\")\r\n                .toString();\r\n        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response){\r\n                try {\r\n                    String status = response.getString(\"status\");\r\n                    if (status.equals(\"OK\")) {\r\n                        JSONArray routes = response.getJSONArray(\"routes\");\r\n                        ArrayList<LatLng> points;\r\n                        LatLngBounds.Builder bounds = LatLngBounds.builder();\r\n                        Log.d(\"kek\", routes.toString());\r\n                        for (int i = 0; i < routes.length(); i++) {\r\n\r\n                            PolylineOptions polylineOptions = null;\r\n                            JSONArray legs = routes.getJSONObject(i).getJSONArray(\"legs\");\r\n\r\n                            Log.d(\"kek\", legs.toString());\r\n                            for (int j = 0; j < legs.length(); j++) {\r\n                                String start_address = legs.getJSONObject(j).getString(\"start_address\");\r\n                                String end_address = legs.getJSONObject(j).getString(\"end_address\");\r\n                                RouteStep firstRouteStep = new RouteStep();\r\n                                firstRouteStep.Instructions = \"From \"+ start_address;\r\n                                routeSteps.add(firstRouteStep);\r\n                                JSONArray steps = legs.getJSONObject(j).getJSONArray(\"steps\");\r\n                                Log.d(\"kek\", steps.toString());\r\n                                for (int k = 0; k < steps.length(); k++) {\r\n                                    ArrayList<LatLng> stepcoordinates = new ArrayList<>();\r\n                                    String polyline = steps.getJSONObject(k).getJSONObject(\"polyline\").getString(\"points\");\r\n                                    String instructions = Jsoup.parse(steps.getJSONObject(k).getString(\"html_instructions\")).text();\r\n                                    String travelmode = steps.getJSONObject(k).getString(\"travel_mode\");\r\n\r\n                                    Double startlat = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lat\");\r\n                                    Double startlong = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lng\");\r\n                                    Double endlat = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lat\");\r\n                                    Double endlong = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lng\");\r\n\r\n                                    LatLng latlongstart = new LatLng(startlat,startlong);\r\n                                    LatLng latlongend = new LatLng(endlat,endlong);\r\n\r\n                                    List<LatLng> list = decodePoly(polyline);\r\n\r\n                                    points = new ArrayList<>();\r\n                                    polylineOptions = new PolylineOptions();\r\n                                    for (int l = 0; l < list.size(); l++) {\r\n                                        LatLng position = new LatLng((list.get(l)).latitude, (list.get(l)).longitude);\r\n                                        points.add(position);\r\n                                        bounds.include(position);\r\n                                        stepcoordinates.add(position);\r\n                                    }\r\n                                    polylineOptions.addAll(points);\r\n                                    polylineOptions.width(24);\r\n\r\n                                    String travelMode;\r\n                                    String distance = steps.getJSONObject(k).getJSONObject(\"distance\").getString(\"text\");\r\n                                    String duration = steps.getJSONObject(k).getJSONObject(\"duration\").getString(\"text\");\r\n                                    String previousLocation;\r\n                                    String nextLocation;\r\n                                    if (travelmode.equals(\"WALKING\")){\r\n                                        /*polylineOptions.color(ContextCompat.getColor(Route.this, R.color.purple_500));*/\r\n                                        polylineOptions.color(Color.parseColor(\"#62d431\"));\r\n\r\n                                        /*List<PatternItem> pattern = Arrays.asList(\r\n                                                new Dot(), new Gap(20), new Dash(30), new Gap(20));\r\n                                        polylineOptions.setPattern(pattern);*/\r\n                                        travelMode = \"Walk\";\r\n                                        previousLocation = k==0?start_address: steps.getJSONObject(k-1).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n                                        nextLocation = k==steps.length()-1? end_address: steps.getJSONObject(k+1).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n\r\n                                    }\r\n                                    else {/*if (travelmode.equals(\"TRANSIT\")){*/\r\n                                        JSONObject transitline = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\");\r\n                                        String transitlinecolor = transitline.getString(\"color\");\r\n                                        travelMode = transitline.getJSONObject(\"vehicle\").getString(\"name\");\r\n                                        if (travelMode.equals(\"Bus\")){\r\n                                            transitlinecolor = \"#c62020\";\r\n                                        }\r\n                                        polylineOptions.color(Color.parseColor(transitlinecolor));\r\n                                        MarkerOptions marker = new MarkerOptions().position(latlongstart);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n                                        bounds.include(latlongstart);\r\n                                        stepcoordinates.add(latlongstart);\r\n\r\n                                        marker = new MarkerOptions().position(latlongend);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n                                        bounds.include(latlongend);\r\n                                        stepcoordinates.add(latlongend);\r\n\r\n                                        previousLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n                                        nextLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n\r\n                                    }\r\n\r\n\r\n                                    RouteStep currentStep = new RouteStep(latlongstart,latlongend,travelMode,instructions, distance,duration,previousLocation,nextLocation);\r\n                                    currentStep.stepcoordinates = stepcoordinates;\r\n                                    if (travelmode.equals(\"TRANSIT\")) {\r\n                                        currentStep.LineName = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"name\");\r\n                                        currentStep.NumStops = steps.getJSONObject(k).getJSONObject(\"transit_details\").getInt(\"num_stops\");\r\n                                        if (travelMode.equals(\"Subway\")){\r\n                                            currentStep.LineColor = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"color\");\r\n                                        }\r\n                                    }\r\n\r\n                                    routeSteps.add(currentStep);\r\n                                    polylineOptions.geodesic(true);\r\n                                    mMap.addPolyline(polylineOptions);\r\n                                }\r\n                                RouteStep lastRouteStep = new RouteStep();\r\n                                lastRouteStep.Instructions = \"Arrive at \"+ end_address;\r\n                                routeSteps.add(lastRouteStep);\r\n                            }\r\n\r\n                        }\r\n                        RecyclerView routerv = findViewById(R.id.routeRecyclerView);\r\n                        StepAdapter adapter = new StepAdapter(Route.this, routeSteps);\r\n                        LinearLayoutManager layout = new LinearLayoutManager(Route.this);\r\n\r\n                        routerv.setAdapter(adapter);\r\n                        routerv.setLayoutManager(layout);\r\n\r\n                        /*mMap.addMarker(new MarkerOptions().position(new LatLng(1.3595533, 103.94306)));\r\n                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3212432, 103.7743509)));*/\r\n\r\n\r\n                        final LatLngBounds boundsbuilt = bounds.build();\r\n                        Point point = new Point();\r\n                        getWindowManager().getDefaultDisplay().getSize(point);\r\n                        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));\r\n                    }\r\n                } catch(JSONException e){\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener(){\r\n            @Override\r\n            public void onErrorResponse(VolleyError error){\r\n            }\r\n        });\r\n        RetryPolicy retryPolicy = new DefaultRetryPolicy(30000, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n        jsonObjectRequest.setRetryPolicy(retryPolicy);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n    public void moveMapCamera(ArrayList<LatLng> latlngbounds){\r\n        LatLngBounds.Builder bounds = LatLngBounds.builder();\r\n        for (LatLng latlongobject : latlngbounds){\r\n            bounds.include(latlongobject);\r\n        }\r\n        final LatLngBounds boundsbuilt = bounds.build();\r\n        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));\r\n    }\r\n    public static List<LatLng> decodePoly(final String encodedPath) {\r\n        int len = encodedPath.length();\r\n\r\n        // For speed we preallocate to an upper bound on the final length, then\r\n        // truncate the array before returning.\r\n        final List<LatLng> path = new ArrayList<LatLng>();\r\n        int index = 0;\r\n        int lat = 0;\r\n        int lng = 0;\r\n\r\n        while (index < len) {\r\n            int result = 1;\r\n            int shift = 0;\r\n            int b;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lat += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            result = 1;\r\n            shift = 0;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lng += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            path.add(new LatLng(lat * 1e-5, lng * 1e-5));\r\n        }\r\n\r\n        return path;\r\n    }\r\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\r\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n\r\n                finish();\r\n\r\n                /*fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;*/\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(Route.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                break;\r\n            case R.id.nav_profile:\r\n                Intent intentMainActivity = new Intent(Route.this, MainActivity.class);\r\n                intentMainActivity.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                intentMainActivity.putExtra(\"Profile\", \"Yes\");\r\n\r\n                startActivity(intentMainActivity);\r\n\r\n                /*mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());*/\r\n                break;\r\n            case R.id.nav_route:\r\n                Intent routeintent = new Intent(Route.this, Route.class);\r\n                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(routeintent);\r\n                break;\r\n            case R.id.nav_fares:\r\n                Intent fareintent = new Intent(Route.this, WeekActivity.class);\r\n                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(fareintent);\r\n                break;\r\n            case R.id.nav_rate:\r\n                Uri uri = Uri.parse(\"market://details?id=sg.edu.np.mad.transportme\");\r\n                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n                // To count with Play market backstack, After pressing back button,\r\n                // to taken back to our application, we need to add following flags to intent.\r\n                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n                try {\r\n                    startActivity(goToMarket);\r\n                } catch (ActivityNotFoundException e) {\r\n                    startActivity(new Intent(Intent.ACTION_VIEW,\r\n                            Uri.parse(\"https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\")));\r\n                    break;\r\n                }\r\n            case R.id.nav_share:\r\n                Intent sendIntent = new Intent();\r\n                sendIntent.setAction(Intent.ACTION_SEND);\r\n                sendIntent.setType(\"text/plain\");\r\n                sendIntent.putExtra(Intent.EXTRA_TEXT, \"Download the Best Bus App In Singapore! \\n\\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\");\r\n                startActivity(Intent.createChooser(sendIntent,\"Share With\"));\r\n                break;\r\n\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/Route.java b/app/src/main/java/sg/edu/np/mad/transportme/Route.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(date 1658841320830)
@@ -32,14 +32,18 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.transition.AutoTransition;
+import android.transition.TransitionManager;
 import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
+import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.AutoCompleteTextView;
 import android.widget.Button;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
+import android.widget.Spinner;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -80,13 +84,15 @@
 import sg.edu.np.mad.transportme.views.CarparkActivity;
 import sg.edu.np.mad.transportme.views.MainActivity;
 
-public class Route extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {
+public class Route extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener, AdapterView.OnItemSelectedListener {
     DrawerLayout drawerLayout;
     LinearLayout contentView;
     NavigationView navigationView;
     static final float END_SCALE = 0.7f;
     private GoogleMap mMap;
     String currentLocation = "";
+    Spinner traveloption;
+    String travelmode = "transit";
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -95,6 +101,30 @@
         SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.routemap);
         mapFragment.getMapAsync(this);
 
+        ImageView DropdownMenu = findViewById(R.id.dropdown_icon);
+        LinearLayout dropdown = findViewById(R.id.dropdownmenu);
+        DropdownMenu.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (dropdown.getVisibility() == View.VISIBLE){
+
+                    dropdown.setVisibility(View.GONE);
+                    TransitionManager.beginDelayedTransition(contentView,new AutoTransition());
+                }
+                else{
+                    dropdown.setVisibility(View.VISIBLE);
+                    TransitionManager.beginDelayedTransition(contentView,new AutoTransition());
+                }
+            }
+        });
+
+        traveloption = findViewById(R.id.spinnerTransportType);
+        ArrayAdapter<CharSequence> travelmodeadapter = ArrayAdapter.createFromResource(this, R.array.travelmodes, android.R.layout.simple_spinner_item);
+        travelmodeadapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        traveloption.setAdapter(travelmodeadapter);
+
+        traveloption.setOnItemSelectedListener(this);
+
         ImageView menuIcon = findViewById(R.id.menu_icon);
         contentView = findViewById(R.id.contentView);
         drawerLayout = findViewById(R.id.drawer_layout);
@@ -159,9 +189,10 @@
             return;
         } else {
             if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) {
-                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 10000, 5, new LocationListener() { //Every 60 seconds or 10m change, run code
+                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 1000, 2, new LocationListener() { //Every 60 seconds or 10m change, run code
                     @Override
                     public void onLocationChanged(@NonNull Location location) {
+                        Log.d("location", "location changed");
                         Double Latitude = location.getLatitude(); //Get latitude and logitude
                         Double Longitude = location.getLongitude();
                         currentLocation = Latitude.toString()+","+Longitude.toString();
@@ -176,20 +207,36 @@
                             }
                         });
                         LatLng latLng = new LatLng(Latitude, Longitude);
+                        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15f));
                     }
                 });
             }
-            else if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
-                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 5, new LocationListener() { //Every 60 seconds or 10m change, run code
+            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
+                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 2, new LocationListener() { //Every 60 seconds or 10m change, run code
                     @Override
                     public void onLocationChanged(@NonNull Location location) {
+                        Log.d("location", "location changed");
+
                         Double Latitude = location.getLatitude(); //Get latitude and logitude
                         Double Longitude = location.getLongitude();
                         currentLocation = Latitude.toString()+","+Longitude.toString();
+                        routeButton.setOnClickListener(new View.OnClickListener() {
+                            @Override
+                            public void onClick(View view) {
+                                mMap.clear();
+                                String from = String.valueOf(atcfrom.getText());
+                                String to = String.valueOf(actto.getText());
+                                direction(from, to);
+                                placeholder.setVisibility(View.GONE);
+                            }
+                        });
                         LatLng latLng = new LatLng(Latitude, Longitude);
+                        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15f));
                     }
                 });
             }
+
+
 
         }
     }
@@ -218,7 +265,7 @@
                 .buildUpon()
                 .appendQueryParameter("destination",Destination)
                 .appendQueryParameter("origin",From)
-                .appendQueryParameter("mode","transit")
+                .appendQueryParameter("mode",travelmode)
                 .appendQueryParameter("key","AIzaSyC5TLFoQWmsorYN0--un6BieG6VI2STONE")
                 .toString();
         JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {
@@ -289,7 +336,7 @@
                                         nextLocation = k==steps.length()-1? end_address: steps.getJSONObject(k+1).getJSONObject("transit_details").getJSONObject("departure_stop").getString("name");
 
                                     }
-                                    else {/*if (travelmode.equals("TRANSIT")){*/
+                                    else if (travelmode.equals("TRANSIT")){
                                         JSONObject transitline = steps.getJSONObject(k).getJSONObject("transit_details").getJSONObject("line");
                                         String transitlinecolor = transitline.getString("color");
                                         travelMode = transitline.getJSONObject("vehicle").getString("name");
@@ -297,15 +344,18 @@
                                             transitlinecolor = "#c62020";
                                         }
                                         polylineOptions.color(Color.parseColor(transitlinecolor));
+
                                         MarkerOptions marker = new MarkerOptions().position(latlongstart);
                                         marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));
                                         mMap.addMarker(marker);
+
                                         bounds.include(latlongstart);
                                         stepcoordinates.add(latlongstart);
 
                                         marker = new MarkerOptions().position(latlongend);
                                         marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));
                                         mMap.addMarker(marker);
+
                                         bounds.include(latlongend);
                                         stepcoordinates.add(latlongend);
 
@@ -313,7 +363,16 @@
                                         nextLocation = steps.getJSONObject(k).getJSONObject("transit_details").getJSONObject("arrival_stop").getString("name");
 
                                     }
-
+                                    else{
+                                        travelMode = "Drive";
+                                        previousLocation = "Driving Previous Location";
+                                        nextLocation = "Driving Next Location";
+                                        polylineOptions.color(Color.parseColor("#305978"));
+                                        bounds.include(latlongstart);
+                                        stepcoordinates.add(latlongstart);
+                                        bounds.include(latlongend);
+                                        stepcoordinates.add(latlongend);
+                                    }
 
                                     RouteStep currentStep = new RouteStep(latlongstart,latlongend,travelMode,instructions, distance,duration,previousLocation,nextLocation);
                                     currentStep.stepcoordinates = stepcoordinates;
@@ -514,4 +573,21 @@
         drawerLayout.closeDrawer(GravityCompat.START);
         return true;
     }
+
+    @Override
+    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
+        String choice = adapterView.getItemAtPosition(i).toString();
+        Log.d("travechoice", choice);
+        if (choice.equals("Public Transport")){
+            travelmode = "transit";
+        }
+        else{
+            travelmode="driving";
+        }
+    }
+
+    @Override
+    public void onNothingSelected(AdapterView<?> adapterView) {
+
+    }
 }
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme.views;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static android.graphics.BitmapFactory.decodeResource;\r\n\r\nimport static sg.edu.np.mad.transportme.BitmapResize.getResizedBitmap;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalCloseness;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminder;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminderBusService;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.grbsChange;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Criteria;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.util.SparseArray;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.Polyline;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.gms.vision.Frame;\r\nimport com.google.android.gms.vision.text.TextBlock;\r\nimport com.google.android.gms.vision.text.TextRecognizer;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.lang.reflect.Array;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\nimport sg.edu.np.mad.transportme.BusStop;\r\nimport sg.edu.np.mad.transportme.BusStopAdapter;\r\nimport sg.edu.np.mad.transportme.DistanceCalculator;\r\nimport sg.edu.np.mad.transportme.R;\r\nimport sg.edu.np.mad.transportme.Route;\r\nimport sg.edu.np.mad.transportme.WeekActivity;\r\nimport sg.edu.np.mad.transportme.api.ApiBusStopService;\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\n\r\n\r\npublic class MainActivity extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\r\n    LinearLayout mapandrv;\r\n    FrameLayout fragmentlayout;\r\n    LinearLayout reminderView;      //CHANGE TO SCROLLVIEW LATER\r\n    Button reminderButton;\r\n    Button cancelReminderButton;\r\n    GoogleMap map;\r\n    Uri image_uri;\r\n    LocationManager locationManager;\r\n    DrawerLayout drawerLayout;\r\n    FloatingActionButton cameraSearch;\r\n    SwipeRefreshLayout swipeRefreshLayout;\r\n    BottomNavigationView bottomNavigationView;\r\n    static final float END_SCALE = 0.7f;\r\n    ConstraintLayout contentView;\r\n    public static Boolean favourite = false;\r\n    private static final String[] LOCATION_PERMS = {\r\n            Manifest.permission.ACCESS_COARSE_LOCATION,\r\n            Manifest.permission.ACCESS_FINE_LOCATION\r\n    };\r\n    private static final int LOCATION_REQUEST = 1337;\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        swipeRefreshLayout = findViewById(R.id.swipeLayout);\r\n        ProgressDialog progressDialog = new ProgressDialog(MainActivity.this, R.style.MyAlertDialogStyle); //Show Loading icon when the user first loads\r\n        progressDialog.show();\r\n        progressDialog.setContentView(R.layout.progress_dialog);\r\n        progressDialog.getWindow().setBackgroundDrawableResource(\r\n                android.R.color.transparent\r\n        );\r\n\r\n        contentView = findViewById(R.id.content);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_home);\r\n\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (drawerLayout.isDrawerVisible(GravityCompat.START)) {\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                } else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n        cameraSearch = findViewById(R.id.fab);\r\n        cameraSearch.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n               /* Intent cameraIntent = new Intent(MainActivity.this, CameraSearch.class);\r\n                startActivity(cameraIntent);*/\r\n                selectImage();\r\n            }\r\n        });\r\n\r\n\r\n        mapandrv = findViewById(R.id.MapAndRV);\r\n        fragmentlayout = findViewById(R.id.frame_layout);\r\n        reminderView = findViewById(R.id.reminderView);\r\n        reminderButton = findViewById(R.id.reminderButton);\r\n        cancelReminderButton = findViewById(R.id.cancelReminderButton);\r\n        bottomNavigationView = findViewById(R.id.bottomNavigationView); // load botttom navigation bar\r\n        bottomNavigationView.setOnItemSelectedListener(item -> {\r\n\r\n            switch (item.getItemId()) {\r\n                case R.id.home:\r\n                    fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                    reminderView.setVisibility(View.GONE);\r\n                    cameraSearch.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.VISIBLE);\r\n                    favourite = false;\r\n                    break;\r\n                case R.id.favourites:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new FavouritesFragment());\r\n                    favourite = true;\r\n                    break;\r\n                case R.id.search:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new SearchFragment());\r\n                    break;\r\n                case R.id.mrtmap:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new MrtMapFragment());\r\n                    break;\r\n                case R.id.notify:\r\n                    reminderView.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    fragmentlayout.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.GONE);\r\n                    break;\r\n                case R.id.nav_carpark:\r\n                    Intent intent = new Intent(MainActivity.this, CarparkActivity.class);\r\n                    startActivity(intent);\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        Intent recievingEnd = getIntent();\r\n        String gotoprofile = recievingEnd.getStringExtra(\"Profile\");\r\n        if (gotoprofile != null){\r\n            mapandrv.setVisibility(View.INVISIBLE);\r\n            fragmentlayout.setVisibility(View.VISIBLE);\r\n            replaceFragment(new ProfileFragment());\r\n            navigationView.setCheckedItem(R.id.nav_profile);\r\n            progressDialog.dismiss();\r\n        }\r\n\r\n        cancelReminderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n            }\r\n        });\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.mrtmap);\r\n        mapFragment.getMapAsync(this);\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        ArrayList<BusStop> busStops = globalBusStops;\r\n\r\n        // If location permission is rejected, send toast message to user\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            Toast.makeText(MainActivity.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        }\r\n        else {\r\n            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) { //Comments in this section is the same as the one in the LocationManager.NETWORK_PROVIDER\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 60000, 10, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear(); //Clear all existing markers on the map\r\n                                for (int i = 0; i < busStops.size(); i++) { //Get all bus stop given the radius\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                if (closeBusStops.size() > 0) { // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview when they onresponse is recieved\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if (closeBusStops.size() == 0) { // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++) { //Get bus stops nearby\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        if (closeBusStops.size() > 0) { //Call API if there nearby bus stops, if there arent, send toast message\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() { //call api to get bus services\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview on response from API\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n                        }\r\n                        if (closeBusStops.size() == 0) {\r\n                            Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f)); //Move camera to here the user is\r\n\r\n                    }\r\n                });\r\n            } else if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { //This section is similar to the LocationManager.GPS_PROVIDER section above\r\n                //For users to refresh the recyclerview, runs the location reqeust updates\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() { //Whene user refresh run code\r\n                        locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude();\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear();\r\n                                for (int i = 0; i < busStops.size(); i++) {\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                if (closeBusStops.size() > 0) { // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if (closeBusStops.size() == 0) { // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++) { //Get nearby bus stops\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        if (closeBusStops.size() > 0) {\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                        if (closeBusStops.size() == 0) {\r\n                            Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        grbsChange.observe(this, new Observer<String>() {\r\n            @Override\r\n            public void onChanged(String changedValue) {\r\n                Log.e(\"change\", \"\" + globalReminderBusService);\r\n                showReminderButton(reminderButton);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void showReminderButton(Button reminderButton) {\r\n        if (!(globalReminder == null)) {\r\n            reminderButton.setText(\"Alight at \" + globalReminder.getDescription());\r\n            reminderButton.setVisibility(View.VISIBLE);\r\n        } else {\r\n            reminderButton.setVisibility(View.INVISIBLE);\r\n        }\r\n    }\r\n\r\n    public void moveMapsCamera(Double latitude, Double longitude) { //Function to enable move camera from other classes\r\n        LatLng latlongmove = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latlongmove)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n\r\n    }\r\n\r\n    public void busrouteview(ArrayList<BusStop> busStopList) {\r\n        SwipeRefreshLayout orv = findViewById(R.id.swipeLayout);\r\n        RecyclerView rv = findViewById(R.id.busrouterecyclerView);\r\n        if (busStopList.size() > 0) {\r\n            BusStopAdapter adapter = new BusStopAdapter(busStopList, MainActivity.this);\r\n            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n            rv.setAdapter(adapter);\r\n            rv.setLayoutManager(layout);\r\n            orv .setVisibility(View.GONE);\r\n            rv.setVisibility(View.VISIBLE);\r\n        }\r\n        fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n        reminderView.setVisibility(View.GONE);\r\n        cameraSearch.setVisibility(View.VISIBLE);\r\n        mapandrv.setVisibility(View.VISIBLE);\r\n        orv.setVisibility(View.GONE);\r\n        rv.setVisibility(View.VISIBLE);\r\n        /*swipeRefreshLayout.setVisibility(View.VISIBLE);*/\r\n        favourite = false;\r\n        bottomNavigationView.setSelectedItemId(R.id.nav_home);\r\n\r\n    }\r\n\r\n    public void busroute(Double latitude, Double longitude, BusStop currentStop, List<Marker> mList, List<LatLng> lList) {\r\n        LatLng latlongmarker = new LatLng(latitude, longitude);\r\n        Bitmap icon = Bitmap.createBitmap(15, 15, Bitmap.Config.ARGB_8888);\r\n        Drawable shape = getResources().getDrawable(R.drawable.marker_icon);\r\n        Canvas canvas = new Canvas(icon);\r\n        shape.setBounds(0, 0, icon.getWidth(), icon.getHeight());\r\n        shape.draw(canvas);\r\n        Marker marker = map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()).icon(BitmapDescriptorFactory.fromBitmap(icon)));\r\n        lList.add(latlongmarker);\r\n        mList.add(marker);\r\n    }\r\n\r\n    public Polyline polyline(List<LatLng> lList) {\r\n        Polyline polyline = map.addPolyline(new PolylineOptions().addAll(lList).color(Color.RED));\r\n        return polyline;\r\n    }\r\n\r\n    public void camerazoom(List<Marker> mList) {\r\n        LatLngBounds.Builder builder = new LatLngBounds.Builder();\r\n        for (Marker m : mList) {\r\n            builder.include(m.getPosition());\r\n        }\r\n        LatLngBounds bounds = builder.build();\r\n        CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, 30);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    public void removemarker(List<Marker> mList, Polyline line) {\r\n        if (line != null) {\r\n            line.remove();\r\n        }\r\n        for (Marker m : mList) {\r\n\r\n            m.remove();\r\n        }\r\n        SwipeRefreshLayout orv = findViewById(R.id.swipeLayout);\r\n        RecyclerView rv = findViewById(R.id.busrouterecyclerView);\r\n        rv.setVisibility(View.GONE);\r\n        orv.setVisibility(View.VISIBLE);\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n        Criteria criteria = new Criteria();\r\n        String provider = locationManager.getBestProvider(criteria, true);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }\r\n        Location location = locationManager.getLastKnownLocation(provider);\r\n        double latitude = location.getLatitude();\r\n        double longitude = location.getLongitude();\r\n        LatLng latLng = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latLng)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    private void replaceFragment(Fragment fragment){ //Replace fragment for nav bar\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        fragmentTransaction.replace(R.id.frame_layout,fragment);\r\n        fragmentTransaction.commit();\r\n    }\r\n\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        map = googleMap;\r\n        map.setMyLocationEnabled(true);\r\n\r\n    }\r\n\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n                fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(MainActivity.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                break;\r\n            case R.id.nav_profile:\r\n                mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());\r\n                break;\r\n            case R.id.nav_route:\r\n                Intent routeintent = new Intent(MainActivity.this, Route.class);\r\n                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(routeintent);\r\n                break;\r\n            case R.id.nav_fares:\r\n                Intent fareintent = new Intent(MainActivity.this, WeekActivity.class);\r\n                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(fareintent);\r\n                break;\r\n            case R.id.nav_rate:\r\n                Uri uri = Uri.parse(\"market://details?id=sg.edu.np.mad.transportme\");\r\n                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n                // To count with Play market backstack, After pressing back button,\r\n                // to taken back to our application, we need to add following flags to intent.\r\n                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n                try {\r\n                    startActivity(goToMarket);\r\n                } catch (ActivityNotFoundException e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\"https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\")));\r\n                break;\r\n            }\r\n            case R.id.nav_share:\r\n                Intent sendIntent = new Intent();\r\n                sendIntent.setAction(Intent.ACTION_SEND);\r\n                sendIntent.setType(\"text/plain\");\r\n                sendIntent.putExtra(Intent.EXTRA_TEXT, \"Download the Best Bus App In Singapore! \\n\\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\");\r\n                startActivity(Intent.createChooser(sendIntent,\"Share With\"));\r\n                break;\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n    @Override\r\n    public void onBackPressed(){\r\n        if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }else{\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    private void selectImage() {\r\n        final CharSequence[] options = {\"Choose from Gallery\",\"Cancel\" };\r\n        /*final CharSequence[] options = { \"Take Photo\", \"Choose from Gallery\",\"Cancel\" };*/\r\n        ImageView image = new ImageView(this);\r\n        image.setImageResource(R.drawable.bus_stop_next_to_pond);\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\r\n        builder.setTitle(\"Choose Image to Scan\");\r\n        builder.setIcon(R.drawable.appsplashicon);\r\n        builder.setView(image);\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    ContentValues values = new ContentValues();\r\n                    values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n                    values.put(MediaStore.Images.Media.DESCRIPTION, \"From the Camera\");\r\n                    image_uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,values);\r\n                    Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    takePicture.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n                    startActivityForResult(takePicture,0);\r\n\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n                    Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                    startActivityForResult(pickPhoto , 1);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n                    dialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != RESULT_CANCELED) {\r\n            switch (requestCode) {\r\n                case 0:\r\n                    if (resultCode == RESULT_OK /*&& data != null*/) {\r\n                        try{\r\n                            ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                            Bitmap selectedImage = MediaStore.Images.Media.getBitmap(this.getContentResolver(), image_uri);\r\n                            /*Bitmap selectedImage = (Bitmap) data.getExtras().get(\"data\");*/\r\n                            selectedImage = getResizedBitmap(selectedImage,1000);\r\n                            TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                            Frame frameImage = new Frame.Builder().setBitmap(selectedImage).build();\r\n                            SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                            for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                for (int x=0; i< globalBusStops.size(); i++){\r\n                                    BusStop currentStop = globalBusStops.get(i);\r\n                                    if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                            textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                            textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                        cameraBusStops.add(currentStop);\r\n                                        LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            if(cameraBusStops.size() > 0){\r\n                                Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                    @Override\r\n                                    public void onError(String message) {\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                    }\r\n                                    @Override\r\n                                    public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                        RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                        BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                        LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                        rv.setAdapter(adapter);\r\n                                        rv.setLayoutManager(layout);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else{\r\n                                Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                            }\r\n\r\n                        }\r\n                        catch(Exception e){\r\n                        }\r\n\r\n                    }\r\n\r\n                    break;\r\n                case 1:\r\n                    if (resultCode == RESULT_OK && data != null) {\r\n                        Uri selectedImage = data.getData();\r\n                        String[] filePathColumn = {MediaStore.Images.Media.DATA};\r\n\r\n                        if (selectedImage != null) {\r\n                            Cursor cursor = getContentResolver().query(selectedImage,\r\n                                    filePathColumn, null, null, null);\r\n                            if (cursor != null) {\r\n                                cursor.moveToFirst();\r\n\r\n                                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);\r\n                                String picturePath = cursor.getString(columnIndex);\r\n                                Bitmap selectedPhoneImage = BitmapFactory.decodeFile(picturePath);\r\n\r\n                                try{\r\n                                    ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                                    TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                                    Frame frameImage = new Frame.Builder().setBitmap(selectedPhoneImage).build();\r\n                                    SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                                    for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                        TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                        for (int x=0; i< globalBusStops.size(); i++){\r\n                                            BusStop currentStop = globalBusStops.get(i);\r\n                                            if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                                    textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                                    textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                                cameraBusStops.add(currentStop);\r\n                                                LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                                map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                                map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if(cameraBusStops.size() > 0){\r\n                                        Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                        ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                        apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                            @Override\r\n                                            public void onError(String message) {\r\n                                                Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                            }\r\n                                            @Override\r\n                                            public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                                RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                                BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                                LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                                rv.setAdapter(adapter);\r\n                                                rv.setLayoutManager(layout);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else{\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                                    }\r\n\r\n                                }\r\n                                catch(Exception e){\r\n                                    Log.d(\"HAHA\", \"failed\");\r\n                                }\r\n                                cursor.close();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(date 1658839949108)
@@ -707,7 +707,7 @@
     }
 
     private void selectImage() {
-        final CharSequence[] options = {"Choose from Gallery","Cancel" };
+        final CharSequence[] options = {"Take Photo","Choose from Gallery","Cancel" };
         /*final CharSequence[] options = { "Take Photo", "Choose from Gallery","Cancel" };*/
         ImageView image = new ImageView(this);
         image.setImageResource(R.drawable.bus_stop_next_to_pond);
Index: app/src/main/res/layout/step_bus_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:background=\"#00000000\"\r\n    android:elevation=\"10dp\"\r\n    android:gravity=\"center\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"173dp\"\r\n        android:layout_marginRight=\"15dp\"\r\n        android:layout_marginLeft=\"15dp\"\r\n        android:layout_marginTop=\"15dp\"\r\n        app:cardCornerRadius=\"10dp\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"#c62020\"\r\n            android:orientation=\"vertical\"\r\n            android:padding=\"15dp\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_Instructions\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:text=\"Instructions\"\r\n                        android:textColor=\"#ffff\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_Line\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"4\"\r\n                        android:fontFamily=\"@font/inter_bold\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"Number\"\r\n                        android:textColor=\"#FFFFFF\"\r\n                        android:textSize=\"20sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_Duration\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:text=\"Duration\"\r\n                        android:textColor=\"#FFFFFF\"\r\n                        android:textSize=\"16dp\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_StopNumber\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"15\"\r\n                        android:textAlignment=\"textEnd\"\r\n                        android:textColor=\"#FFFFFF\"\r\n                        android:textSize=\"16sp\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView5\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"Stops\"\r\n                        android:textAlignment=\"textEnd\"\r\n                        android:textColor=\"#FFFFFF\"\r\n                        android:textSize=\"16sp\" />\r\n                </LinearLayout>\r\n\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_PreviousLocation\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"1\"\r\n                        android:gravity=\"center_vertical\"\r\n                        android:text=\"Previous Location\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"#FFFFFF\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <ImageView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"50dp\"\r\n                        android:src=\"@drawable/ic_baseline_directions_bus_24\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_Distance\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:text=\"Distance\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"#FFFFFF\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_NextLocation\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"1\"\r\n                        android:gravity=\"center_vertical\"\r\n                        android:text=\"NextLocation\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"#FFFFFF\" />\r\n                </LinearLayout>\r\n\r\n            </LinearLayout>\r\n        </LinearLayout>\r\n\r\n        <!--<TextView\r\n            android:id=\"@+id/textViewDuration\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:text=\"Duration\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/textView_Distance\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"10dp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:srcCompat=\"@drawable/ic_baseline_directions_walk_24\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView_Distance\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/inter_bold\"\r\n            android:text=\"Distance\"\r\n            android:textSize=\"20sp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView_Instructions\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:fontFamily=\"@font/inter_bold\"\r\n            android:text=\"Instructions\"\r\n            android:textSize=\"24sp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/textView_Distance\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/imageView\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />-->\r\n\r\n    </androidx.cardview.widget.CardView>\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/step_bus_layout.xml b/app/src/main/res/layout/step_bus_layout.xml
--- a/app/src/main/res/layout/step_bus_layout.xml	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/res/layout/step_bus_layout.xml	(date 1658839742800)
@@ -10,160 +10,337 @@
     android:orientation="vertical">
 
     <androidx.cardview.widget.CardView
+        android:id="@+id/buscardview"
         android:layout_width="match_parent"
-        android:layout_height="173dp"
-        android:layout_marginRight="15dp"
+        android:layout_height="wrap_content"
         android:layout_marginLeft="15dp"
         android:layout_marginTop="15dp"
+        android:layout_marginRight="15dp"
+        android:layout_marginBottom="7dp"
         app:cardCornerRadius="10dp">
 
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:background="#c62020"
-            android:orientation="vertical"
-            android:padding="15dp">
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
+
+            <LinearLayout
+                android:id="@+id/linearLayout2"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="#c62020"
+                android:orientation="vertical"
+                android:padding="15dp">
 
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                android:orientation="horizontal">
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1"
+                    android:orientation="horizontal">
 
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:layout_weight="1"
-                    android:orientation="vertical">
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
 
-                    <TextView
-                        android:id="@+id/textView_Instructions"
-                        android:layout_width="match_parent"
-                        android:layout_height="match_parent"
-                        android:text="Instructions"
-                        android:textColor="#ffff"
-                        android:textSize="16sp" />
+                        <TextView
+                            android:id="@+id/textView_Instructions"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:text="Instructions"
+                            android:textColor="#ffff"
+                            android:textSize="16sp" />
 
-                </LinearLayout>
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:layout_weight="1"
-                    android:orientation="vertical">
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
 
-                    <TextView
-                        android:id="@+id/textView_Line"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="4"
-                        android:fontFamily="@font/inter_bold"
-                        android:gravity="center"
-                        android:text="Number"
-                        android:textColor="#FFFFFF"
-                        android:textSize="20sp"
-                        android:textStyle="bold" />
+                        <TextView
+                            android:id="@+id/textView_Line"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="4"
+                            android:fontFamily="@font/inter_bold"
+                            android:gravity="center"
+                            android:text="Number"
+                            android:textColor="#FFFFFF"
+                            android:textSize="20sp"
+                            android:textStyle="bold" />
 
-                    <TextView
-                        android:id="@+id/textView_Duration"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:gravity="center"
-                        android:text="Duration"
-                        android:textColor="#FFFFFF"
-                        android:textSize="16dp" />
-                </LinearLayout>
+                        <TextView
+                            android:id="@+id/textView_Duration"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:gravity="center"
+                            android:text="Duration"
+                            android:textColor="#FFFFFF"
+                            android:textSize="16dp" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:layout_weight="1"
-                    android:orientation="vertical">
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
 
-                    <TextView
-                        android:id="@+id/textView_StopNumber"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:text="15"
-                        android:textAlignment="textEnd"
-                        android:textColor="#FFFFFF"
-                        android:textSize="16sp" />
+                        <TextView
+                            android:id="@+id/textView_StopNumber"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="15"
+                            android:textAlignment="textEnd"
+                            android:textColor="#FFFFFF"
+                            android:textSize="16sp" />
 
-                    <TextView
-                        android:id="@+id/textView5"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:text="Stops"
-                        android:textAlignment="textEnd"
-                        android:textColor="#FFFFFF"
-                        android:textSize="16sp" />
-                </LinearLayout>
+                        <TextView
+                            android:id="@+id/textView5"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="Stops"
+                            android:textAlignment="textEnd"
+                            android:textColor="#FFFFFF"
+                            android:textSize="16sp" />
+                    </LinearLayout>
 
-            </LinearLayout>
+                </LinearLayout>
 
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:layout_weight="1"
-                android:orientation="horizontal">
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_weight="1"
+                    android:orientation="horizontal">
 
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:layout_weight="1"
-                    android:orientation="vertical">
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
 
-                    <TextView
-                        android:id="@+id/textView_PreviousLocation"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:gravity="center_vertical"
-                        android:text="Previous Location"
-                        android:textAlignment="center"
-                        android:textColor="#FFFFFF" />
-                </LinearLayout>
+                        <TextView
+                            android:id="@+id/textView_PreviousLocation"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:gravity="center_vertical"
+                            android:text="Previous Location"
+                            android:textAlignment="center"
+                            android:textColor="#FFFFFF" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:layout_weight="1"
-                    android:orientation="vertical">
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
 
-                    <ImageView
-                        android:layout_width="match_parent"
-                        android:layout_height="50dp"
-                        android:src="@drawable/ic_baseline_directions_bus_24" />
+                        <ImageView
+                            android:layout_width="match_parent"
+                            android:layout_height="50dp"
+                            android:src="@drawable/ic_baseline_directions_bus_24" />
 
-                    <TextView
-                        android:id="@+id/textView_Distance"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:text="Distance"
-                        android:textAlignment="center"
-                        android:textColor="#FFFFFF" />
-                </LinearLayout>
+                        <TextView
+                            android:id="@+id/textView_Distance"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:text="Distance"
+                            android:textAlignment="center"
+                            android:textColor="#FFFFFF" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:layout_weight="1"
-                    android:orientation="vertical">
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:layout_weight="1"
+                        android:orientation="vertical">
 
-                    <TextView
-                        android:id="@+id/textView_NextLocation"
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:gravity="center_vertical"
-                        android:text="NextLocation"
-                        android:textAlignment="center"
-                        android:textColor="#FFFFFF" />
-                </LinearLayout>
+                        <TextView
+                            android:id="@+id/textView_NextLocation"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:gravity="center_vertical"
+                            android:text="NextLocation"
+                            android:textAlignment="center"
+                            android:textColor="#FFFFFF" />
+                    </LinearLayout>
 
-            </LinearLayout>
-        </LinearLayout>
+                </LinearLayout>
+            </LinearLayout>
 
+            <LinearLayout
+                android:id="@+id/bustimingview"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal"
+                android:visibility="gone"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/linearLayout2">
+
+                <TableRow
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent">
+
+                    <TextView
+                        android:id="@+id/ServiceNumber"
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1.2"
+                        android:padding="10sp"
+                        android:text="busNumber"
+                        android:textColor="#000000"
+                        android:textSize="16sp" />
+
+                    <androidx.constraintlayout.widget.ConstraintLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <ImageView
+                            android:id="@+id/NextBus1Feature"
+                            android:layout_width="22dp"
+                            android:layout_height="0dp"
+                            android:layout_marginTop="10dp"
+                            android:src="@drawable/wheelchair_green"
+                            app:layout_constraintBottom_toTopOf="@+id/NextBus1Type"
+                            app:layout_constraintEnd_toStartOf="@+id/NextBus1"
+                            app:layout_constraintTop_toTopOf="parent"
+                            app:layout_constraintVertical_bias="1.0"></ImageView>
+
+                        <TextView
+                            android:id="@+id/NextBus1"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:paddingLeft="0sp"
+                            android:paddingTop="5sp"
+                            android:paddingRight="5sp"
+                            android:text="Bus1"
+                            android:textAlignment="textEnd"
+                            android:textSize="18sp"
+                            android:textStyle="bold"
+                            app:layout_constraintEnd_toEndOf="parent"
+                            app:layout_constraintTop_toTopOf="parent" />
+
+                        <TextView
+                            android:id="@+id/NextBus1Type"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:paddingLeft="5sp"
+                            android:paddingRight="5sp"
+                            android:paddingBottom="1sp"
+                            android:text="Bus1Type"
+                            android:textAlignment="textEnd"
+                            android:textSize="10sp"
+                            android:textStyle="bold"
+                            app:layout_constraintEnd_toEndOf="parent"
+                            app:layout_constraintStart_toStartOf="parent"
+                            app:layout_constraintTop_toBottomOf="@+id/NextBus1" />
+
+                    </androidx.constraintlayout.widget.ConstraintLayout>
+
+                    <androidx.constraintlayout.widget.ConstraintLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <TextView
+                            android:id="@+id/NextBus2"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:paddingLeft="0sp"
+                            android:paddingTop="5sp"
+                            android:paddingRight="5sp"
+                            android:text="Bus2"
+                            android:textAlignment="textEnd"
+                            android:textSize="18sp"
+                            android:textStyle="bold"
+                            app:layout_constraintEnd_toEndOf="parent"
+                            app:layout_constraintTop_toTopOf="parent" />
+
+                        <TextView
+                            android:id="@+id/NextBus2Type"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:paddingLeft="5sp"
+                            android:paddingRight="5sp"
+                            android:paddingBottom="1sp"
+                            android:text="Bus2Type"
+                            android:textAlignment="textEnd"
+                            android:textSize="10sp"
+                            android:textStyle="bold"
+                            app:layout_constraintEnd_toEndOf="parent"
+                            app:layout_constraintStart_toStartOf="parent"
+                            app:layout_constraintTop_toBottomOf="@+id/NextBus2" />
+
+                        <ImageView
+                            android:id="@+id/NextBus2Feature"
+                            android:layout_width="22dp"
+                            android:layout_height="0dp"
+                            android:layout_marginTop="10dp"
+                            android:src="@drawable/wheelchair_green"
+                            app:layout_constraintBottom_toTopOf="@+id/NextBus2Type"
+                            app:layout_constraintEnd_toStartOf="@+id/NextBus2"
+                            app:layout_constraintTop_toTopOf="parent"
+                            app:layout_constraintVertical_bias="1.0"></ImageView>
+
+                    </androidx.constraintlayout.widget.ConstraintLayout>
+
+                    <androidx.constraintlayout.widget.ConstraintLayout
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1">
+
+                        <TextView
+                            android:id="@+id/NextBus3"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:layout_weight="1"
+                            android:paddingLeft="0sp"
+                            android:paddingTop="5sp"
+                            android:paddingRight="5sp"
+                            android:text="Bus3"
+                            android:textAlignment="textEnd"
+                            android:textSize="18sp"
+                            android:textStyle="bold"
+                            app:layout_constraintEnd_toEndOf="parent"
+                            app:layout_constraintTop_toTopOf="parent" />
+
+                        <TextView
+                            android:id="@+id/NextBus3Type"
+                            android:layout_width="0dp"
+                            android:layout_height="wrap_content"
+                            android:paddingLeft="5sp"
+                            android:paddingRight="5sp"
+                            android:paddingBottom="1sp"
+                            android:text="Bus3Type"
+                            android:textAlignment="textEnd"
+                            android:textSize="10sp"
+                            android:textStyle="bold"
+                            app:layout_constraintEnd_toEndOf="parent"
+                            app:layout_constraintStart_toStartOf="parent"
+                            app:layout_constraintTop_toBottomOf="@+id/NextBus3" />
+
+                        <ImageView
+                            android:id="@+id/NextBus3Feature"
+                            android:layout_width="22dp"
+                            android:layout_height="0dp"
+                            android:layout_marginTop="10dp"
+                            android:src="@drawable/wheelchair_green"
+                            app:layout_constraintBottom_toTopOf="@+id/NextBus3Type"
+                            app:layout_constraintEnd_toStartOf="@+id/NextBus3"
+                            app:layout_constraintTop_toTopOf="parent"
+                            app:layout_constraintVertical_bias="1.0"></ImageView>
+                    </androidx.constraintlayout.widget.ConstraintLayout>
+
+                </TableRow>
+            </LinearLayout>
+        </androidx.constraintlayout.widget.ConstraintLayout>
+
         <!--<TextView
             android:id="@+id/textViewDuration"
             android:layout_width="wrap_content"
Index: app/src/main/res/layout/activity_route.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:fitsSystemWindows=\"true\"\r\n    tools:context=\".views.MainActivity\"\r\n    tools:openDrawer=\"start\">\r\n<!--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Route\">-->\r\n\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        android:background=\"@color/white\"\r\n        android:paddingTop=\"30dp\"\r\n        android:visibility=\"visible\"\r\n        app:headerLayout=\"@layout/header\"\r\n        app:menu=\"@menu/side_menu\">\r\n\r\n    </com.google.android.material.navigation.NavigationView>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/contentView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/relativeLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@color/app_yellow\"\r\n            android:padding=\"10dp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/menu_icon\"\r\n                android:layout_width=\"40dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:src=\"@drawable/ic_baseline_menu_24\"\r\n                android:visibility=\"visible\" />\r\n\r\n        </RelativeLayout>\r\n\r\n        <AutoCompleteTextView\r\n            android:id=\"@+id/actfrom\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginRight=\"10dp\"\r\n            android:completionThreshold=\"1\"\r\n            android:hint=\"From\"\r\n            android:singleLine=\"true\" />\r\n\r\n        <AutoCompleteTextView\r\n            android:id=\"@+id/actto\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginRight=\"10dp\"\r\n            android:completionThreshold=\"1\"\r\n            android:hint=\"To\"\r\n            android:singleLine=\"true\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/buttonRoute\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginRight=\"10dp\"\r\n            android:text=\"Route\" />\r\n\r\n        <androidx.cardview.widget.CardView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginRight=\"10dp\"\r\n            android:layout_weight=\"1\"\r\n            android:elevation=\"12dp\"\r\n            app:cardCornerRadius=\"12dp\">\r\n\r\n            <fragment\r\n                android:id=\"@+id/routemap\"\r\n                android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                tools:context=\".MapsActivity\" />\r\n        </androidx.cardview.widget.CardView>\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/textviewplaceholder\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"20dp\"\r\n            android:text=\"Start By Searching For a route\"\r\n            android:textAlignment=\"center\"\r\n            android:textSize=\"24sp\" />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/routeRecyclerView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:paddingBottom=\"15dp\" />\r\n    </LinearLayout>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/content\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\" >\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    <!--</androidx.constraintlayout.widget.ConstraintLayout>-->\r\n</androidx.drawerlayout.widget.DrawerLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_route.xml b/app/src/main/res/layout/activity_route.xml
--- a/app/src/main/res/layout/activity_route.xml	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/res/layout/activity_route.xml	(date 1658841634604)
@@ -50,36 +50,66 @@
                 android:src="@drawable/ic_baseline_menu_24"
                 android:visibility="visible" />
 
+            <ImageView
+                android:id="@+id/dropdown_icon"
+                android:layout_width="40dp"
+                android:layout_height="40dp"
+                android:layout_alignParentEnd="true"
+                android:layout_marginEnd="10dp"
+                android:src="@drawable/ic_baseline_arrow_drop_down_24" />
+
         </RelativeLayout>
 
-        <AutoCompleteTextView
-            android:id="@+id/actfrom"
-            android:layout_width="match_parent"
-            android:layout_height="50dp"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="10dp"
-            android:layout_marginRight="10dp"
-            android:completionThreshold="1"
-            android:hint="From"
-            android:singleLine="true" />
+        <LinearLayout
+            android:id="@+id/dropdownmenu"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="vertical"
+            tools:visibility="visible">
+
+            <AutoCompleteTextView
+                android:id="@+id/actfrom"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginRight="10dp"
+                android:completionThreshold="1"
+                android:hint="From"
+                android:singleLine="true" />
 
-        <AutoCompleteTextView
-            android:id="@+id/actto"
-            android:layout_width="match_parent"
-            android:layout_height="50dp"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:completionThreshold="1"
-            android:hint="To"
-            android:singleLine="true" />
+            <AutoCompleteTextView
+                android:id="@+id/actto"
+                android:layout_width="match_parent"
+                android:layout_height="50dp"
+                android:layout_marginLeft="10dp"
+                android:layout_marginRight="10dp"
+                android:completionThreshold="1"
+                android:hint="To"
+                android:singleLine="true" />
 
-        <Button
-            android:id="@+id/buttonRoute"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="Route" />
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+
+                <Spinner
+                    android:id="@+id/spinnerTransportType"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:layout_marginLeft="15dp"
+                    android:layout_weight="1" />
+
+                <Button
+                    android:id="@+id/buttonRoute"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginLeft="10dp"
+                    android:layout_marginRight="10dp"
+                    android:layout_weight="1"
+                    android:text="Route" />
+            </LinearLayout>
+        </LinearLayout>
 
         <androidx.cardview.widget.CardView
             android:layout_width="match_parent"
@@ -118,12 +148,5 @@
             android:paddingBottom="15dp" />
     </LinearLayout>
 
-    <androidx.constraintlayout.widget.ConstraintLayout
-        android:id="@+id/content"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent" >
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-
     <!--</androidx.constraintlayout.widget.ConstraintLayout>-->
 </androidx.drawerlayout.widget.DrawerLayout>
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/transportme/api/ApiBusStopService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme.api;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport android.content.Context;\r\nimport android.os.Build;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.RequiresApi;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.time.Duration;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.transportme.BusService;\r\nimport sg.edu.np.mad.transportme.BusStop;\r\nimport sg.edu.np.mad.transportme.NextBus;\r\n\r\npublic class ApiBusStopService {\r\n\r\n    Context context;\r\n    public ApiBusStopService(Context c) {\r\n        this.context = c;\r\n    } //Constructor, passes in context\r\n\r\n    // Interface for API service that gets the bus stops\r\n    public interface VolleyResponseListener{\r\n        void onError(String message);\r\n        void onResponse(ArrayList<BusStop> busStops);\r\n    }\r\n    // Interface for API service that get the bus services timings for each bus stop\r\n    public interface VolleyResponseListener2{\r\n        void onError(String message);\r\n        void onResponse(ArrayList<BusStop> busStopsService);\r\n    }\r\n    public interface VolleyResponseListener3{\r\n        void onError(String message);\r\n        void onResponse(ArrayList<BusStop> busStopRoute);\r\n    }\r\n\r\n    public void getBusStop(VolleyResponseListener volleyResponseListener){\r\n\r\n        String busStopsUrl = \"https://mad-assignment-backend.herokuapp.com/BusStops\"; //Call all bus stops from heroku backend\r\n        ArrayList<BusStop> busStops = new ArrayList<>();\r\n        // Calls API using JsonObjectRequest\r\n        JsonObjectRequest jsonObjectRequestBusStops = new JsonObjectRequest(Request.Method.GET, busStopsUrl, null,\r\n                new Response.Listener<JSONObject>() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        try {\r\n                            JSONArray jsonArray = response.getJSONArray(\"Results\");\r\n                            for(int i = 0; i<jsonArray.length();i++) { //Convert JsonArray object to objects\r\n                                JSONObject jsonBusStop = jsonArray.getJSONObject(i);\r\n                                String busStopCode = jsonBusStop.get(\"BusStopCode\").toString();\r\n                                String roadName = jsonBusStop.get(\"RoadName\").toString();\r\n                                String description = jsonBusStop.get(\"Description\").toString();\r\n                                Double latitude = Double.parseDouble(jsonBusStop.get(\"Latitude\").toString());\r\n                                Double longitude = Double.parseDouble(jsonBusStop.get(\"Longitude\").toString());\r\n                                busStops.add(new BusStop(busStopCode, roadName, description, latitude, longitude));\r\n                            }\r\n                            volleyResponseListener.onResponse(busStops); //Triggers on response callback in MainActivity, returns the busStops\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                            volleyResponseListener.onError(\"Cannot Get Bus Stops\");\r\n                        }\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Log.e(\"TAG\", error.getMessage(), error);\r\n            }\r\n        });\r\n        MySingleton.getInstance(context).addToRequestQueue(jsonObjectRequestBusStops);\r\n    }\r\n\r\n    //Another API to call the Bus Services(Bus Timings) for each bus stop\r\n    public void getBusService(ArrayList<BusStop> nearBusStops, VolleyResponseListener2 volleyResponseListener2){\r\n        ArrayList<BusStop> busStopsService = new ArrayList<>();\r\n        String busStopsUrl = \"https://mad-assignment-backend.herokuapp.com/BusCodes?codes=\";\r\n        for (int i = 0; i < nearBusStops.size();i++){\r\n            String code = nearBusStops.get(i).getBusStopCode();\r\n            if (i !=0){\r\n                busStopsUrl = busStopsUrl+\",\" +code; //Formats url of bus stop codes for API\r\n            }\r\n            else {\r\n                busStopsUrl = busStopsUrl+code;\r\n            }\r\n        }\r\n\r\n        JsonObjectRequest jsonObjectRequestBusStop = new JsonObjectRequest(Request.Method.GET, busStopsUrl, null,\r\n                new Response.Listener<JSONObject>() {\r\n                    @RequiresApi(api = Build.VERSION_CODES.O)\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        Log.d(\"Yes\", response.toString());\r\n                        try {\r\n                            //Load api Data into objects\r\n                            JSONArray jsonArrayBusStops = response.getJSONArray(\"Results\");\r\n                            List<String> nextBusString = Arrays.asList(\"NextBus\",\"NextBus2\",\"NextBus3\");\r\n                            ArrayList<BusStop> nearBusStopLoaded = new ArrayList<>();\r\n                            LocalDateTime current = LocalDateTime.now(); //Get Current time to compare with estimated arrival time\r\n\r\n                            DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"uuuu-MM-dd'T'HH:mm:ssXXXXX\");\r\n                            //Load API data into objects\r\n                            for (int i=0; i<jsonArrayBusStops.length(); i++){\r\n                                JSONObject jsonBusStop = (JSONObject) jsonArrayBusStops.get(i);\r\n                                BusStop nearBusStop = nearBusStops.get(i);\r\n                                ArrayList<BusService> busServices = new ArrayList<>();\r\n                                JSONArray jsonArrayBusServices = jsonBusStop.getJSONArray(\"Services\");\r\n                                for (int j=0;j<jsonArrayBusServices.length();j++){\r\n                                    JSONObject jsonBusService = jsonArrayBusServices.getJSONObject(j);\r\n                                    String serviceNumber = jsonBusService.getString(\"ServiceNo\");\r\n                                    ArrayList<NextBus> nextBuses = new ArrayList<>();\r\n\r\n                                    for (String nextbusstring: nextBusString){\r\n                                        JSONObject nextbus = jsonBusService.getJSONObject(nextbusstring);\r\n                                        // Load next bus data to object\r\n                                        String estArrival = nextbus.getString(\"EstimatedArrival\");\r\n                                        String arrivalMinutes = \"Null\";\r\n                                        if (!estArrival.equals(\"\")){  //Get difference between time for Arrival Time\r\n                                            LocalDateTime parsed = LocalDateTime.parse(estArrival,DATE_TIME_FORMATTER);\r\n                                            Duration duration = Duration.between(current,parsed);\r\n                                            arrivalMinutes = String.valueOf(duration.toMinutes());\r\n                                        }\r\n\r\n                                        String Latitude =  nextbus.getString(\"Latitude\");\r\n                                        String Longitude = nextbus.getString(\"Longitude\");\r\n                                        String Load = nextbus.getString(\"Load\");\r\n                                        String Feature = nextbus.getString(\"Feature\");\r\n                                        String Type = nextbus.getString(\"Type\");\r\n                                        nextBuses.add(new NextBus(arrivalMinutes,Latitude,Longitude,Load,Feature,Type));\r\n                                    }\r\n\r\n                                    busServices.add(new BusService(serviceNumber,nextBuses));\r\n                                }\r\n                                nearBusStop.setBusServices(busServices);\r\n                                nearBusStopLoaded.add(nearBusStop);\r\n                            }\r\n                            volleyResponseListener2.onResponse(nearBusStopLoaded); //Call the onResponse callback in MainActivity\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Log.e(\"TAG\", error.getMessage(), error);\r\n                volleyResponseListener2.onError(\"Cannot Get data\"); //Call onError Callback in main Activity\r\n            }\r\n        });\r\n        jsonObjectRequestBusStop.setRetryPolicy(new DefaultRetryPolicy(\r\n                9000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        MySingleton.getInstance(context).addToRequestQueue(jsonObjectRequestBusStop); //Add to request queue\r\n\r\n        volleyResponseListener2.onResponse(busStopsService);\r\n    }\r\n    public void getBusRoute(String busServiceNumber, VolleyResponseListener3 volleyResponseListener3){\r\n\r\n        String busRouteUrl = \"https://mad-assignment-backend.herokuapp.com/BusRoutes?services=\" + busServiceNumber; //Call all bus stops from heroku backend\r\n        ArrayList<BusStop> busStopRoute = new ArrayList<>();\r\n        // Calls API using JsonObjectRequest\r\n        JsonObjectRequest jsonObjectRequestBusStops = new JsonObjectRequest(Request.Method.GET, busRouteUrl, null,\r\n                new Response.Listener<JSONObject>() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        try {\r\n                            JSONArray jsonArray = response.getJSONArray(busServiceNumber);\r\n                            for(int i = 0; i<jsonArray.length();i++) { //Convert JsonArray object to objects\r\n                                for (int x =0; x<globalBusStops.size(); x++){\r\n                                    if(((String) jsonArray.get(i)).equals(globalBusStops.get(x).getBusStopCode())){\r\n                                        busStopRoute.add(globalBusStops.get(x));\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            volleyResponseListener3.onResponse(busStopRoute); //Triggers on response callback in MainActivity, returns the busStops\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                            volleyResponseListener3.onError(\"Cannot Get Bus Route\");\r\n                        }\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Log.e(\"TAG\", error.getMessage(), error);\r\n            }\r\n        });\r\n        MySingleton.getInstance(context).addToRequestQueue(jsonObjectRequestBusStops);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/api/ApiBusStopService.java b/app/src/main/java/sg/edu/np/mad/transportme/api/ApiBusStopService.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/api/ApiBusStopService.java	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/api/ApiBusStopService.java	(date 1658833370458)
@@ -89,6 +89,7 @@
     public void getBusService(ArrayList<BusStop> nearBusStops, VolleyResponseListener2 volleyResponseListener2){
         ArrayList<BusStop> busStopsService = new ArrayList<>();
         String busStopsUrl = "https://mad-assignment-backend.herokuapp.com/BusCodes?codes=";
+
         for (int i = 0; i < nearBusStops.size();i++){
             String code = nearBusStops.get(i).getBusStopCode();
             if (i !=0){
@@ -98,13 +99,13 @@
                 busStopsUrl = busStopsUrl+code;
             }
         }
-
+        Log.d("Hello", busStopsUrl);
         JsonObjectRequest jsonObjectRequestBusStop = new JsonObjectRequest(Request.Method.GET, busStopsUrl, null,
                 new Response.Listener<JSONObject>() {
                     @RequiresApi(api = Build.VERSION_CODES.O)
                     @Override
                     public void onResponse(JSONObject response) {
-                        Log.d("Yes", response.toString());
+                        Log.d("Hello", response.toString());
                         try {
                             //Load api Data into objects
                             JSONArray jsonArrayBusStops = response.getJSONArray("Results");
@@ -148,6 +149,7 @@
                                 nearBusStop.setBusServices(busServices);
                                 nearBusStopLoaded.add(nearBusStop);
                             }
+                            Log.d("Helloloaded", nearBusStopLoaded.toString());
                             volleyResponseListener2.onResponse(nearBusStopLoaded); //Call the onResponse callback in MainActivity
 
                         } catch (JSONException e) {
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_carpark.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_carpark_layout.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_route.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_test.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/step_walk_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/edittext_bg.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_person_24.xml\" value=\"0.32\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.2681904761904762\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_month_view.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/calendar_layout.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.14\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_24.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/marker_icon.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.16\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_busSign_background.xml\" value=\"0.291\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.15896739130434784\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_maintry.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.15896739130434784\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_route_layout.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.15896739130434784\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/mipmap-anydpi-v26/ic_busSign.xml\" value=\"0.196\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml\" value=\"0.2345\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/favourite.xml\" value=\"0.1625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.15625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_profile.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.2708333333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml\" value=\"0.2164855072463768\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.19701086956521738\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.3625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD/TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.23007246376811594\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.12360688956433637\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_login_page.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/activity_main.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.33\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/.idea/misc.xml	(date 1658841152852)
@@ -3,21 +3,15 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
-        <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_carpark.xml" value="0.358695652173913" />
-        <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_carpark_layout.xml" value="0.358695652173913" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml" value="0.14722222222222223" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml" value="0.358695652173913" />
-        <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml" value="0.25" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml" value="0.358695652173913" />
-        <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_route.xml" value="0.18802083333333333" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_test.xml" value="0.18802083333333333" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml" value="0.18802083333333333" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml" value="0.18802083333333333" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml" value="0.18802083333333333" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml" value="0.358695652173913" />
         <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml" value="0.18802083333333333" />
-        <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/step_walk_layout.xml" value="0.18802083333333333" />
-        <entry key="..\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml" value="0.36666666666666664" />
         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/edittext_bg.xml" value="0.2985" />
         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_person_24.xml" value="0.32" />
         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml" value="0.2681904761904762" />
@@ -54,9 +48,14 @@
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_busSign_background.xml" value="0.291" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml" value="0.15896739130434784" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_maintry.xml" value="0.4" />
-        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml" value="0.15896739130434784" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_route.xml" value="0.4" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml" value="0.35082604470359574" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml" value="0.4" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_route_layout.xml" value="0.264" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml" value="0.15896739130434784" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/step_bus_layout.xml" value="0.536" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/step_car_layout.xml" value="0.4" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/step_mrt_layout.xml" value="0.264" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/mipmap-anydpi-v26/ic_busSign.xml" value="0.196" />
         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml" value="0.2345" />
         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/favourite.xml" value="0.1625" />
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">TransportMe</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"select\">Mode of Transport</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 8de11bcdc2e4f1d2118bc90f09012be4ab98dae6)
+++ b/app/src/main/res/values/strings.xml	(date 1658822871442)
@@ -4,4 +4,8 @@
     <string name="select">Mode of Transport</string>
     <!-- TODO: Remove or change this placeholder text -->
     <string name="hello_blank_fragment">Hello blank fragment</string>
+    <string-array name="travelmodes">
+        <item>Public Transport</item>
+        <item>Driving</item>
+    </string-array>
 </resources>
\ No newline at end of file

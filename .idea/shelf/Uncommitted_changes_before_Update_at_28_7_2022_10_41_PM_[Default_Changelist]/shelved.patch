Index: app/src/main/java/sg/edu/np/mad/transportme/Route.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static sg.edu.np.mad.transportme.ReminderApplication.CHANNEL_ID_2;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminder;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\nimport static sg.edu.np.mad.transportme.views.MainActivity.networkprovider;\r\nimport android.speech.tts.TextToSpeech;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Notification;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Point;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Parcelable;\r\nimport android.speech.tts.TextToSpeech;\r\nimport android.transition.AutoTransition;\r\nimport android.transition.TransitionManager;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.RetryPolicy;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.Dash;\r\nimport com.google.android.gms.maps.model.Dot;\r\nimport com.google.android.gms.maps.model.Gap;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.PatternItem;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.maps.android.SphericalUtil;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.jsoup.Jsoup;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\nimport sg.edu.np.mad.transportme.views.CarparkActivity;\r\nimport sg.edu.np.mad.transportme.views.MainActivity;\r\n\r\npublic class Route extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener, AdapterView.OnItemSelectedListener {\r\n    DrawerLayout drawerLayout;\r\n    LinearLayout contentView;\r\n    NavigationView navigationView;\r\n    static final float END_SCALE = 0.7f;\r\n    private GoogleMap mMap;\r\n    String currentLocation = \"\";\r\n    Spinner traveloption;\r\n    String travelmode = \"transit\";\r\n    Boolean notificationchoice = false;\r\n    ArrayList<RouteStep> routestepsreminder;\r\n    TextToSpeech t1;\r\n    Boolean drivingchoice;\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_route);\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.routemap);\r\n        mapFragment.getMapAsync(this);\r\n        ImageView notificationbellimage = findViewById(R.id.notificationbellimage);\r\n        notificationbellimage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(notificationchoice == false){\r\n                    notificationbellimage.setImageResource(R.drawable.filled_bell);\r\n                    notificationchoice = true;\r\n                }\r\n                else if(notificationchoice == true){\r\n                    notificationbellimage.setImageResource(R.drawable.grey_bell);\r\n                    notificationchoice = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        ImageView DropdownMenu = findViewById(R.id.dropdown_icon);\r\n        LinearLayout dropdown = findViewById(R.id.dropdownmenu);\r\n        DropdownMenu.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (dropdown.getVisibility() == View.VISIBLE) {\r\n\r\n                    dropdown.setVisibility(View.GONE);\r\n                    TransitionManager.beginDelayedTransition(contentView, new AutoTransition());\r\n                } else {\r\n                    dropdown.setVisibility(View.VISIBLE);\r\n                    TransitionManager.beginDelayedTransition(contentView, new AutoTransition());\r\n                }\r\n            }\r\n        });\r\n\r\n        traveloption = findViewById(R.id.spinnerTransportType);\r\n        ArrayAdapter<CharSequence> travelmodeadapter = ArrayAdapter.createFromResource(this, R.array.travelmodes, android.R.layout.simple_spinner_item);\r\n        travelmodeadapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        traveloption.setAdapter(travelmodeadapter);\r\n\r\n        traveloption.setOnItemSelectedListener(this);\r\n\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        contentView = findViewById(R.id.contentView);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_route);\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (drawerLayout.isDrawerVisible(GravityCompat.START)) {\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                } else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n\r\n        AutoCompleteTextView atcfrom = findViewById(R.id.actfrom);\r\n        AutoCompleteTextView actto = findViewById(R.id.actto);\r\n\r\n        ArrayList<String> searchStrings = new ArrayList<String>();\r\n        for (int i = 0; i < globalBusStops.size(); i++) {\r\n            searchStrings.add(globalBusStops.get(i).getDescription());\r\n            searchStrings.add(globalBusStops.get(i).getRoadName());\r\n\r\n        }\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, searchStrings);\r\n        atcfrom.setAdapter(adapter);\r\n        actto.setAdapter(adapter);\r\n\r\n        atcfrom.setText(\"Current Location\");\r\n        //makes it such that when user clicks on edit textbox, textbox is not automatically filled with \"CHANGE PASSWORD\"\r\n        atcfrom.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b) {\r\n                    atcfrom.setText(\"\");\r\n                } else /*if(b == false && password.getEditableText().equals(\"\"))*/ {\r\n                    if (!(atcfrom.getEditableText().length() > 0)) {\r\n                        atcfrom.setText(\"Current Location\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        TextView placeholder = findViewById(R.id.textviewplaceholder);\r\n        Button routeButton = findViewById(R.id.buttonRoute);\r\n\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                    Manifest.permission.CAMERA,\r\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            Toast.makeText(Route.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        } else {\r\n            if (locationManager.isProviderEnabled(networkprovider)) {\r\n                locationManager.requestLocationUpdates(networkprovider, 2000, 2, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Log.d(\"location\", \"location changed\");\r\n                        Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                        Double Longitude = location.getLongitude();\r\n                        currentLocation = Latitude.toString() + \",\" + Longitude.toString();\r\n                        routeButton.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                mMap.clear();\r\n                                String from = String.valueOf(atcfrom.getText());\r\n                                String to = String.valueOf(actto.getText());\r\n                                if (to.equals(\"\")) {\r\n                                    Toast.makeText(Route.this, \"Please Add a location to route to\", Toast.LENGTH_LONG).show();\r\n                                } else {\r\n                                    direction(from, to);\r\n                                }\r\n                                placeholder.setVisibility(View.GONE);\r\n                            }\r\n                        });\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        if (notificationchoice){\r\n                            try{\r\n                                for (int i = 0;i<routestepsreminder.size();i++){\r\n                                    RouteStep routestep = routestepsreminder.get(i);\r\n                                    Double destnDist = SphericalUtil.computeDistanceBetween(latLng,routestep.Latlongend);\r\n                                    if (destnDist<=100.0){\r\n                                        if(routestep.TravelMode!=\"Drive\"){\r\n                                            Notification notification = new NotificationCompat.Builder(getApplicationContext(),CHANNEL_ID_2)\r\n                                                    .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                    .setContentTitle(!routestep.TravelMode.equals(\"Walk\")? \"Remember to alight\":\"You are close!\")\r\n                                                    .setContentText(\"You are arriving at \"+ routestep.NextLocation + \"!\")\r\n                                                    .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                    .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                    .build();\r\n\r\n                                            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(getApplicationContext());\r\n                                            notificationManager.notify(1,notification);\r\n                                            routestepsreminder.remove(routestep);\r\n                                            Log.d(\"YEs\",\"Yes\");\r\n                                        }\r\n                                    }\r\n\r\n                                }\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            /*if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 2, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Log.d(\"location\", \"location changed\");\r\n\r\n                        Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                        Double Longitude = location.getLongitude();\r\n                        currentLocation = Latitude.toString() + \",\" + Longitude.toString();\r\n                        routeButton.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                mMap.clear();\r\n                                String from = String.valueOf(atcfrom.getText());\r\n                                String to = String.valueOf(actto.getText());\r\n                                direction(from, to);\r\n                                placeholder.setVisibility(View.GONE);\r\n                            }\r\n                        });\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15f));\r\n                    }\r\n                });\r\n            }*/\r\n\r\n\r\n        }\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        mMap = googleMap;\r\n        LatLng singapore = new LatLng(1.3521, 103.8198);\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(singapore, 10f));\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            return;\r\n        }\r\n        mMap.setMyLocationEnabled(true);\r\n    }\r\n\r\n    private void direction(String From, String Destination){\r\n        RequestQueue requestQueue= Volley.newRequestQueue(this);\r\n        ArrayList<RouteStep> routeSteps = new ArrayList<>();\r\n        if (From.equals(\"Current Location\")){\r\n            if (!currentLocation.isEmpty()){\r\n                From = currentLocation;\r\n            }\r\n            else{\r\n                Toast.makeText(Route.this, \"Cannot Get Current location\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n        /*String url = \"https://mad-assignment-backend.herokuapp.com/routetest\";*/\r\n        String url = Uri.parse(\"https://maps.googleapis.com/maps/api/directions/json\")\r\n                .buildUpon()\r\n                .appendQueryParameter(\"destination\",Destination)\r\n                .appendQueryParameter(\"origin\",From)\r\n                .appendQueryParameter(\"mode\",travelmode)\r\n                .appendQueryParameter(\"key\",\"AIzaSyC5TLFoQWmsorYN0--un6BieG6VI2STONE\")\r\n                .toString();\r\n        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response){\r\n                try {\r\n                    String status = response.getString(\"status\");\r\n                    if (status.equals(\"OK\")) {\r\n                        JSONArray routes = response.getJSONArray(\"routes\");\r\n\r\n                        ArrayList<LatLng> points;\r\n                        LatLngBounds.Builder bounds = LatLngBounds.builder();\r\n                        if(routes.length()<1){\r\n                            Toast.makeText(Route.this, \"Cannot find route, be more specific\", Toast.LENGTH_LONG).show();\r\n                        }\r\n\r\n                        for (int i = 0; i < routes.length(); i++) {\r\n\r\n                            PolylineOptions polylineOptions = null;\r\n                            JSONArray legs = routes.getJSONObject(i).getJSONArray(\"legs\");\r\n\r\n                            for (int j = 0; j < legs.length(); j++) {\r\n                                String start_address = legs.getJSONObject(j).getString(\"start_address\");\r\n                                String end_address = legs.getJSONObject(j).getString(\"end_address\");\r\n                                RouteStep firstRouteStep = new RouteStep();\r\n                                firstRouteStep.Instructions = \"From \"+ start_address;\r\n                                routeSteps.add(firstRouteStep);\r\n                                JSONArray steps = legs.getJSONObject(j).getJSONArray(\"steps\");\r\n                                Log.d(\"kek\", steps.toString());\r\n                                for (int k = 0; k < steps.length(); k++) {\r\n                                    ArrayList<LatLng> stepcoordinates = new ArrayList<>();\r\n                                    String polyline = steps.getJSONObject(k).getJSONObject(\"polyline\").getString(\"points\");\r\n                                    String instructions = Jsoup.parse(steps.getJSONObject(k).getString(\"html_instructions\")).text();\r\n                                    String travelmode = steps.getJSONObject(k).getString(\"travel_mode\");\r\n\r\n                                    Double startlat = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lat\");\r\n                                    Double startlong = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lng\");\r\n                                    Double endlat = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lat\");\r\n                                    Double endlong = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lng\");\r\n\r\n                                    LatLng latlongstart = new LatLng(startlat,startlong);\r\n                                    LatLng latlongend = new LatLng(endlat,endlong);\r\n\r\n                                    List<LatLng> list = decodePoly(polyline);\r\n\r\n                                    points = new ArrayList<>();\r\n                                    polylineOptions = new PolylineOptions();\r\n                                    for (int l = 0; l < list.size(); l++) {\r\n                                        LatLng position = new LatLng((list.get(l)).latitude, (list.get(l)).longitude);\r\n                                        points.add(position);\r\n                                        bounds.include(position);\r\n                                        stepcoordinates.add(position);\r\n                                    }\r\n                                    polylineOptions.addAll(points);\r\n                                    polylineOptions.width(24);\r\n\r\n                                    String travelMode;\r\n                                    String distance = steps.getJSONObject(k).getJSONObject(\"distance\").getString(\"text\");\r\n                                    String duration = steps.getJSONObject(k).getJSONObject(\"duration\").getString(\"text\");\r\n                                    String previousLocation;\r\n                                    String nextLocation;\r\n                                    if (travelmode.equals(\"WALKING\")){\r\n                                        /*polylineOptions.color(ContextCompat.getColor(Route.this, R.color.purple_500));*/\r\n                                        polylineOptions.color(Color.parseColor(\"#62d431\"));\r\n                                        MarkerOptions marker = new MarkerOptions().position(latlongstart);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n                                        marker = new MarkerOptions().position(latlongend);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n                                        /*List<PatternItem> pattern = Arrays.asList(\r\n                                                new Dot(), new Gap(20), new Dash(30), new Gap(20));\r\n                                        polylineOptions.setPattern(pattern);*/\r\n                                        travelMode = \"Walk\";\r\n                                        previousLocation = k==0?start_address: steps.getJSONObject(k-1).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n                                        nextLocation = k==steps.length()-1? end_address: steps.getJSONObject(k+1).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n\r\n                                    }\r\n                                    else if (travelmode.equals(\"TRANSIT\")){\r\n                                        JSONObject transitline = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\");\r\n                                        String transitlinecolor = transitline.getString(\"color\");\r\n                                        travelMode = transitline.getJSONObject(\"vehicle\").getString(\"name\");\r\n                                        if (travelMode.equals(\"Bus\")){\r\n                                            transitlinecolor = \"#c62020\";\r\n                                        }\r\n                                        polylineOptions.color(Color.parseColor(transitlinecolor));\r\n\r\n                                        MarkerOptions marker = new MarkerOptions().position(latlongstart);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n\r\n                                        bounds.include(latlongstart);\r\n                                        stepcoordinates.add(latlongstart);\r\n\r\n                                        marker = new MarkerOptions().position(latlongend);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n\r\n                                        bounds.include(latlongend);\r\n                                        stepcoordinates.add(latlongend);\r\n\r\n                                        previousLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n                                        nextLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n\r\n                                    }\r\n                                    else{\r\n                                        travelMode = \"Drive\";\r\n                                        previousLocation = \"Driving Previous Location\";\r\n                                        nextLocation = \"Driving Next Location\";\r\n                                        polylineOptions.color(Color.parseColor(\"#305978\"));\r\n                                        bounds.include(latlongstart);\r\n                                        stepcoordinates.add(latlongstart);\r\n                                        bounds.include(latlongend);\r\n                                        stepcoordinates.add(latlongend);\r\n                                        MarkerOptions marker = new MarkerOptions().position(latlongstart);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_blue_24));\r\n                                        mMap.addMarker(marker);\r\n\r\n                                        marker = new MarkerOptions().position(latlongend);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_blue_24));\r\n                                        mMap.addMarker(marker);\r\n\r\n                                    }\r\n\r\n                                    RouteStep currentStep = new RouteStep(latlongstart,latlongend,travelMode,instructions, distance,duration,previousLocation,nextLocation);\r\n                                    currentStep.stepcoordinates = stepcoordinates;\r\n                                    if (travelmode.equals(\"TRANSIT\")) {\r\n                                        currentStep.LineName = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"name\");\r\n                                        currentStep.NumStops = steps.getJSONObject(k).getJSONObject(\"transit_details\").getInt(\"num_stops\");\r\n                                        if (travelMode.equals(\"Subway\")){\r\n                                            currentStep.LineColor = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"color\");\r\n                                        }\r\n                                    }\r\n\r\n                                    routeSteps.add(currentStep);\r\n                                    polylineOptions.geodesic(true);\r\n                                    mMap.addPolyline(polylineOptions);\r\n                                }\r\n                                RouteStep lastRouteStep = new RouteStep();\r\n                                lastRouteStep.Instructions = \"Arrive at \"+ end_address;\r\n                                routeSteps.add(lastRouteStep);\r\n                            }\r\n\r\n                        }\r\n                        RecyclerView routerv = findViewById(R.id.routeRecyclerView);\r\n                        StepAdapter adapter = new StepAdapter(Route.this, routeSteps);\r\n                        LinearLayoutManager layout = new LinearLayoutManager(Route.this);\r\n\r\n                        routerv.setAdapter(adapter);\r\n                        routerv.setLayoutManager(layout);\r\n\r\n                        /*mMap.addMarker(new MarkerOptions().position(new LatLng(1.3595533, 103.94306)));\r\n                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3212432, 103.7743509)));*/\r\n                        routestepsreminder = new ArrayList<>();\r\n                        if (notificationchoice){\r\n                            for (int i=1; i<routeSteps.size()-1; i++){\r\n                                routestepsreminder.add(routeSteps.get(i));\r\n                            }\r\n                        }\r\n\r\n\r\n                        final LatLngBounds boundsbuilt = bounds.build();\r\n                        Point point = new Point();\r\n                        getWindowManager().getDefaultDisplay().getSize(point);\r\n                        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));\r\n                    }\r\n                } catch(JSONException e){\r\n                    Toast.makeText(Route.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener(){\r\n            @Override\r\n            public void onErrorResponse(VolleyError error){\r\n                Toast.makeText(Route.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n        RetryPolicy retryPolicy = new DefaultRetryPolicy(30000, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n        jsonObjectRequest.setRetryPolicy(retryPolicy);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n    public void moveMapCamera(ArrayList<LatLng> latlngbounds){\r\n        LatLngBounds.Builder bounds = LatLngBounds.builder();\r\n        for (LatLng latlongobject : latlngbounds){\r\n            bounds.include(latlongobject);\r\n        }\r\n        final LatLngBounds boundsbuilt = bounds.build();\r\n        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));\r\n    }\r\n    public static List<LatLng> decodePoly(final String encodedPath) {\r\n        int len = encodedPath.length();\r\n\r\n        // For speed we preallocate to an upper bound on the final length, then\r\n        // truncate the array before returning.\r\n        final List<LatLng> path = new ArrayList<LatLng>();\r\n        int index = 0;\r\n        int lat = 0;\r\n        int lng = 0;\r\n\r\n        while (index < len) {\r\n            int result = 1;\r\n            int shift = 0;\r\n            int b;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lat += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            result = 1;\r\n            shift = 0;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lng += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            path.add(new LatLng(lat * 1e-5, lng * 1e-5));\r\n        }\r\n\r\n        return path;\r\n    }\r\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\r\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n                finish();\r\n\r\n                /*fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;*/\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(Route.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                finish();\r\n                break;\r\n            case R.id.nav_profile:\r\n                Intent intentMainActivity = new Intent(Route.this, MainActivity.class);\r\n                intentMainActivity.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                intentMainActivity.putExtra(\"Profile\", \"Yes\");\r\n\r\n                startActivity(intentMainActivity);\r\n                finish();\r\n                /*mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());*/\r\n                break;\r\n            case R.id.nav_route:\r\n                break;\r\n            case R.id.nav_fares:\r\n                Intent fareintent = new Intent(Route.this, WeekActivity.class);\r\n                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(fareintent);\r\n                finish();\r\n                break;\r\n            case R.id.nav_rate:\r\n                Uri uri = Uri.parse(\"market://details?id=sg.edu.np.mad.transportme\");\r\n                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n                // To count with Play market backstack, After pressing back button,\r\n                // to taken back to our application, we need to add following flags to intent.\r\n                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n                try {\r\n                    startActivity(goToMarket);\r\n                } catch (ActivityNotFoundException e) {\r\n                    startActivity(new Intent(Intent.ACTION_VIEW,\r\n                            Uri.parse(\"https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\")));\r\n                    break;\r\n                }\r\n            case R.id.nav_share:\r\n                Intent sendIntent = new Intent();\r\n                sendIntent.setAction(Intent.ACTION_SEND);\r\n                sendIntent.setType(\"text/plain\");\r\n                sendIntent.putExtra(Intent.EXTRA_TEXT, \"Download the Best Bus App In Singapore! \\n\\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\");\r\n                startActivity(Intent.createChooser(sendIntent,\"Share With\"));\r\n                break;\r\n            case R.id.nav_privacy:\r\n                Intent privacyintent = new Intent(Route.this, PrivacyPolicyActivty.class);\r\n                privacyintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(privacyintent);\r\n\r\n                break;\r\n\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n        String choice = adapterView.getItemAtPosition(i).toString();\r\n        Log.d(\"travechoice\", choice);\r\n        if (choice.equals(\"Public Transport\")){\r\n            travelmode = \"transit\";\r\n        }\r\n        else{\r\n            travelmode=\"driving\";\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/Route.java b/app/src/main/java/sg/edu/np/mad/transportme/Route.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(revision 07b8990fd2094e9f03275e799b4719a9495b2268)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(date 1659018889874)
@@ -3,9 +3,12 @@
 import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
 import static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;
 import static sg.edu.np.mad.transportme.ReminderApplication.CHANNEL_ID_2;
+import static sg.edu.np.mad.transportme.ReminderApplication.getContext;
 import static sg.edu.np.mad.transportme.user.LoginPage.globalReminder;
 import static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;
 import static sg.edu.np.mad.transportme.views.MainActivity.networkprovider;
+
+import android.app.Activity;
 import android.speech.tts.TextToSpeech;
 import androidx.annotation.NonNull;
 import androidx.annotation.RequiresApi;
@@ -46,6 +49,7 @@
 import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
+import android.view.inputmethod.InputMethodManager;
 import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.AutoCompleteTextView;
@@ -241,6 +245,8 @@
                         routeButton.setOnClickListener(new View.OnClickListener() {
                             @Override
                             public void onClick(View view) {
+                                InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
+                                imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
                                 mMap.clear();
                                 String from = String.valueOf(atcfrom.getText());
                                 String to = String.valueOf(actto.getText());
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"sg.edu.np.mad.transportme\"\r\n        minSdk 21\r\n        targetSdk 32\r\n        versionCode 17\r\n        versionName '2'\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables.useSupportLibrary = true\r\n        multiDexEnabled true\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    packagingOptions {\r\n        resources.excludes.add(\"META-INF/*\")\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.4.2'\r\n    implementation 'com.google.android.material:material:1.6.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.google.android.gms:play-services-maps:18.0.2'\r\n    implementation 'com.google.android.gms:play-services-vision:20.1.3'\r\n\r\n    implementation 'com.android.volley:volley:1.2.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-bom:30.1.0'\r\n    implementation 'com.google.gms:google-services:4.3.10'\r\n    implementation 'com.google.firebase:firebase-database:20.0.5'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    implementation 'it.sephiroth.android.library.imagezoom:imagezoom:2.3.0'\r\n    implementation 'io.github.imablanco:zoomy:1.0.0'\r\n    implementation 'com.jsibbold:zoomage:1.3.1'\r\n\r\n    implementation group: 'at.favre.lib', name: 'bcrypt', version: '0.9.0'\r\n    implementation \"androidx.swiperefreshlayout:swiperefreshlayout:1.1.0\"\r\n    implementation 'org.jsoup:jsoup:1.15.2'\r\n\r\n    implementation 'com.github.AnyChart:AnyChart-Android:1.1.2'\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n\r\n    implementation 'com.google.maps.android:android-maps-utils:2.3.0'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 07b8990fd2094e9f03275e799b4719a9495b2268)
+++ b/app/build.gradle	(date 1659018822895)
@@ -49,6 +49,7 @@
     implementation 'com.google.firebase:firebase-bom:30.1.0'
     implementation 'com.google.gms:google-services:4.3.10'
     implementation 'com.google.firebase:firebase-database:20.0.5'
+    implementation 'androidx.compose.ui:ui:1.1.1'
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
Index: app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme.views;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static android.graphics.BitmapFactory.decodeResource;\r\n\r\nimport static sg.edu.np.mad.transportme.BitmapResize.getResizedBitmap;\r\nimport static sg.edu.np.mad.transportme.ReminderApplication.CHANNEL_ID_2;\r\nimport static sg.edu.np.mad.transportme.ReminderService.reached;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalCloseness;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalName;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalRemindCloseness;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminder;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminderBusService;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.grbsChange;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.Notification;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Criteria;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.util.SparseArray;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.Polyline;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.gms.vision.Frame;\r\nimport com.google.android.gms.vision.text.TextBlock;\r\nimport com.google.android.gms.vision.text.TextRecognizer;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.maps.android.SphericalUtil;\r\n\r\nimport java.sql.Array;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\n\r\nimport sg.edu.np.mad.transportme.BusService;\r\nimport sg.edu.np.mad.transportme.BusStop;\r\nimport sg.edu.np.mad.transportme.BusStopAdapter;\r\nimport sg.edu.np.mad.transportme.DistanceCalculator;\r\nimport sg.edu.np.mad.transportme.NextBus;\r\nimport sg.edu.np.mad.transportme.PrivacyPolicyActivty;\r\nimport sg.edu.np.mad.transportme.R;\r\nimport sg.edu.np.mad.transportme.ReminderService;\r\nimport sg.edu.np.mad.transportme.Route;\r\nimport sg.edu.np.mad.transportme.WeekActivity;\r\nimport sg.edu.np.mad.transportme.api.ApiBusStopService;\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\n\r\n\r\npublic class MainActivity extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\r\n    public static String networkprovider = LocationManager.GPS_PROVIDER;\r\n    public static ArrayList<Marker> mlistlocation;\r\n    LinearLayout mapandrv;\r\n    FrameLayout fragmentlayout;\r\n    LinearLayout reminderView;      //CHANGE TO SCROLLVIEW LATER\r\n    Button reminderButton;\r\n    Button cancelReminderButton;\r\n    LinearLayout noReminderLayout;\r\n    SwipeRefreshLayout swipeLayoutRemind;\r\n    ConstraintLayout remindInfoLayout;\r\n    GoogleMap map;\r\n    Uri image_uri;\r\n    LocationManager locationManager;\r\n    DrawerLayout drawerLayout;\r\n    FloatingActionButton cameraSearch;\r\n    SwipeRefreshLayout swipeRefreshLayout;\r\n    BottomNavigationView bottomNavigationView;\r\n    static final float END_SCALE = 0.7f;\r\n    ConstraintLayout contentView;\r\n    public static Boolean favourite = false;\r\n    private static final String[] LOCATION_PERMS = {\r\n            Manifest.permission.ACCESS_COARSE_LOCATION,\r\n            Manifest.permission.ACCESS_FINE_LOCATION\r\n    };\r\n    private static final int LOCATION_REQUEST = 1337;\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        swipeRefreshLayout = findViewById(R.id.swipeLayout);\r\n        ProgressDialog progressDialog = new ProgressDialog(MainActivity.this, R.style.MyAlertDialogStyle); //Show Loading icon when the user first loads\r\n        progressDialog.show();\r\n        progressDialog.setContentView(R.layout.progress_dialog);\r\n        progressDialog.getWindow().setBackgroundDrawableResource(\r\n                android.R.color.transparent\r\n        );\r\n\r\n        contentView = findViewById(R.id.content);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_home);\r\n\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (drawerLayout.isDrawerVisible(GravityCompat.START)) {\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                } else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n        cameraSearch = findViewById(R.id.fab);\r\n        cameraSearch.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n               /* Intent cameraIntent = new Intent(MainActivity.this, CameraSearch.class);\r\n                startActivity(cameraIntent);*/\r\n                selectImage();\r\n            }\r\n        });\r\n\r\n        FirebaseDatabase db = FirebaseDatabase.getInstance(\"https://transportme-c607f-default-rtdb.asia-southeast1.firebasedatabase.app/\");     //Initialise database instance\r\n        DatabaseReference reminderReference = db.getReference()\r\n                .child(\"User\")\r\n                //.child(firebaseUser.getUid())\r\n                .child(globalName)\r\n                .child(\"Reminder\");\r\n\r\n        mapandrv = findViewById(R.id.MapAndRV);\r\n        fragmentlayout = findViewById(R.id.frame_layout);\r\n        reminderView = findViewById(R.id.reminderView);\r\n        reminderButton = findViewById(R.id.reminderButton);\r\n        cancelReminderButton = findViewById(R.id.cancelReminderButton);\r\n        noReminderLayout = findViewById(R.id.noReminderLayout);\r\n        swipeLayoutRemind = findViewById(R.id.swipeLayoutRemind);\r\n        remindInfoLayout = findViewById(R.id.remindInfoLayout);\r\n        bottomNavigationView = findViewById(R.id.bottomNavigationView); // load botttom navigation bar\r\n        bottomNavigationView.setOnItemSelectedListener(item -> {\r\n\r\n            switch (item.getItemId()) {\r\n                case R.id.home:\r\n                    fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                    reminderView.setVisibility(View.GONE);\r\n                    cameraSearch.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.VISIBLE);\r\n                    favourite = false;\r\n                    break;\r\n                case R.id.favourites:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new FavouritesFragment());\r\n                    favourite = true;\r\n                    break;\r\n                case R.id.search:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new SearchFragment());\r\n                    break;\r\n                case R.id.mrtmap:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new MrtMapFragment());\r\n                    break;\r\n                case R.id.notify:\r\n                    reminderView.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    fragmentlayout.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.GONE);\r\n                    findViewById(R.id.busrouterecyclerView).setVisibility(View.GONE);\r\n                    if(globalReminder == null)\r\n                    {\r\n                        noReminderLayout.setVisibility(View.VISIBLE);\r\n                        swipeLayoutRemind.setVisibility(View.GONE);\r\n                        remindInfoLayout.setVisibility(View.GONE);\r\n                    } else {\r\n                        noReminderLayout.setVisibility(View.GONE);\r\n                        swipeLayoutRemind.setVisibility(View.VISIBLE);\r\n                        remindInfoLayout.setVisibility(View.VISIBLE);\r\n                    }\r\n                    break;\r\n                case R.id.nav_carpark:\r\n                    Intent intent = new Intent(MainActivity.this, CarparkActivity.class);\r\n                    startActivity(intent);\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        Intent recievingEnd = getIntent();\r\n        String gotoprofile = recievingEnd.getStringExtra(\"Profile\");\r\n        if (gotoprofile != null) {\r\n            mapandrv.setVisibility(View.INVISIBLE);\r\n            fragmentlayout.setVisibility(View.VISIBLE);\r\n            replaceFragment(new ProfileFragment());\r\n            navigationView.setCheckedItem(R.id.nav_profile);\r\n            progressDialog.dismiss();\r\n        }\r\n\r\n        cancelReminderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n            }\r\n        });\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.mrtmap);\r\n        mapFragment.getMapAsync(this);\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        ArrayList<BusStop> busStops = globalBusStops;\r\n\r\n        // If location permission is rejected, send toast message to user\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                    Manifest.permission.CAMERA,\r\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            Toast.makeText(MainActivity.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        } else {\r\n\r\n            if (locationManager.isProviderEnabled(networkprovider)) { //Comments in this section is the same as the one in the LocationManager.NETWORK_PROVIDER\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(networkprovider, 60000, 10, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear(); //Clear all existing markers on the map\r\n                                for (int i = 0; i < busStops.size(); i++) { //Get all bus stop given the radius\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                Collections.sort(closeBusStops);\r\n                                if (closeBusStops.size() > 0) { // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview when they onresponse is recieved\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if (closeBusStops.size() == 0) { // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                swipeLayoutRemind.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(networkprovider, 6000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                if (globalReminder != null) {\r\n                                    Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                    Double Longitude = location.getLongitude();\r\n\r\n\r\n                                    LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                    Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n                                    ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                                    remindBusStop.add(globalReminder);\r\n                                    RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                                    BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n\r\n                                    LatLng destnLL = new LatLng(globalReminder.getLatitude(), globalReminder.getLongitude());\r\n                                    Double destnDist = SphericalUtil.computeDistanceBetween(latLng, destnLL);\r\n                                    TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                                    String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                                    remindDestnDist.setText(display);\r\n\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusRoute(globalReminderBusService, new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Route, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                            Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n                                            if (destnDist <= globalRemindCloseness) {\r\n                                                ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                                for (BusStop bs : busStopRouteLoaded) {\r\n                                                    bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(), bs.getLongitude())));\r\n                                                    busStopDist.add(bs);\r\n                                                }\r\n                                                Collections.sort(busStopDist);\r\n\r\n                                                Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                                if (index - closestBusStopIndex < 2) {\r\n                                                    Notification notification = new NotificationCompat.Builder(MainActivity.this, CHANNEL_ID_2)\r\n                                                            .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                            .setContentTitle(\"Reminder to Alight\")\r\n                                                            .setContentText(\"You are arriving \" + globalReminder.getDescription() + \"!\")\r\n                                                            .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                            .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                            .build();\r\n\r\n                                                    NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                                    notificationManager.notify(1, notification);\r\n\r\n                                                    reminderReference.setValue(null);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeLayoutRemind.setRefreshing(false); //Close refreshing Icon\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(networkprovider, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n                        if (globalReminder != null) {\r\n                            ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                            remindBusStop.add(globalReminder);\r\n                            RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                            BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                            rv.setAdapter(adapter);\r\n                            rv.setLayoutManager(layout);\r\n\r\n                            LatLng destnLL = new LatLng(globalReminder.getLatitude(), globalReminder.getLongitude());\r\n                            Double destnDist = SphericalUtil.computeDistanceBetween(latLng, destnLL);\r\n                            TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                            String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                            remindDestnDist.setText(display);\r\n\r\n\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusRoute(globalReminderBusService, new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Route, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                    Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n\r\n                                    if (destnDist <= globalRemindCloseness) {\r\n                                        ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                        for (BusStop bs : busStopRouteLoaded) {\r\n                                            bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(), bs.getLongitude())));\r\n                                            busStopDist.add(bs);\r\n                                        }\r\n                                        Collections.sort(busStopDist);\r\n\r\n                                        Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                        if (index - closestBusStopIndex < 2 && reached != true) {\r\n                                            Notification notification = new NotificationCompat.Builder(MainActivity.this, CHANNEL_ID_2)\r\n                                                    .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                    .setContentTitle(\"Reminder to Alight\")\r\n                                                    .setContentText(\"You are arriving \" + globalReminder.getDescription() + \"!\")\r\n                                                    .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                    .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                    .build();\r\n\r\n                                            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                            notificationManager.notify(1, notification);\r\n\r\n                                            reminderReference.setValue(null);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++) { //Get bus stops nearby\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        Collections.sort(closeBusStops);\r\n                        if (closeBusStops.size() > 0) { //Call API if there nearby bus stops, if there arent, send toast message\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() { //call api to get bus services\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview on response from API\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n                        }\r\n                        if (closeBusStops.size() == 0) {\r\n                            Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f)); //Move camera to here the user is\r\n\r\n                    }\r\n                });\r\n            } /*else if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { //This section is similar to the LocationManager.GPS_PROVIDER section above\r\n                //For users to refresh the recyclerview, runs the location reqeust updates\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() { //Whene user refresh run code\r\n                        locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude();\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear();\r\n                                for (int i = 0; i < busStops.size(); i++) {\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                Collections.sort(closeBusStops);\r\n                                if (closeBusStops.size() > 0) { // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if (closeBusStops.size() == 0) { // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                swipeLayoutRemind.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 6000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                if (globalReminder != null)\r\n                                {\r\n                                    Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                    Double Longitude = location.getLongitude();\r\n\r\n\r\n                                    LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                    Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                    ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                                    remindBusStop.add(globalReminder);\r\n                                    RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                                    BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n\r\n                                    LatLng destnLL = new LatLng(globalReminder.getLatitude(),globalReminder.getLongitude());\r\n                                    Double destnDist = SphericalUtil.computeDistanceBetween(latLng,destnLL);\r\n                                    TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                                    String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                                    remindDestnDist.setText(display);\r\n\r\n\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusRoute(globalReminderBusService,new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this,\"Cannot Get Bus Route, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                        }\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                            Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n                                            if(destnDist <= globalRemindCloseness)\r\n                                            {\r\n                                                ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                                for (BusStop bs : busStopRouteLoaded)\r\n                                                {\r\n                                                    bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(),bs.getLongitude())));\r\n                                                    busStopDist.add(bs);\r\n                                                }\r\n                                                Collections.sort(busStopDist);\r\n\r\n                                                Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                                if(index - closestBusStopIndex < 2)\r\n                                                {\r\n                                                    Notification notification = new NotificationCompat.Builder(MainActivity.this,CHANNEL_ID_2)\r\n                                                            .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                            .setContentTitle(\"Reminder to Alight\")\r\n                                                            .setContentText(\"You are arriving \"+ globalReminder.getDescription() + \"!\")\r\n                                                            .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                            .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                            .build();\r\n\r\n                                                    NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                                    notificationManager.notify(1,notification);\r\n\r\n                                                    reminderReference.setValue(null);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeLayoutRemind.setRefreshing(false); //Close refreshing Icon\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n                        if(globalReminder != null)\r\n                        {\r\n                            ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                            remindBusStop.add(globalReminder);\r\n                            RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                            BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                            rv.setAdapter(adapter);\r\n                            rv.setLayoutManager(layout);\r\n\r\n                            LatLng destnLL = new LatLng(globalReminder.getLatitude(),globalReminder.getLongitude());\r\n                            Double destnDist = SphericalUtil.computeDistanceBetween(latLng,destnLL);\r\n                            TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                            String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                            remindDestnDist.setText(display);\r\n\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusRoute(globalReminderBusService,new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this,\"Cannot Get Bus Route, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                }\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                    Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n                                    if(destnDist <= globalRemindCloseness)\r\n                                    {\r\n                                        ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                        for (BusStop bs : busStopRouteLoaded)\r\n                                        {\r\n                                            bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(),bs.getLongitude())));\r\n                                            busStopDist.add(bs);\r\n                                        }\r\n                                        Collections.sort(busStopDist);\r\n\r\n                                        Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                        if(index - closestBusStopIndex < 2)\r\n                                        {\r\n                                            Notification notification = new NotificationCompat.Builder(MainActivity.this,CHANNEL_ID_2)\r\n                                                    .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                    .setContentTitle(\"Reminder to Alight\")\r\n                                                    .setContentText(\"You are arriving \"+ globalReminder.getDescription() + \"!\")\r\n                                                    .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                    .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                    .build();\r\n\r\n                                            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                            notificationManager.notify(1,notification);\r\n\r\n                                            reminderReference.setValue(null);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++) { //Get nearby bus stops\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        Collections.sort(closeBusStops);\r\n                        if (closeBusStops.size() > 0) {\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                        if (closeBusStops.size() == 0) {\r\n                            Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n\r\n                    }\r\n                });\r\n            }*/\r\n        }\r\n        grbsChange.observe(this, new Observer<String>() {\r\n            @Override\r\n            public void onChanged(String changedValue) {\r\n                reminderUpdate(reminderButton, findViewById(R.id.recyclerViewRemind));\r\n            }\r\n        });\r\n        new Handler().postDelayed(new Runnable() {      //Gives app time to load global variables from Login Page before setting value\r\n            @Override\r\n            public void run() {\r\n                grbsChange.setValue(globalReminderBusService);\r\n            }\r\n        }, 6500);\r\n        cancelReminderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                swipeLayoutRemind.setVisibility(View.GONE);\r\n                remindInfoLayout.setVisibility(View.GONE);\r\n                noReminderLayout.setVisibility(View.VISIBLE);\r\n                reminderReference.setValue(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (globalReminder != null)\r\n        {\r\n            startReminderService();\r\n            reached = false;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        stopReminderService();\r\n        if (reached == true)\r\n        {\r\n            FirebaseDatabase db = FirebaseDatabase.getInstance(\"https://transportme-c607f-default-rtdb.asia-southeast1.firebasedatabase.app/\");     //Initialise database instance\r\n            DatabaseReference reminderReference = db.getReference()\r\n                    .child(\"User\")\r\n                    //.child(firebaseUser.getUid())\r\n                    .child(globalName)\r\n                    .child(\"Reminder\");\r\n            reminderReference.setValue(null);\r\n        }\r\n    }\r\n\r\n    public void startReminderService()\r\n    {\r\n        Intent serviceIntent = new Intent(this, ReminderService.class);\r\n        ContextCompat.startForegroundService(this, serviceIntent);\r\n    }\r\n\r\n    public void stopReminderService()\r\n    {\r\n        Intent serviceIntent = new Intent(this, ReminderService.class);\r\n        stopService(serviceIntent);\r\n    }\r\n\r\n    public void reminderUpdate(Button reminderButton, RecyclerView rv) {\r\n        if (!(globalReminder == null)) {\r\n            reminderButton.setText(\"Alight at \" + globalReminder.getDescription());\r\n            reminderButton.setVisibility(View.VISIBLE);\r\n        } else {\r\n            reminderButton.setVisibility(View.INVISIBLE);\r\n        }\r\n    }\r\n\r\n    public void moveMapsCamera(Double latitude, Double longitude) { //Function to enable move camera from other classes\r\n        LatLng latlongmove = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latlongmove)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n\r\n    }\r\n\r\n    public void busrouteview(ArrayList<BusStop> busStopList) {\r\n        SwipeRefreshLayout orv = findViewById(R.id.swipeLayout);\r\n        RecyclerView rv = findViewById(R.id.busrouterecyclerView);\r\n        if (busStopList.size() > 0) {\r\n            BusStopAdapter adapter = new BusStopAdapter(busStopList, MainActivity.this);\r\n            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n            rv.setAdapter(adapter);\r\n            rv.setLayoutManager(layout);\r\n            orv.setVisibility(View.GONE);\r\n            rv.setVisibility(View.VISIBLE);\r\n        }\r\n        fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n        reminderView.setVisibility(View.GONE);\r\n        cameraSearch.setVisibility(View.VISIBLE);\r\n        mapandrv.setVisibility(View.VISIBLE);\r\n        orv.setVisibility(View.GONE);\r\n        rv.setVisibility(View.VISIBLE);\r\n        /*swipeRefreshLayout.setVisibility(View.VISIBLE);*/\r\n        favourite = false;\r\n        bottomNavigationView.setSelectedItemId(R.id.nav_home);\r\n\r\n    }\r\n\r\n    public void busroute(Double latitude, Double longitude, BusStop currentStop, List<Marker> mList, List<LatLng> lList) {\r\n        LatLng latlongmarker = new LatLng(latitude, longitude);\r\n        Bitmap icon = Bitmap.createBitmap(15, 15, Bitmap.Config.ARGB_8888);\r\n        Drawable shape = getResources().getDrawable(R.drawable.marker_icon);\r\n        Canvas canvas = new Canvas(icon);\r\n        shape.setBounds(0, 0, icon.getWidth(), icon.getHeight());\r\n        shape.draw(canvas);\r\n        Marker marker = map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()).icon(BitmapDescriptorFactory.fromBitmap(icon)));\r\n        lList.add(latlongmarker);\r\n        mList.add(marker);\r\n    }\r\n\r\n    public Polyline polyline(List<LatLng> lList) {\r\n        Polyline polyline = map.addPolyline(new PolylineOptions().addAll(lList).color(Color.RED));\r\n        return polyline;\r\n    }\r\n\r\n    public void camerazoom(List<Marker> mList) {\r\n        LatLngBounds.Builder builder = new LatLngBounds.Builder();\r\n        for (Marker m : mList) {\r\n            builder.include(m.getPosition());\r\n        }\r\n        LatLngBounds bounds = builder.build();\r\n        CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, 30);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    public void removemarker(List<Marker> mList, Polyline line) {\r\n        if (line != null) {\r\n            line.remove();\r\n        }\r\n        for (Marker m : mList) {\r\n\r\n            m.remove();\r\n        }\r\n        SwipeRefreshLayout orv = findViewById(R.id.swipeLayout);\r\n        RecyclerView rv = findViewById(R.id.busrouterecyclerView);\r\n        rv.setVisibility(View.GONE);\r\n        orv.setVisibility(View.VISIBLE);\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n        Criteria criteria = new Criteria();\r\n        String provider = locationManager.getBestProvider(criteria, true);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                    Manifest.permission.CAMERA,\r\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            return;\r\n        }\r\n        Location location = locationManager.getLastKnownLocation(provider);\r\n        double latitude = location.getLatitude();\r\n        double longitude = location.getLongitude();\r\n        LatLng latLng = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latLng)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    private void replaceFragment(Fragment fragment) { //Replace fragment for nav bar\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        fragmentTransaction.replace(R.id.frame_layout, fragment);\r\n        fragmentTransaction.commit();\r\n    }\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        map = googleMap;\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            return;\r\n        }\r\n        map.setMyLocationEnabled(true);\r\n\r\n    }\r\n\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n                fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(MainActivity.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                break;\r\n            case R.id.nav_profile:\r\n                mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());\r\n                break;\r\n            case R.id.nav_route:\r\n                Intent routeintent = new Intent(MainActivity.this, Route.class);\r\n                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(routeintent);\r\n                break;\r\n            case R.id.nav_fares:\r\n                Intent fareintent = new Intent(MainActivity.this, WeekActivity.class);\r\n                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(fareintent);\r\n                break;\r\n            case R.id.nav_privacy:\r\n                Intent privacyintent = new Intent(MainActivity.this, PrivacyPolicyActivty.class);\r\n                privacyintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(privacyintent);\r\n                break;\r\n            case R.id.nav_rate:\r\n                Uri uri = Uri.parse(\"market://details?id=sg.edu.np.mad.transportme\");\r\n                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n                // To count with Play market backstack, After pressing back button,\r\n                // to taken back to our application, we need to add following flags to intent.\r\n                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n                try {\r\n                    startActivity(goToMarket);\r\n                } catch (ActivityNotFoundException e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\"https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\")));\r\n                break;\r\n            }\r\n            case R.id.nav_share:\r\n                Intent sendIntent = new Intent();\r\n                sendIntent.setAction(Intent.ACTION_SEND);\r\n                sendIntent.setType(\"text/plain\");\r\n                sendIntent.putExtra(Intent.EXTRA_TEXT, \"Download the Best Bus App In Singapore! \\n\\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\");\r\n                startActivity(Intent.createChooser(sendIntent,\"Share With\"));\r\n                break;\r\n\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n    @Override\r\n    public void onBackPressed(){\r\n        if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }else{\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n    public void addBusLocations(BusService currentService){\r\n        ArrayList<NextBus> nextbuses = currentService.getNextBuses();\r\n        mlistlocation = new ArrayList<>();\r\n\r\n        for (NextBus nextbus : nextbuses){\r\n            LatLng latlongbus = new LatLng(Double.valueOf(nextbus.getLatitude()), Double.valueOf(nextbus.getLongitude()));\r\n            MarkerOptions marker = new MarkerOptions().position(latlongbus).title(currentService.getServiceNumber());\r\n            Bitmap icon = Bitmap.createBitmap(50, 50, Bitmap.Config.ARGB_8888);\r\n            Drawable shape = getResources().getDrawable(R.drawable.ic_baseline_directions_bus_yellow_24);\r\n            Canvas canvas = new Canvas(icon);\r\n            shape.setBounds(0, 0, icon.getWidth(), icon.getHeight());\r\n            shape.draw(canvas);\r\n            Marker busmarker = map.addMarker(new MarkerOptions().position(latlongbus).title(currentService.getServiceNumber()).icon(BitmapDescriptorFactory.fromBitmap(icon)));\r\n            mlistlocation.add(busmarker);\r\n        }\r\n\r\n        map.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(Double.valueOf(nextbuses.get(0).getLatitude()), Double.valueOf(nextbuses.get(0).getLongitude())), 16.2f));\r\n    }\r\n    private void selectImage() {\r\n        final CharSequence[] options = {\"Take Photo\",\"Choose from Gallery\",\"Cancel\" };\r\n        /*final CharSequence[] options = { \"Take Photo\", \"Choose from Gallery\",\"Cancel\" };*/\r\n        ImageView image = new ImageView(this);\r\n        image.setImageResource(R.drawable.bus_stop_next_to_pond);\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\r\n        builder.setTitle(\"Choose Image to Scan\");\r\n        builder.setIcon(R.drawable.appsplashicon);\r\n        builder.setView(image);\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    ContentValues values = new ContentValues();\r\n                    values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n                    values.put(MediaStore.Images.Media.DESCRIPTION, \"From the Camera\");\r\n                    image_uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,values);\r\n                    Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    takePicture.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n                    startActivityForResult(takePicture,0);\r\n\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n                    Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                    startActivityForResult(pickPhoto , 1);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n                    dialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != RESULT_CANCELED) {\r\n            switch (requestCode) {\r\n                case 0:\r\n                    if (resultCode == RESULT_OK /*&& data != null*/) {\r\n                        try{\r\n                            ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                            Bitmap selectedImage = MediaStore.Images.Media.getBitmap(this.getContentResolver(), image_uri);\r\n                            /*Bitmap selectedImage = (Bitmap) data.getExtras().get(\"data\");*/\r\n                            selectedImage = getResizedBitmap(selectedImage,1000);\r\n                            TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                            Frame frameImage = new Frame.Builder().setBitmap(selectedImage).build();\r\n                            SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                            for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                for (int x=0; i< globalBusStops.size(); i++){\r\n                                    BusStop currentStop = globalBusStops.get(i);\r\n                                    if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                            textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                            textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                        cameraBusStops.add(currentStop);\r\n                                        LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            if(cameraBusStops.size() > 0){\r\n                                Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                    @Override\r\n                                    public void onError(String message) {\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                    }\r\n                                    @Override\r\n                                    public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                        RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                        BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                        LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                        rv.setAdapter(adapter);\r\n                                        rv.setLayoutManager(layout);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else{\r\n                                Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                            }\r\n\r\n                        }\r\n                        catch(Exception e){\r\n                        }\r\n\r\n                    }\r\n\r\n                    break;\r\n                case 1:\r\n                    if (resultCode == RESULT_OK && data != null) {\r\n                        Uri selectedImage = data.getData();\r\n                        String[] filePathColumn = {MediaStore.Images.Media.DATA};\r\n\r\n                        if (selectedImage != null) {\r\n                            Cursor cursor = getContentResolver().query(selectedImage,\r\n                                    filePathColumn, null, null, null);\r\n                            if (cursor != null) {\r\n                                cursor.moveToFirst();\r\n\r\n                                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);\r\n                                String picturePath = cursor.getString(columnIndex);\r\n                                Bitmap selectedPhoneImage = BitmapFactory.decodeFile(picturePath);\r\n\r\n                                try{\r\n                                    ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                                    TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                                    Frame frameImage = new Frame.Builder().setBitmap(selectedPhoneImage).build();\r\n                                    SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                                    for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                        TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                        for (int x=0; i< globalBusStops.size(); i++){\r\n                                            BusStop currentStop = globalBusStops.get(i);\r\n                                            if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                                    textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                                    textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                                cameraBusStops.add(currentStop);\r\n                                                LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                                map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                                map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if(cameraBusStops.size() > 0){\r\n                                        Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                        ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                        apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                            @Override\r\n                                            public void onError(String message) {\r\n                                                Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                            }\r\n                                            @Override\r\n                                            public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                                RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                                BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                                LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                                rv.setAdapter(adapter);\r\n                                                rv.setLayoutManager(layout);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else{\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                                    }\r\n\r\n                                }\r\n                                catch(Exception e){\r\n                                    Log.d(\"HAHA\", \"failed\");\r\n                                }\r\n                                cursor.close();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\r\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(revision 07b8990fd2094e9f03275e799b4719a9495b2268)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(date 1659018202191)
@@ -62,10 +62,12 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Environment;
 import android.os.Handler;
 import android.provider.MediaStore;
 import android.util.Log;
 import android.util.SparseArray;
+import android.view.LayoutInflater;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.Button;
@@ -100,6 +102,7 @@
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.maps.android.SphericalUtil;
 
+import java.io.File;
 import java.sql.Array;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -109,6 +112,7 @@
 import sg.edu.np.mad.transportme.BusService;
 import sg.edu.np.mad.transportme.BusStop;
 import sg.edu.np.mad.transportme.BusStopAdapter;
+import sg.edu.np.mad.transportme.BusStopDBHandler;
 import sg.edu.np.mad.transportme.DistanceCalculator;
 import sg.edu.np.mad.transportme.NextBus;
 import sg.edu.np.mad.transportme.PrivacyPolicyActivty;
@@ -121,7 +125,7 @@
 
 
 public class MainActivity extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {
-    public static String networkprovider = LocationManager.GPS_PROVIDER;
+    public static String networkprovider = LocationManager.NETWORK_PROVIDER;
     public static ArrayList<Marker> mlistlocation;
     LinearLayout mapandrv;
     FrameLayout fragmentlayout;
@@ -153,7 +157,10 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-
+        if(globalBusStops.isEmpty()){
+            BusStopDBHandler busStopDBHandler = new BusStopDBHandler(MainActivity.this,null,null,1);
+            globalBusStops = busStopDBHandler.getBusStops();
+        }
         swipeRefreshLayout = findViewById(R.id.swipeLayout);
         ProgressDialog progressDialog = new ProgressDialog(MainActivity.this, R.style.MyAlertDialogStyle); //Show Loading icon when the user first loads
         progressDialog.show();
@@ -1126,13 +1133,39 @@
 
         map.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(Double.valueOf(nextbuses.get(0).getLatitude()), Double.valueOf(nextbuses.get(0).getLongitude())), 16.2f));
     }
+    public static final int CAPTURE_IMAGE_FULLSIZE_ACTIVITY_REQUEST_CODE = 1777;
     private void selectImage() {
-        final CharSequence[] options = {"Take Photo","Choose from Gallery","Cancel" };
+        final CharSequence[] options = {"Choose from Gallery","Cancel" };
         /*final CharSequence[] options = { "Take Photo", "Choose from Gallery","Cancel" };*/
         ImageView image = new ImageView(this);
         image.setImageResource(R.drawable.bus_stop_next_to_pond);
         AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
-        builder.setTitle("Choose Image to Scan");
+        LayoutInflater inflater = LayoutInflater.from(this);
+        View view = inflater.inflate(R.layout.cameraalertdialog,null);
+        ImageView helloimage = view.findViewById(R.id.busstopimageview);
+        helloimage.setImageResource(R.drawable.bus_stop_next_to_pond);
+
+        Button selectImageButton = view.findViewById(R.id.buttonselectimage);
+        Button cancelImageButton = view.findViewById(R.id.buttoncancel);
+        AlertDialog alertDialog = new AlertDialog.Builder(this).setView(view).create();
+
+        selectImageButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
+                startActivityForResult(pickPhoto , 1);
+                alertDialog.cancel();
+            }
+        });
+        cancelImageButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                alertDialog.cancel();
+            }
+        });
+
+        alertDialog.show();
+        /*builder.setTitle("Choose Image to Scan");
         builder.setIcon(R.drawable.appsplashicon);
         builder.setView(image);
         builder.setItems(options, new DialogInterface.OnClickListener() {
@@ -1145,9 +1178,14 @@
                     values.put(MediaStore.Images.Media.TITLE, "New Picture");
                     values.put(MediaStore.Images.Media.DESCRIPTION, "From the Camera");
                     image_uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,values);
+                    Log.d("Hell", image_uri.toString());
                     Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
-                    takePicture.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);
-                    startActivityForResult(takePicture,0);
+                    *//*Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);*//*
+                    File file = new File(Environment.getExternalStorageDirectory()+File.separator + "image.jpg");
+                    takePicture.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(file));
+                    startActivityForResult(takePicture, CAPTURE_IMAGE_FULLSIZE_ACTIVITY_REQUEST_CODE);
+                    *//*takePicture.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);*//*
+                    *//*startActivityForResult(takePicture,0);*//*
 
                 } else if (options[item].equals("Choose from Gallery")) {
                     Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
@@ -1158,7 +1196,7 @@
                 }
             }
         });
-        builder.show();
+        builder.show();*/
     }
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
@@ -1167,16 +1205,33 @@
             switch (requestCode) {
                 case 0:
                     if (resultCode == RESULT_OK /*&& data != null*/) {
-                        try{
+                        if (requestCode == CAPTURE_IMAGE_FULLSIZE_ACTIVITY_REQUEST_CODE)
+                        {
+                            //Get our saved file into a bitmap object:
+
+                            File file = new File(Environment.getExternalStorageDirectory()+File.separator +
+                                    "image.jpg");
+                            Bitmap bitmap = decodeSampledBitmapFromFile(file.getAbsolutePath(), 1000, 700);
+                            TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();
+                            Frame frameImage = new Frame.Builder().setBitmap(bitmap).build();
+                            SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);
+                        }
+                        /*try{
+                            Bitmap b = (Bitmap)data.getExtras().get("data");
+                            Log.d("Hell", b.toString());
+
                             ArrayList<BusStop> cameraBusStops = new ArrayList<>();
                             Bitmap selectedImage = MediaStore.Images.Media.getBitmap(this.getContentResolver(), image_uri);
-                            /*Bitmap selectedImage = (Bitmap) data.getExtras().get("data");*/
+                            *//*Bitmap selectedImage = (Bitmap) data.getExtras().get("data");*//*
                             selectedImage = getResizedBitmap(selectedImage,1000);
                             TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();
-                            Frame frameImage = new Frame.Builder().setBitmap(selectedImage).build();
+                            Frame frameImage = new Frame.Builder().setBitmap(b).build();
                             SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);
+
+
                             for (int i =0; i<textBlockSpaceArray.size();i++){
                                 TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));
+                                Log.d("Hello",textBlock.getValue());
                                 for (int x=0; i< globalBusStops.size(); i++){
                                     BusStop currentStop = globalBusStops.get(i);
                                     if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||
@@ -1215,7 +1270,7 @@
 
                         }
                         catch(Exception e){
-                        }
+                        }*/
 
                     }
 
@@ -1298,5 +1353,37 @@
         vectorDrawable.draw(canvas);
         return BitmapDescriptorFactory.fromBitmap(bitmap);
     }
+    public static Bitmap decodeSampledBitmapFromFile(String path, int reqWidth, int reqHeight)
+    { // BEST QUALITY MATCH
+
+        //First decode with inJustDecodeBounds=true to check dimensions
+        final BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+        BitmapFactory.decodeFile(path, options);
+
+        // Calculate inSampleSize, Raw height and width of image
+        final int height = options.outHeight;
+        final int width = options.outWidth;
+        options.inPreferredConfig = Bitmap.Config.RGB_565;
+        int inSampleSize = 1;
+
+        if (height > reqHeight)
+        {
+            inSampleSize = Math.round((float)height / (float)reqHeight);
+        }
+        int expectedWidth = width / inSampleSize;
+
+        if (expectedWidth > reqWidth)
+        {
+            //if(Math.round((float)width / (float)reqWidth) > inSampleSize) // If bigger SampSize..
+            inSampleSize = Math.round((float)width / (float)reqWidth);
+        }
 
+        options.inSampleSize = inSampleSize;
+
+        // Decode bitmap with inSampleSize set
+        options.inJustDecodeBounds = false;
+
+        return BitmapFactory.decodeFile(path, options);
+    }
 }
Index: app/src/main/res/layout/activity_route.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:fitsSystemWindows=\"true\"\r\n    tools:context=\".views.MainActivity\"\r\n    tools:openDrawer=\"start\">\r\n<!--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Route\">-->\r\n\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        android:background=\"@color/white\"\r\n        android:paddingTop=\"30dp\"\r\n        android:visibility=\"visible\"\r\n        app:headerLayout=\"@layout/header\"\r\n        app:menu=\"@menu/side_menu\">\r\n\r\n    </com.google.android.material.navigation.NavigationView>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/contentView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/relativeLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@color/app_yellow\"\r\n            android:padding=\"10dp\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/menu_icon\"\r\n                android:layout_width=\"40dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:src=\"@drawable/ic_baseline_menu_24\"\r\n                android:visibility=\"visible\" />\r\n\r\n            <ImageView\r\n                android:id=\"@+id/dropdown_icon\"\r\n                android:layout_width=\"40dp\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_alignParentEnd=\"true\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:src=\"@drawable/ic_baseline_arrow_drop_down_24\" />\r\n\r\n        </RelativeLayout>\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/dropdownmenu\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            tools:visibility=\"visible\">\r\n\r\n            <AutoCompleteTextView\r\n                android:id=\"@+id/actfrom\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginRight=\"10dp\"\r\n                android:completionThreshold=\"1\"\r\n                android:hint=\"From\"\r\n                android:singleLine=\"true\" />\r\n\r\n            <AutoCompleteTextView\r\n                android:id=\"@+id/actto\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginRight=\"10dp\"\r\n                android:completionThreshold=\"1\"\r\n                android:hint=\"To\"\r\n                android:singleLine=\"true\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/spinnerTransportType\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginLeft=\"15dp\"\r\n                    android:layout_weight=\"1\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/notificationbellimage\"\r\n                    android:layout_width=\"40dp\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:layout_margin=\"5dp\"\r\n                    android:src=\"@drawable/grey_bell\" />\r\n\r\n                <Button\r\n                    android:id=\"@+id/buttonRoute\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"10dp\"\r\n                    android:layout_marginRight=\"10dp\"\r\n                    android:layout_weight=\"1\"\r\n                    android:text=\"Route\" />\r\n            </LinearLayout>\r\n        </LinearLayout>\r\n\r\n        <androidx.cardview.widget.CardView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginLeft=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginRight=\"10dp\"\r\n            android:layout_weight=\"1\"\r\n            android:elevation=\"12dp\"\r\n            app:cardCornerRadius=\"12dp\">\r\n\r\n            <fragment\r\n                android:id=\"@+id/routemap\"\r\n                android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"1\"\r\n                tools:context=\".MapsActivity\" />\r\n        </androidx.cardview.widget.CardView>\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/textviewplaceholder\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:padding=\"20dp\"\r\n            android:text=\"Start By Searching For a route\"\r\n            android:textAlignment=\"center\"\r\n            android:textSize=\"24sp\" />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/routeRecyclerView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:paddingBottom=\"15dp\" />\r\n    </LinearLayout>\r\n\r\n    <!--</androidx.constraintlayout.widget.ConstraintLayout>-->\r\n</androidx.drawerlayout.widget.DrawerLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_route.xml b/app/src/main/res/layout/activity_route.xml
--- a/app/src/main/res/layout/activity_route.xml	(revision 07b8990fd2094e9f03275e799b4719a9495b2268)
+++ b/app/src/main/res/layout/activity_route.xml	(date 1659018473497)
@@ -114,6 +114,7 @@
                     android:layout_marginLeft="10dp"
                     android:layout_marginRight="10dp"
                     android:layout_weight="1"
+                    android:backgroundTint="#e8c490"
                     android:text="Route" />
             </LinearLayout>
         </LinearLayout>
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <runningDeviceTargetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"RUNNING_DEVICE_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\cyrus\\.android\\avd\\Pixel_4_API_30.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </runningDeviceTargetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2022-07-28T11:05:08.340095800Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 07b8990fd2094e9f03275e799b4719a9495b2268)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1659009090156)
@@ -1,9 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
+    <targetSelectedWithDropDown>
       <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
+        <type value="QUICK_BOOT_TARGET" />
         <deviceKey>
           <Key>
             <type value="VIRTUAL_DEVICE_PATH" />
@@ -11,7 +11,7 @@
           </Key>
         </deviceKey>
       </Target>
-    </runningDeviceTargetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-07-28T11:05:08.340095800Z" />
+    </targetSelectedWithDropDown>
+    <timeTargetWasSelectedWithDropDown value="2022-07-28T11:51:00.579870300Z" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/layout/cameraalertdialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/cameraalertdialog.xml b/app/src/main/res/layout/cameraalertdialog.xml
new file mode 100644
--- /dev/null	(date 1659018202195)
+++ b/app/src/main/res/layout/cameraalertdialog.xml	(date 1659018202195)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_margin="10dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        app:layout_constraintTop_toBottomOf="@+id/busstopimageview">
+
+        <ImageView
+            android:id="@+id/busstopimageview"
+            android:layout_width="300dp"
+            android:layout_height="219dp"
+            android:layout_gravity="center"
+            android:layout_margin="10dp"
+            app:srcCompat="@drawable/bus_stop_next_to_pond" />
+
+        <Button
+            android:id="@+id/buttoncancel"
+            style="@style/Widget.AppCompat.Button.Borderless.Colored"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Cancel"
+            android:textColor="#e8c490" />
+
+        <Button
+            android:id="@+id/buttonselectimage"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:backgroundTint="#e8c490"
+            android:text="Select Image" />
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_test.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/edittext_bg.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_person_24.xml\" value=\"0.32\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.2681904761904762\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_month_view.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/calendar_layout.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.14\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_24.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/marker_icon.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.16\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/bell.xml\" value=\"0.2175\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml\" value=\"0.2175\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/filled_bell.xml\" value=\"0.1965\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/grey_bell.xml\" value=\"0.1965\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_arrow_drop_down_24.xml\" value=\"0.174\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_directions_bus_24.xml\" value=\"0.2175\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_24.xml\" value=\"0.1865\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_blue_24.xml\" value=\"0.1865\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_train_24.xml\" value=\"0.2175\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_busSign_background.xml\" value=\"0.291\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/marker_icon.xml\" value=\"0.2175\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/small_bell.xml\" value=\"0.2175\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/walkbg.xml\" value=\"0.2175\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_carpark.xml\" value=\"0.22418478260869565\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_carpark_layout.xml\" value=\"0.22418478260869565\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.22418478260869565\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.15896739130434784\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_maintry.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_privacy_policy_activty.xml\" value=\"0.22418478260869565\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_route.xml\" value=\"0.35179786200194363\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.22418478260869565\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.35082604470359574\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_route_layout.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/calendar_layout.xml\" value=\"0.22418478260869565\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/expense_layout.xml\" value=\"0.22418478260869565\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.15896739130434784\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/step_bus_layout.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/step_car_layout.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/step_mrt_layout.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/mipmap-anydpi-v26/ic_busSign.xml\" value=\"0.196\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml\" value=\"0.2345\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/favourite.xml\" value=\"0.1625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.15625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_profile.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.2708333333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml\" value=\"0.2164855072463768\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.19701086956521738\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.3625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD/TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.23007246376811594\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.12360688956433637\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_login_page.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/activity_main.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.33\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 07b8990fd2094e9f03275e799b4719a9495b2268)
+++ b/.idea/misc.xml	(date 1659015429246)
@@ -45,6 +45,7 @@
         <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml" value="0.14722222222222223" />
         <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml" value="0.36666666666666664" />
         <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml" value="0.36666666666666664" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_baseline_directions_bus_yellow_24.xml" value="0.1865" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/bell.xml" value="0.2175" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml" value="0.2175" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/filled_bell.xml" value="0.1965" />
@@ -70,6 +71,7 @@
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml" value="0.4" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_route_layout.xml" value="0.264" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/calendar_layout.xml" value="0.22418478260869565" />
+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/cameraalertdialog.xml" value="0.264" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/expense_layout.xml" value="0.22418478260869565" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml" value="0.15896739130434784" />
         <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/step_bus_layout.xml" value="0.536" />

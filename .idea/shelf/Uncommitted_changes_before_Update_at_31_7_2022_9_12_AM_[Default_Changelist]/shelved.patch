Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"sg.edu.np.mad.transportme\"\r\n        minSdk 21\r\n        targetSdk 32\r\n        versionCode 18\r\n        versionName '2.01'\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables.useSupportLibrary = true\r\n        multiDexEnabled true\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    packagingOptions {\r\n        resources.excludes.add(\"META-INF/*\")\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.4.2'\r\n    implementation 'com.google.android.material:material:1.6.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.google.android.gms:play-services-maps:18.0.2'\r\n    implementation 'com.google.android.gms:play-services-vision:20.1.3'\r\n\r\n    implementation 'com.android.volley:volley:1.2.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-bom:30.1.0'\r\n    implementation 'com.google.gms:google-services:4.3.10'\r\n    implementation 'com.google.firebase:firebase-database:20.0.5'\r\n    implementation 'androidx.compose.ui:ui:1.1.1'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    implementation 'it.sephiroth.android.library.imagezoom:imagezoom:2.3.0'\r\n    implementation 'io.github.imablanco:zoomy:1.0.0'\r\n    implementation 'com.jsibbold:zoomage:1.3.1'\r\n\r\n    implementation group: 'at.favre.lib', name: 'bcrypt', version: '0.9.0'\r\n    implementation \"androidx.swiperefreshlayout:swiperefreshlayout:1.1.0\"\r\n    implementation 'org.jsoup:jsoup:1.15.2'\r\n\r\n    implementation 'com.github.AnyChart:AnyChart-Android:1.1.2'\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n\r\n    implementation 'com.google.maps.android:android-maps-utils:2.3.0'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
+++ b/app/build.gradle	(date 1659113587256)
@@ -11,8 +11,8 @@
         applicationId "sg.edu.np.mad.transportme"
         minSdk 21
         targetSdk 32
-        versionCode 18
-        versionName '2.01'
+        versionCode 19
+        versionName '2.1'
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
         vectorDrawables.useSupportLibrary = true
Index: app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.transportme.views;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static android.graphics.BitmapFactory.decodeResource;\r\n\r\nimport static sg.edu.np.mad.transportme.BitmapResize.getResizedBitmap;\r\nimport static sg.edu.np.mad.transportme.ReminderApplication.CHANNEL_ID_2;\r\nimport static sg.edu.np.mad.transportme.ReminderService.reached;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalCloseness;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalName;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalRemindCloseness;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminder;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminderBusService;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.grbsChange;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.Notification;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Criteria;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.util.SparseArray;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.Polyline;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.gms.vision.Frame;\r\nimport com.google.android.gms.vision.text.TextBlock;\r\nimport com.google.android.gms.vision.text.TextRecognizer;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.maps.android.SphericalUtil;\r\n\r\nimport java.io.File;\r\nimport java.sql.Array;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\n\r\n\r\nimport sg.edu.np.mad.transportme.BusService;\r\nimport sg.edu.np.mad.transportme.BusStop;\r\nimport sg.edu.np.mad.transportme.BusStopAdapter;\r\nimport sg.edu.np.mad.transportme.BusStopDBHandler;\r\nimport sg.edu.np.mad.transportme.DistanceCalculator;\r\nimport sg.edu.np.mad.transportme.NextBus;\r\nimport sg.edu.np.mad.transportme.PrivacyPolicyActivty;\r\nimport sg.edu.np.mad.transportme.R;\r\nimport sg.edu.np.mad.transportme.ReminderService;\r\nimport sg.edu.np.mad.transportme.Route;\r\nimport sg.edu.np.mad.transportme.WeekActivity;\r\nimport sg.edu.np.mad.transportme.api.ApiBusStopService;\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\n\r\n\r\npublic class MainActivity extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\r\n    public static String networkprovider = LocationManager.GPS_PROVIDER;\r\n    public static LatLng currentLocation = null;\r\n    public static ArrayList<Marker> mlistlocation;\r\n    LinearLayout mapandrv;\r\n    FrameLayout fragmentlayout;\r\n    LinearLayout reminderView;      //CHANGE TO SCROLLVIEW LATER\r\n    Button reminderButton;\r\n    Button cancelReminderButton;\r\n    LinearLayout noReminderLayout;\r\n    SwipeRefreshLayout swipeLayoutRemind;\r\n    ConstraintLayout remindInfoLayout;\r\n    GoogleMap map;\r\n    Uri image_uri;\r\n    LocationManager locationManager;\r\n    DrawerLayout drawerLayout;\r\n    FloatingActionButton cameraSearch;\r\n    SwipeRefreshLayout swipeRefreshLayout;\r\n    BottomNavigationView bottomNavigationView;\r\n    static final float END_SCALE = 0.7f;\r\n    ConstraintLayout contentView;\r\n    public static Boolean favourite = false;\r\n    private static final String[] LOCATION_PERMS = {\r\n            Manifest.permission.ACCESS_COARSE_LOCATION,\r\n            Manifest.permission.ACCESS_FINE_LOCATION\r\n    };\r\n    private static final int LOCATION_REQUEST = 1337;\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        if(globalBusStops.isEmpty()){\r\n            BusStopDBHandler busStopDBHandler = new BusStopDBHandler(MainActivity.this,null,null,1);\r\n            globalBusStops = busStopDBHandler.getBusStops();\r\n        }\r\n        swipeRefreshLayout = findViewById(R.id.swipeLayout);\r\n        ProgressDialog progressDialog = new ProgressDialog(MainActivity.this, R.style.MyAlertDialogStyle); //Show Loading icon when the user first loads\r\n        progressDialog.show();\r\n        progressDialog.setContentView(R.layout.progress_dialog);\r\n        progressDialog.getWindow().setBackgroundDrawableResource(\r\n                android.R.color.transparent\r\n        );\r\n\r\n        contentView = findViewById(R.id.content);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_home);\r\n\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (drawerLayout.isDrawerVisible(GravityCompat.START)) {\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                } else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n        cameraSearch = findViewById(R.id.fab);\r\n        cameraSearch.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n               /* Intent cameraIntent = new Intent(MainActivity.this, CameraSearch.class);\r\n                startActivity(cameraIntent);*/\r\n                selectImage();\r\n            }\r\n        });\r\n\r\n        FirebaseDatabase db = FirebaseDatabase.getInstance(\"https://transportme-c607f-default-rtdb.asia-southeast1.firebasedatabase.app/\");     //Initialise database instance\r\n        DatabaseReference reminderReference = db.getReference()\r\n                .child(\"User\")\r\n                //.child(firebaseUser.getUid())\r\n                .child(globalName)\r\n                .child(\"Reminder\");\r\n\r\n        Log.e(\"build\",\"\"+Build.VERSION.SDK_INT );\r\n\r\n\r\n        mapandrv = findViewById(R.id.MapAndRV);\r\n        fragmentlayout = findViewById(R.id.frame_layout);\r\n        reminderView = findViewById(R.id.reminderView);\r\n        reminderButton = findViewById(R.id.reminderButton);\r\n        cancelReminderButton = findViewById(R.id.cancelReminderButton);\r\n        noReminderLayout = findViewById(R.id.noReminderLayout);\r\n        swipeLayoutRemind = findViewById(R.id.swipeLayoutRemind);\r\n        remindInfoLayout = findViewById(R.id.remindInfoLayout);\r\n        bottomNavigationView = findViewById(R.id.bottomNavigationView); // load botttom navigation bar\r\n        bottomNavigationView.setOnItemSelectedListener(item -> {\r\n\r\n            switch (item.getItemId()) {\r\n                case R.id.home:\r\n                    fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                    reminderView.setVisibility(View.GONE);\r\n                    cameraSearch.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.VISIBLE);\r\n                    favourite = false;\r\n                    break;\r\n                case R.id.favourites:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new FavouritesFragment());\r\n                    favourite = true;\r\n                    break;\r\n                case R.id.search:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new SearchFragment());\r\n                    break;\r\n                case R.id.mrtmap:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new MrtMapFragment());\r\n                    break;\r\n                case R.id.notify:\r\n                    reminderView.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    fragmentlayout.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.GONE);\r\n                    findViewById(R.id.busrouterecyclerView).setVisibility(View.GONE);\r\n                    if(globalReminder == null)\r\n                    {\r\n                        noReminderLayout.setVisibility(View.VISIBLE);\r\n                        swipeLayoutRemind.setVisibility(View.GONE);\r\n                        remindInfoLayout.setVisibility(View.GONE);\r\n                    } else {\r\n                        noReminderLayout.setVisibility(View.GONE);\r\n                        swipeLayoutRemind.setVisibility(View.VISIBLE);\r\n                        remindInfoLayout.setVisibility(View.VISIBLE);\r\n                    }\r\n                    break;\r\n                case R.id.nav_carpark:\r\n                    Intent intent = new Intent(MainActivity.this, CarparkActivity.class);\r\n                    startActivity(intent);\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        Intent recievingEnd = getIntent();\r\n        String gotoprofile = recievingEnd.getStringExtra(\"Profile\");\r\n        if (gotoprofile != null) {\r\n            mapandrv.setVisibility(View.INVISIBLE);\r\n            fragmentlayout.setVisibility(View.VISIBLE);\r\n            replaceFragment(new ProfileFragment());\r\n            navigationView.setCheckedItem(R.id.nav_profile);\r\n            progressDialog.dismiss();\r\n        }\r\n\r\n        cancelReminderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n            }\r\n        });\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.mrtmap);\r\n        mapFragment.getMapAsync(this);\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        ArrayList<BusStop> busStops = globalBusStops;\r\n\r\n        // If location permission is rejected, send toast message to user\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            Toast.makeText(MainActivity.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        } else {\r\n\r\n            if (locationManager.isProviderEnabled(networkprovider)) { //Comments in this section is the same as the one in the LocationManager.NETWORK_PROVIDER\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(networkprovider, 60000, 10, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear(); //Clear all existing markers on the map\r\n                                for (int i = 0; i < busStops.size(); i++) { //Get all bus stop given the radius\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                Collections.sort(closeBusStops);\r\n                                if (closeBusStops.size() > 0) { // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview when they onresponse is recieved\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if (closeBusStops.size() == 0) { // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                swipeLayoutRemind.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(networkprovider, 6000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                if (globalReminder != null) {\r\n                                    Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                    Double Longitude = location.getLongitude();\r\n\r\n\r\n                                    LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                    currentLocation = latLng;\r\n\r\n                                    Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n                                    ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                                    remindBusStop.add(globalReminder);\r\n                                    RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                                    BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n\r\n                                    LatLng destnLL = new LatLng(globalReminder.getLatitude(), globalReminder.getLongitude());\r\n                                    Double destnDist = SphericalUtil.computeDistanceBetween(latLng, destnLL);\r\n                                    TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                                    String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                                    remindDestnDist.setText(display);\r\n\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusRoute(globalReminderBusService, new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Route, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                            Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n                                            if (destnDist <= globalRemindCloseness) {\r\n                                                ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                                for (BusStop bs : busStopRouteLoaded) {\r\n                                                    bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(), bs.getLongitude())));\r\n                                                    busStopDist.add(bs);\r\n                                                }\r\n                                                Collections.sort(busStopDist);\r\n\r\n                                                Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                                if (index - closestBusStopIndex < 2) {\r\n                                                    Notification notification = new NotificationCompat.Builder(MainActivity.this, CHANNEL_ID_2)\r\n                                                            .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                            .setContentTitle(\"Reminder to Alight\")\r\n                                                            .setContentText(\"You are arriving \" + globalReminder.getDescription() + \"!\")\r\n                                                            .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                            .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                            .build();\r\n\r\n                                                    NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                                    notificationManager.notify(1, notification);\r\n                                                    reminderReference.setValue(null);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeLayoutRemind.setRefreshing(false); //Close refreshing Icon\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(networkprovider, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        currentLocation = latLng;\r\n\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n                        if (globalReminder != null) {\r\n                            ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                            remindBusStop.add(globalReminder);\r\n                            RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                            BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                            rv.setAdapter(adapter);\r\n                            rv.setLayoutManager(layout);\r\n\r\n                            LatLng destnLL = new LatLng(globalReminder.getLatitude(), globalReminder.getLongitude());\r\n                            Double destnDist = SphericalUtil.computeDistanceBetween(latLng, destnLL);\r\n                            TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                            String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                            remindDestnDist.setText(display);\r\n\r\n\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusRoute(globalReminderBusService, new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Route, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                    Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n\r\n                                    if (destnDist <= globalRemindCloseness) {\r\n                                        ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                        for (BusStop bs : busStopRouteLoaded) {\r\n                                            bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(), bs.getLongitude())));\r\n                                            busStopDist.add(bs);\r\n                                        }\r\n                                        Collections.sort(busStopDist);\r\n\r\n                                        Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                        if (index - closestBusStopIndex < 2 && reached != true) {\r\n                                            Notification notification = new NotificationCompat.Builder(MainActivity.this, CHANNEL_ID_2)\r\n                                                    .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                    .setContentTitle(\"Reminder to Alight\")\r\n                                                    .setContentText(\"You are arriving \" + globalReminder.getDescription() + \"!\")\r\n                                                    .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                    .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                    .build();\r\n\r\n                                            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                            notificationManager.notify(1, notification);\r\n\r\n                                            reminderReference.setValue(null);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++) { //Get bus stops nearby\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        Collections.sort(closeBusStops);\r\n                        if (closeBusStops.size() > 0) { //Call API if there nearby bus stops, if there arent, send toast message\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() { //call api to get bus services\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview on response from API\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n                        }\r\n                        if (closeBusStops.size() == 0) {\r\n                            Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f)); //Move camera to here the user is\r\n\r\n                    }\r\n                });\r\n\r\n            }/* else if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { //This section is similar to the LocationManager.GPS_PROVIDER section above\r\n                //For users to refresh the recyclerview, runs the location reqeust updates\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() { //Whene user refresh run code\r\n                        locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude();\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear();\r\n                                for (int i = 0; i < busStops.size(); i++) {\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                Collections.sort(closeBusStops);\r\n                                if (closeBusStops.size() > 0) { // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if (closeBusStops.size() == 0) { // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                swipeLayoutRemind.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 6000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                if (globalReminder != null)\r\n                                {\r\n                                    Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                    Double Longitude = location.getLongitude();\r\n\r\n\r\n                                    LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                    Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                    ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                                    remindBusStop.add(globalReminder);\r\n                                    RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                                    BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n\r\n                                    LatLng destnLL = new LatLng(globalReminder.getLatitude(),globalReminder.getLongitude());\r\n                                    Double destnDist = SphericalUtil.computeDistanceBetween(latLng,destnLL);\r\n                                    TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                                    String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                                    remindDestnDist.setText(display);\r\n\r\n\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusRoute(globalReminderBusService,new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this,\"Cannot Get Bus Route, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                        }\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                            Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n                                            if(destnDist <= globalRemindCloseness)\r\n                                            {\r\n                                                ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                                for (BusStop bs : busStopRouteLoaded)\r\n                                                {\r\n                                                    bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(),bs.getLongitude())));\r\n                                                    busStopDist.add(bs);\r\n                                                }\r\n                                                Collections.sort(busStopDist);\r\n\r\n                                                Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                                if(index - closestBusStopIndex < 2)\r\n                                                {\r\n                                                    Notification notification = new NotificationCompat.Builder(MainActivity.this,CHANNEL_ID_2)\r\n                                                            .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                            .setContentTitle(\"Reminder to Alight\")\r\n                                                            .setContentText(\"You are arriving \"+ globalReminder.getDescription() + \"!\")\r\n                                                            .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                            .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                            .build();\r\n\r\n                                                    NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                                    notificationManager.notify(1,notification);\r\n\r\n                                                    reminderReference.setValue(null);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeLayoutRemind.setRefreshing(false); //Close refreshing Icon\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n                        if(globalReminder != null)\r\n                        {\r\n                            ArrayList<BusStop> remindBusStop = new ArrayList<>();\r\n                            remindBusStop.add(globalReminder);\r\n                            RecyclerView rv = findViewById(R.id.recyclerViewRemind); //Load recyclerview when they onresponse is recieved\r\n                            BusStopAdapter adapter = new BusStopAdapter(remindBusStop, MainActivity.this);\r\n                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                            rv.setAdapter(adapter);\r\n                            rv.setLayoutManager(layout);\r\n\r\n                            LatLng destnLL = new LatLng(globalReminder.getLatitude(),globalReminder.getLongitude());\r\n                            Double destnDist = SphericalUtil.computeDistanceBetween(latLng,destnLL);\r\n                            TextView remindDestnDist = findViewById(R.id.remindDestnDist);\r\n                            String display = String.format(\"%.2f\", destnDist / 1000) + \"km\\nLeft to \" + globalReminder.getDescription();\r\n                            remindDestnDist.setText(display);\r\n\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusRoute(globalReminderBusService,new ApiBusStopService.VolleyResponseListener3() { //Call API for bus route\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this,\"Cannot Get Bus Route, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                }\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopRouteLoaded) {\r\n                                    Integer index = busStopRouteLoaded.lastIndexOf(globalReminder);\r\n                                    if(destnDist <= globalRemindCloseness)\r\n                                    {\r\n                                        ArrayList<BusStop> busStopDist = new ArrayList<>();\r\n                                        for (BusStop bs : busStopRouteLoaded)\r\n                                        {\r\n                                            bs.setDistanceToLocation(SphericalUtil.computeDistanceBetween(latLng, new LatLng(bs.getLatitude(),bs.getLongitude())));\r\n                                            busStopDist.add(bs);\r\n                                        }\r\n                                        Collections.sort(busStopDist);\r\n\r\n                                        Integer closestBusStopIndex = busStopRouteLoaded.indexOf(busStopDist.get(0));\r\n                                        if(index - closestBusStopIndex < 2)\r\n                                        {\r\n                                            Notification notification = new NotificationCompat.Builder(MainActivity.this,CHANNEL_ID_2)\r\n                                                    .setSmallIcon(R.drawable.app_logo_vector)\r\n                                                    .setContentTitle(\"Reminder to Alight\")\r\n                                                    .setContentText(\"You are arriving \"+ globalReminder.getDescription() + \"!\")\r\n                                                    .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                                                    .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                                                    .build();\r\n\r\n                                            NotificationManagerCompat notificationManager = NotificationManagerCompat.from(MainActivity.this);\r\n                                            notificationManager.notify(1,notification);\r\n\r\n                                            reminderReference.setValue(null);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++) { //Get nearby bus stops\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness) {\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        Collections.sort(closeBusStops);\r\n                        if (closeBusStops.size() > 0) {\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops, new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this, \"Cannot Get Bus Stops, Check Location and Connection\", Toast.LENGTH_LONG).show();\r\n                                }\r\n\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded, MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                        if (closeBusStops.size() == 0) {\r\n                            Toast.makeText(MainActivity.this, \"No nearby bus stops\", Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n\r\n                    }\r\n                });\r\n            }*/\r\n        }\r\n        grbsChange.observe(this, new Observer<String>() {\r\n            @Override\r\n            public void onChanged(String changedValue) {\r\n                reminderUpdate(reminderButton, findViewById(R.id.recyclerViewRemind));\r\n\r\n            }\r\n        });\r\n        new Handler().postDelayed(new Runnable() {      //Gives app time to load global variables from Login Page before setting value\r\n            @Override\r\n            public void run() {\r\n                grbsChange.setValue(globalReminderBusService);\r\n            }\r\n        }, 6500);\r\n        cancelReminderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                swipeLayoutRemind.setVisibility(View.GONE);\r\n                remindInfoLayout.setVisibility(View.GONE);\r\n                noReminderLayout.setVisibility(View.VISIBLE);\r\n                reminderReference.setValue(null);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (globalReminder != null)\r\n        {\r\n            if(ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_BACKGROUND_LOCATION) != PackageManager.PERMISSION_GRANTED)   //if no bg perms granted and foreground tracking not activated\r\n            {\r\n                Intent notificationIntent = new Intent(this, MainActivity.class);\r\n                PendingIntent pendingIntent = PendingIntent.getActivity(this,\r\n                        0, notificationIntent, 0);\r\n                Notification noPermNotif = new NotificationCompat.Builder(this,CHANNEL_ID_2)\r\n                        .setSmallIcon(R.drawable.app_logo_vector)\r\n                        .setContentTitle(\"TransportMe Cannot Track Your Location\")\r\n                        .setContentIntent(pendingIntent)\r\n                        .setContentText(\"Please set Location Permissions to 'Allow all the time' so we can notify you even when the app is in the background!\")\r\n                        .setPriority(NotificationCompat.PRIORITY_HIGH)\r\n                        .setCategory(NotificationCompat.CATEGORY_MESSAGE)\r\n                        .build();\r\n\r\n                NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);\r\n                notificationManager.notify(1,noPermNotif);\r\n            }\r\n            else\r\n            {\r\n                startReminderService();\r\n                reached = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        stopReminderService();\r\n        if (reached == true)\r\n        {\r\n            FirebaseDatabase db = FirebaseDatabase.getInstance(\"https://transportme-c607f-default-rtdb.asia-southeast1.firebasedatabase.app/\");     //Initialise database instance\r\n            DatabaseReference reminderReference = db.getReference()\r\n                    .child(\"User\")\r\n                    //.child(firebaseUser.getUid())\r\n                    .child(globalName)\r\n                    .child(\"Reminder\");\r\n            reminderReference.setValue(null);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        stopReminderService();\r\n    }\r\n\r\n    public void startReminderService()\r\n    {\r\n        Intent serviceIntent = new Intent(this, ReminderService.class);\r\n        ContextCompat.startForegroundService(this, serviceIntent);\r\n    }\r\n\r\n    public void stopReminderService()\r\n    {\r\n        Intent serviceIntent = new Intent(this, ReminderService.class);\r\n        stopService(serviceIntent);\r\n    }\r\n\r\n    public void reminderUpdate(Button reminderButton, RecyclerView rv) {\r\n        if (!(globalReminder == null)) {\r\n            reminderButton.setText(\"Alight at \" + globalReminder.getDescription());\r\n            reminderButton.setVisibility(View.VISIBLE);\r\n        } else {\r\n            reminderButton.setVisibility(View.INVISIBLE);\r\n        }\r\n    }\r\n\r\n    public void moveMapsCamera(Double latitude, Double longitude) { //Function to enable move camera from other classes\r\n        LatLng latlongmove = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latlongmove)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n\r\n    }\r\n\r\n    public void busrouteview(ArrayList<BusStop> busStopList) {\r\n        SwipeRefreshLayout orv = findViewById(R.id.swipeLayout);\r\n        RecyclerView rv = findViewById(R.id.busrouterecyclerView);\r\n        if (busStopList.size() > 0) {\r\n            BusStopAdapter adapter = new BusStopAdapter(busStopList, MainActivity.this);\r\n            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n            rv.setAdapter(adapter);\r\n            rv.setLayoutManager(layout);\r\n            orv.setVisibility(View.GONE);\r\n            rv.setVisibility(View.VISIBLE);\r\n        }\r\n        fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n        reminderView.setVisibility(View.GONE);\r\n        cameraSearch.setVisibility(View.VISIBLE);\r\n        mapandrv.setVisibility(View.VISIBLE);\r\n        orv.setVisibility(View.GONE);\r\n        rv.setVisibility(View.VISIBLE);\r\n        /*swipeRefreshLayout.setVisibility(View.VISIBLE);*/\r\n        favourite = false;\r\n        bottomNavigationView.setSelectedItemId(R.id.nav_home);\r\n\r\n    }\r\n\r\n    public void busroute(Double latitude, Double longitude, BusStop currentStop, List<Marker> mList, List<LatLng> lList) {\r\n        LatLng latlongmarker = new LatLng(latitude, longitude);\r\n        Bitmap icon = Bitmap.createBitmap(15, 15, Bitmap.Config.ARGB_8888);\r\n        Drawable shape = getResources().getDrawable(R.drawable.marker_icon);\r\n        Canvas canvas = new Canvas(icon);\r\n        shape.setBounds(0, 0, icon.getWidth(), icon.getHeight());\r\n        shape.draw(canvas);\r\n        Marker marker = map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()).icon(BitmapDescriptorFactory.fromBitmap(icon)));\r\n        lList.add(latlongmarker);\r\n        mList.add(marker);\r\n    }\r\n\r\n    public Polyline polyline(List<LatLng> lList) {\r\n        Polyline polyline = map.addPolyline(new PolylineOptions().addAll(lList).color(Color.RED));\r\n        return polyline;\r\n    }\r\n\r\n    public void camerazoom(List<Marker> mList) {\r\n        LatLngBounds.Builder builder = new LatLngBounds.Builder();\r\n        for (Marker m : mList) {\r\n            builder.include(m.getPosition());\r\n        }\r\n        LatLngBounds bounds = builder.build();\r\n        CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, 30);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    public void removemarker(List<Marker> mList, Polyline line) {\r\n        if (line != null) {\r\n            line.remove();\r\n        }\r\n        for (Marker m : mList) {\r\n\r\n            m.remove();\r\n        }\r\n        SwipeRefreshLayout orv = findViewById(R.id.swipeLayout);\r\n        RecyclerView rv = findViewById(R.id.busrouterecyclerView);\r\n        rv.setVisibility(View.GONE);\r\n        orv.setVisibility(View.VISIBLE);\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n        Criteria criteria = new Criteria();\r\n        String provider = locationManager.getBestProvider(criteria, true);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            return;\r\n        }\r\n        Location location = locationManager.getLastKnownLocation(provider);\r\n        double latitude = location.getLatitude();\r\n        double longitude = location.getLongitude();\r\n        LatLng latLng = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latLng)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    private void replaceFragment(Fragment fragment) { //Replace fragment for nav bar\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        fragmentTransaction.replace(R.id.frame_layout, fragment);\r\n        fragmentTransaction.commit();\r\n    }\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        map = googleMap;\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            final String[] LOCATION_PERMS = {\r\n                    Manifest.permission.ACCESS_COARSE_LOCATION,\r\n                    Manifest.permission.ACCESS_FINE_LOCATION\r\n            };\r\n\r\n            final int LOCATION_REQUEST = 1337;\r\n\r\n            requestPermissions(LOCATION_PERMS, LOCATION_REQUEST);\r\n            return;\r\n        }\r\n        map.setMyLocationEnabled(true);\r\n\r\n    }\r\n\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n                fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(MainActivity.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                break;\r\n            case R.id.nav_profile:\r\n                mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());\r\n                break;\r\n            case R.id.nav_route:\r\n                Intent routeintent = new Intent(MainActivity.this, Route.class);\r\n                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(routeintent);\r\n                break;\r\n            case R.id.nav_fares:\r\n                Intent fareintent = new Intent(MainActivity.this, WeekActivity.class);\r\n                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(fareintent);\r\n                break;\r\n            case R.id.nav_privacy:\r\n                Intent privacyintent = new Intent(MainActivity.this, PrivacyPolicyActivty.class);\r\n                privacyintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(privacyintent);\r\n                break;\r\n            case R.id.nav_rate:\r\n                Uri uri = Uri.parse(\"market://details?id=sg.edu.np.mad.transportme\");\r\n                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n                // To count with Play market backstack, After pressing back button,\r\n                // to taken back to our application, we need to add following flags to intent.\r\n                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n                try {\r\n                    startActivity(goToMarket);\r\n                } catch (ActivityNotFoundException e) {\r\n                    startActivity(new Intent(Intent.ACTION_VIEW,\r\n                            Uri.parse(\"https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\")));\r\n                    break;\r\n                }\r\n            case R.id.nav_share:\r\n                Intent sendIntent = new Intent();\r\n                sendIntent.setAction(Intent.ACTION_SEND);\r\n                sendIntent.setType(\"text/plain\");\r\n                sendIntent.putExtra(Intent.EXTRA_TEXT, \"Download the Best Bus App In Singapore! \\n\\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\");\r\n                startActivity(Intent.createChooser(sendIntent,\"Share With\"));\r\n                break;\r\n\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n    @Override\r\n    public void onBackPressed(){\r\n        if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }else{\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n    public void addBusLocations(BusService currentService){\r\n        ArrayList<NextBus> nextbuses = currentService.getNextBuses();\r\n        mlistlocation = new ArrayList<>();\r\n\r\n        for (NextBus nextbus : nextbuses){\r\n            if (!nextbus.getLatitude().equals(\"\")){\r\n                LatLng latlongbus = new LatLng(Double.valueOf(nextbus.getLatitude()), Double.valueOf(nextbus.getLongitude()));\r\n                MarkerOptions marker = new MarkerOptions().position(latlongbus).title(currentService.getServiceNumber());\r\n                Bitmap icon = Bitmap.createBitmap(50, 50, Bitmap.Config.ARGB_8888);\r\n                Drawable shape = getResources().getDrawable(R.drawable.ic_baseline_directions_bus_yellow_24);\r\n                Canvas canvas = new Canvas(icon);\r\n                shape.setBounds(0, 0, icon.getWidth(), icon.getHeight());\r\n                shape.draw(canvas);\r\n                Marker busmarker = map.addMarker(new MarkerOptions().position(latlongbus).title(currentService.getServiceNumber()).icon(BitmapDescriptorFactory.fromBitmap(icon)));\r\n                mlistlocation.add(busmarker);\r\n            }\r\n\r\n        }\r\n        if (!nextbuses.get(0).getLatitude().equals(\"\")){\r\n            map.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(Double.valueOf(nextbuses.get(0).getLatitude()), Double.valueOf(nextbuses.get(0).getLongitude())), 16.2f));\r\n\r\n        }\r\n    }\r\n    public static final int CAPTURE_IMAGE_FULLSIZE_ACTIVITY_REQUEST_CODE = 1777;\r\n    private void selectImage() {\r\n        final CharSequence[] options = {\"Choose from Gallery\",\"Cancel\" };\r\n        /*final CharSequence[] options = { \"Take Photo\", \"Choose from Gallery\",\"Cancel\" };*/\r\n        ImageView image = new ImageView(this);\r\n        image.setImageResource(R.drawable.bus_stop_next_to_pond);\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\r\n        LayoutInflater inflater = LayoutInflater.from(this);\r\n        View view = inflater.inflate(R.layout.cameraalertdialog,null);\r\n        ImageView helloimage = view.findViewById(R.id.busstopimageview);\r\n        helloimage.setImageResource(R.drawable.bus_stop_next_to_pond);\r\n\r\n        Button selectImageButton = view.findViewById(R.id.buttonselectimage);\r\n        Button cancelImageButton = view.findViewById(R.id.buttoncancel);\r\n        AlertDialog alertDialog = new AlertDialog.Builder(this).setView(view).create();\r\n\r\n        selectImageButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(pickPhoto , 1);\r\n                alertDialog.cancel();\r\n            }\r\n        });\r\n        cancelImageButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                alertDialog.cancel();\r\n            }\r\n        });\r\n\r\n        alertDialog.show();\r\n        /*builder.setTitle(\"Choose Image to Scan\");\r\n        builder.setIcon(R.drawable.appsplashicon);\r\n        builder.setView(image);\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    ContentValues values = new ContentValues();\r\n                    values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n                    values.put(MediaStore.Images.Media.DESCRIPTION, \"From the Camera\");\r\n                    image_uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,values);\r\n                    Log.d(\"Hell\", image_uri.toString());\r\n                    Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    *//*Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);*//*\r\n                    File file = new File(Environment.getExternalStorageDirectory()+File.separator + \"image.jpg\");\r\n                    takePicture.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(file));\r\n                    startActivityForResult(takePicture, CAPTURE_IMAGE_FULLSIZE_ACTIVITY_REQUEST_CODE);\r\n                    *//*takePicture.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);*//*\r\n         *//*startActivityForResult(takePicture,0);*//*\r\n\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n                    Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                    startActivityForResult(pickPhoto , 1);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n                    dialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n        builder.show();*/\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != RESULT_CANCELED) {\r\n            switch (requestCode) {\r\n                case 0:\r\n                    if (resultCode == RESULT_OK /*&& data != null*/) {\r\n                        if (requestCode == CAPTURE_IMAGE_FULLSIZE_ACTIVITY_REQUEST_CODE)\r\n                        {\r\n                            //Get our saved file into a bitmap object:\r\n\r\n                            File file = new File(Environment.getExternalStorageDirectory()+File.separator +\r\n                                    \"image.jpg\");\r\n                            Bitmap bitmap = decodeSampledBitmapFromFile(file.getAbsolutePath(), 1000, 700);\r\n                            TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                            Frame frameImage = new Frame.Builder().setBitmap(bitmap).build();\r\n                            SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                        }\r\n                        /*try{\r\n                            Bitmap b = (Bitmap)data.getExtras().get(\"data\");\r\n                            Log.d(\"Hell\", b.toString());\r\n\r\n                            ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                            Bitmap selectedImage = MediaStore.Images.Media.getBitmap(this.getContentResolver(), image_uri);\r\n                            *//*Bitmap selectedImage = (Bitmap) data.getExtras().get(\"data\");*//*\r\n                            selectedImage = getResizedBitmap(selectedImage,1000);\r\n                            TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                            Frame frameImage = new Frame.Builder().setBitmap(b).build();\r\n                            SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n\r\n\r\n                            for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                Log.d(\"Hello\",textBlock.getValue());\r\n                                for (int x=0; i< globalBusStops.size(); i++){\r\n                                    BusStop currentStop = globalBusStops.get(i);\r\n                                    if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                            textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                            textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                        cameraBusStops.add(currentStop);\r\n                                        LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            if(cameraBusStops.size() > 0){\r\n                                Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                    @Override\r\n                                    public void onError(String message) {\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                    }\r\n                                    @Override\r\n                                    public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                        RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                        BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                        LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                        rv.setAdapter(adapter);\r\n                                        rv.setLayoutManager(layout);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else{\r\n                                Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                            }\r\n\r\n                        }\r\n                        catch(Exception e){\r\n                        }*/\r\n\r\n                    }\r\n\r\n                    break;\r\n                case 1:\r\n                    if (resultCode == RESULT_OK && data != null) {\r\n                        Uri selectedImage = data.getData();\r\n                        String[] filePathColumn = {MediaStore.Images.Media.DATA};\r\n\r\n                        if (selectedImage != null) {\r\n                            Cursor cursor = getContentResolver().query(selectedImage,\r\n                                    filePathColumn, null, null, null);\r\n                            if (cursor != null) {\r\n                                cursor.moveToFirst();\r\n\r\n                                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);\r\n                                String picturePath = cursor.getString(columnIndex);\r\n                                Bitmap selectedPhoneImage = BitmapFactory.decodeFile(picturePath);\r\n\r\n                                try{\r\n                                    ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                                    TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                                    Frame frameImage = new Frame.Builder().setBitmap(selectedPhoneImage).build();\r\n                                    SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                                    for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                        TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                        for (int x=0; i< globalBusStops.size(); i++){\r\n                                            BusStop currentStop = globalBusStops.get(i);\r\n                                            if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                                    textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                                    textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                                cameraBusStops.add(currentStop);\r\n                                                LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                                map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                                map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if(cameraBusStops.size() > 0){\r\n                                        Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                        ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                        apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                            @Override\r\n                                            public void onError(String message) {\r\n                                                Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                            }\r\n                                            @Override\r\n                                            public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                                RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                                BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                                LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                                rv.setAdapter(adapter);\r\n                                                rv.setLayoutManager(layout);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else{\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                                    }\r\n\r\n                                }\r\n                                catch(Exception e){\r\n                                    Log.d(\"HAHA\", \"failed\");\r\n                                }\r\n                                cursor.close();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\r\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n    public static Bitmap decodeSampledBitmapFromFile(String path, int reqWidth, int reqHeight)\r\n    { // BEST QUALITY MATCH\r\n\r\n        //First decode with inJustDecodeBounds=true to check dimensions\r\n        final BitmapFactory.Options options = new BitmapFactory.Options();\r\n        options.inJustDecodeBounds = true;\r\n        BitmapFactory.decodeFile(path, options);\r\n\r\n        // Calculate inSampleSize, Raw height and width of image\r\n        final int height = options.outHeight;\r\n        final int width = options.outWidth;\r\n        options.inPreferredConfig = Bitmap.Config.RGB_565;\r\n        int inSampleSize = 1;\r\n\r\n        if (height > reqHeight)\r\n        {\r\n            inSampleSize = Math.round((float)height / (float)reqHeight);\r\n        }\r\n        int expectedWidth = width / inSampleSize;\r\n\r\n        if (expectedWidth > reqWidth)\r\n        {\r\n            //if(Math.round((float)width / (float)reqWidth) > inSampleSize) // If bigger SampSize..\r\n            inSampleSize = Math.round((float)width / (float)reqWidth);\r\n        }\r\n\r\n        options.inSampleSize = inSampleSize;\r\n\r\n        // Decode bitmap with inSampleSize set\r\n        options.inJustDecodeBounds = false;\r\n\r\n        return BitmapFactory.decodeFile(path, options);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
--- a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
+++ b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(date 1659113589406)
@@ -125,7 +125,7 @@
 
 
 public class MainActivity extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {
-    public static String networkprovider = LocationManager.GPS_PROVIDER;
+    public static String networkprovider = LocationManager.NETWORK_PROVIDER;
     public static LatLng currentLocation = null;
     public static ArrayList<Marker> mlistlocation;
     LinearLayout mapandrv;
Index: .idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
+++ /dev/null	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\cyrus\.android\avd\Pixel_4_API_30.avd" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-07-29T16:43:03.690873600Z" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM__Default_Changelist_.xml	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
+++ /dev/null	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM_[Default_Changelist]" date="1658504210900" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 22/7/2022 11:34 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_22_7_2022_11_34_PM_[Default_Changelist]/shelved.patch	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
+++ /dev/null	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
@@ -1,792 +0,0 @@
-Index: app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sg.edu.np.mad.transportme;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class StepAdapter extends RecyclerView.Adapter<StepViewHolder> {\r\n    ArrayList<RouteStep> data;\r\n    Context c;\r\n    public StepAdapter(Context c, ArrayList<RouteStep> data){\r\n        this.data = data;\r\n        this.c = c;\r\n    }\r\n\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        if(position == 0 || position+1 == data.size()){\r\n            return 4;\r\n        }\r\n        if (data.get(position).TravelMode.equals(\"Walk\")){\r\n            return 1;\r\n        }\r\n        else if(data.get(position).TravelMode.equals(\"Bus\")){\r\n            return 2;\r\n        }\r\n        else{\r\n            return 3;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public StepViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View item = null;\r\n        if (viewType ==1)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_walk_layout,parent,false);\r\n        else if(viewType ==2)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_bus_layout,parent,false);\r\n        else if(viewType == 3)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_mrt_layout,parent,false);\r\n        else if(viewType == 4)\r\n            item = LayoutInflater.from(parent.getContext())\r\n                    .inflate(R.layout.step_startend_layout,parent,false);\r\n        return new StepViewHolder(item);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull StepViewHolder holder, int position) {\r\n        RouteStep content = data.get(position);\r\n\r\n        holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n            }\r\n        });\r\n        if (position == 0 || position+1 == data.size()){\r\n            holder.instructions.setText(content.Instructions);\r\n        }\r\n        else{\r\n            holder.instructions.setText(content.Instructions);\r\n            holder.duration.setText(content.Duration);\r\n            holder.distance.setText(content.Distance);\r\n            holder.previouslocation.setText(content.PreviousLocation);\r\n            holder.nextlocation.setText(content.NextLocation);\r\n            if (!content.TravelMode.equals(\"Walk\")){\r\n                holder.line.setText(content.LineName);\r\n                holder.stopcount.setText(content.NumStops.toString());\r\n                if (content.TravelMode.equals(\"Subway\")){\r\n                    holder.linearlayout_mrt.setBackgroundColor(Color.parseColor(content.LineColor));\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return data.size();\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java b/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java
---- a/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ b/app/src/main/java/sg/edu/np/mad/transportme/StepAdapter.java	(date 1658422492169)
-@@ -11,6 +11,8 @@
- import androidx.cardview.widget.CardView;
- import androidx.recyclerview.widget.RecyclerView;
- 
-+import com.google.android.gms.maps.model.LatLng;
-+
- import java.util.ArrayList;
- 
- public class StepAdapter extends RecyclerView.Adapter<StepViewHolder> {
-@@ -65,7 +67,9 @@
-         holder.itemView.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View view) {
--
-+                if (content.stepcoordinates.size() > 0) {
-+                    ((Route) c).moveMapCamera(content.stepcoordinates);
-+                }
-             }
-         });
-         if (position == 0 || position+1 == data.size()){
-Index: app/src/main/java/sg/edu/np/mad/transportme/RouteStep.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sg.edu.np.mad.transportme;\r\n\r\nimport com.google.android.gms.maps.model.LatLng;\r\n\r\npublic class RouteStep {\r\n    LatLng Latlongstart;\r\n    LatLng Latlongend;\r\n    String TravelMode;\r\n    String Instructions;\r\n    Integer NumStops; //\r\n    String Distance;\r\n    String Duration;\r\n    String LineName;  //\r\n    String PreviousLocation;\r\n    String NextLocation;\r\n    String LineColor;\r\n    public RouteStep(){}\r\n    public RouteStep(LatLng latlongstart, LatLng latlongend, String travelMode, String instructions, String distance, String duration, String previousLocation, String nextLocation) {\r\n        Latlongstart = latlongstart;\r\n        Latlongend = latlongend;\r\n        TravelMode = travelMode;\r\n        Instructions = instructions;\r\n        Distance = distance;\r\n        Duration = duration;\r\n        PreviousLocation = previousLocation;\r\n        NextLocation = nextLocation;\r\n    }\r\n\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/sg/edu/np/mad/transportme/RouteStep.java b/app/src/main/java/sg/edu/np/mad/transportme/RouteStep.java
---- a/app/src/main/java/sg/edu/np/mad/transportme/RouteStep.java	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ b/app/src/main/java/sg/edu/np/mad/transportme/RouteStep.java	(date 1658421826293)
-@@ -2,6 +2,8 @@
- 
- import com.google.android.gms.maps.model.LatLng;
- 
-+import java.util.ArrayList;
-+
- public class RouteStep {
-     LatLng Latlongstart;
-     LatLng Latlongend;
-@@ -14,6 +16,7 @@
-     String PreviousLocation;
-     String NextLocation;
-     String LineColor;
-+    ArrayList<LatLng> stepcoordinates;
-     public RouteStep(){}
-     public RouteStep(LatLng latlongstart, LatLng latlongend, String travelMode, String instructions, String distance, String duration, String previousLocation, String nextLocation) {
-         Latlongstart = latlongstart;
-Index: app/src/main/java/sg/edu/np/mad/transportme/Route.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sg.edu.np.mad.transportme;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Point;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.RetryPolicy;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.Dash;\r\nimport com.google.android.gms.maps.model.Dot;\r\nimport com.google.android.gms.maps.model.Gap;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.PatternItem;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.jsoup.Jsoup;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class Route extends FragmentActivity implements OnMapReadyCallback {\r\n\r\n    private GoogleMap mMap;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_route);\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.routemap);\r\n        mapFragment.getMapAsync(this);\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap){\r\n        mMap = googleMap;\r\n        direction();\r\n        LatLng sydney = new LatLng(1.3199637,103.7743615);\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));\r\n    }\r\n\r\n    private void direction(){\r\n        RequestQueue requestQueue= Volley.newRequestQueue(this);\r\n        ArrayList<RouteStep> routeSteps = new ArrayList<>();\r\n\r\n        String url = \"https://mad-assignment-backend.herokuapp.com/routetest\";\r\n        /*String url = Uri.parse(\"https://maps.googleapis.com/maps/api/directions/json\")\r\n                .buildUpon()\r\n                .appendQueryParameter(\"destination\",\"The Tampines Trilliant\")\r\n                .appendQueryParameter(\"origin\",\"Ngee Ann Polytechnic\")\r\n                .appendQueryParameter(\"mode\",\"transit\")\r\n                .appendQueryParameter(\"key\",\"AIzaSyC5TLFoQWmsorYN0--un6BieG6VI2STONE\")\r\n                .toString();*/\r\n        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response){\r\n                try {\r\n                    String status = response.getString(\"status\");\r\n                    if (status.equals(\"OK\")) {\r\n                        JSONArray routes = response.getJSONArray(\"routes\");\r\n                        ArrayList<LatLng> points;\r\n\r\n                        Log.d(\"kek\", routes.toString());\r\n                        for (int i = 0; i < routes.length(); i++) {\r\n\r\n                            PolylineOptions polylineOptions = null;\r\n                            JSONArray legs = routes.getJSONObject(i).getJSONArray(\"legs\");\r\n\r\n                            Log.d(\"kek\", legs.toString());\r\n                            for (int j = 0; j < legs.length(); j++) {\r\n                                String start_address = legs.getJSONObject(j).getString(\"start_address\");\r\n                                String end_address = legs.getJSONObject(j).getString(\"end_address\");\r\n                                RouteStep firstRouteStep = new RouteStep();\r\n                                firstRouteStep.Instructions = \"From \"+ start_address;\r\n                                routeSteps.add(firstRouteStep);\r\n                                JSONArray steps = legs.getJSONObject(j).getJSONArray(\"steps\");\r\n                                Log.d(\"kek\", steps.toString());\r\n                                for (int k = 0; k < steps.length(); k++) {\r\n\r\n                                    String polyline = steps.getJSONObject(k).getJSONObject(\"polyline\").getString(\"points\");\r\n                                    String instructions = Jsoup.parse(steps.getJSONObject(k).getString(\"html_instructions\")).text();\r\n                                    String travelmode = steps.getJSONObject(k).getString(\"travel_mode\");\r\n\r\n                                    Double startlat = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lat\");\r\n                                    Double startlong = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lng\");\r\n                                    Double endlat = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lat\");\r\n                                    Double endlong = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lng\");\r\n\r\n                                    LatLng latlongstart = new LatLng(startlat,startlong);\r\n                                    LatLng latlongend = new LatLng(endlat,endlong);\r\n\r\n                                    List<LatLng> list = decodePoly(polyline);\r\n\r\n                                    points = new ArrayList<>();\r\n                                    polylineOptions = new PolylineOptions();\r\n                                    for (int l = 0; l < list.size(); l++) {\r\n                                        LatLng position = new LatLng((list.get(l)).latitude, (list.get(l)).longitude);\r\n                                        points.add(position);\r\n                                    }\r\n                                    polylineOptions.addAll(points);\r\n                                    polylineOptions.width(24);\r\n\r\n                                    String travelMode;\r\n                                    String distance = steps.getJSONObject(k).getJSONObject(\"distance\").getString(\"text\");\r\n                                    String duration = steps.getJSONObject(k).getJSONObject(\"duration\").getString(\"text\");\r\n                                    String previousLocation;\r\n                                    String nextLocation;\r\n                                    if (travelmode.equals(\"WALKING\")){\r\n                                        /*polylineOptions.color(ContextCompat.getColor(Route.this, R.color.purple_500));*/\r\n                                        polylineOptions.color(Color.parseColor(\"#62d431\"));\r\n\r\n                                        /*List<PatternItem> pattern = Arrays.asList(\r\n                                                new Dot(), new Gap(20), new Dash(30), new Gap(20));\r\n                                        polylineOptions.setPattern(pattern);*/\r\n                                        travelMode = \"Walk\";\r\n                                        previousLocation = k==0?start_address: steps.getJSONObject(k-1).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n                                        nextLocation = k==steps.length()-1? end_address: steps.getJSONObject(k+1).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n\r\n                                    }\r\n                                    else {/*if (travelmode.equals(\"TRANSIT\")){*/\r\n                                        JSONObject transitline = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\");\r\n                                        String transitlinecolor = transitline.getString(\"color\");\r\n                                        travelMode = transitline.getJSONObject(\"vehicle\").getString(\"name\");\r\n                                        if (travelMode.equals(\"Bus\")){\r\n                                            transitlinecolor = \"#c62020\";\r\n                                        }\r\n                                        polylineOptions.color(Color.parseColor(transitlinecolor));\r\n                                        MarkerOptions marker = new MarkerOptions().position(latlongstart);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n\r\n                                        marker = new MarkerOptions().position(latlongend);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n\r\n                                        previousLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n                                        nextLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n\r\n                                    }\r\n\r\n\r\n                                    RouteStep currentStep = new RouteStep(latlongstart,latlongend,travelMode,instructions, distance,duration,previousLocation,nextLocation);\r\n                                    if (travelmode.equals(\"TRANSIT\")) {\r\n                                        currentStep.LineName = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"name\");\r\n                                        currentStep.NumStops = steps.getJSONObject(k).getJSONObject(\"transit_details\").getInt(\"num_stops\");\r\n                                        if (travelMode.equals(\"Subway\")){\r\n                                            currentStep.LineColor = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"color\");\r\n                                        }\r\n                                    }\r\n\r\n                                    routeSteps.add(currentStep);\r\n                                    polylineOptions.geodesic(true);\r\n                                    mMap.addPolyline(polylineOptions);\r\n                                }\r\n                                RouteStep lastRouteStep = new RouteStep();\r\n                                lastRouteStep.Instructions = \"Arrive at \"+ end_address;\r\n                                routeSteps.add(lastRouteStep);\r\n                            }\r\n\r\n                        }\r\n                        RecyclerView routerv = findViewById(R.id.routeRecyclerView);\r\n                        StepAdapter adapter = new StepAdapter(Route.this, routeSteps);\r\n                        LinearLayoutManager layout = new LinearLayoutManager(Route.this);\r\n\r\n                        routerv.setAdapter(adapter);\r\n                        routerv.setLayoutManager(layout);\r\n\r\n                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3595533, 103.94306)));\r\n                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3212432, 103.7743509)));\r\n\r\n                        LatLngBounds bounds = new LatLngBounds.Builder()\r\n                                .include(new LatLng(1.3595533, 103.94306))\r\n                                .include(new LatLng(1.3212432, 103.7743509)).build();\r\n                        Point point = new Point();\r\n                        getWindowManager().getDefaultDisplay().getSize(point);\r\n                        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(bounds, point.x, 150, 30));\r\n                    }\r\n                } catch(JSONException e){\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener(){\r\n            @Override\r\n            public void onErrorResponse(VolleyError error){\r\n            }\r\n        });\r\n        RetryPolicy retryPolicy = new DefaultRetryPolicy(30000, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n        jsonObjectRequest.setRetryPolicy(retryPolicy);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n\r\n    /*private List<LatLng> decodePoly(String encoded){\r\n        List<LatLng>poly=new ArrayList<>();\r\n        int index=0,len=encoded.length();\r\n        int lat = 0,lng=0;\r\n        while(index<len){\r\n            int b,shift = 0,result=0;\r\n            do {\r\n                b = encoded.charAt(index++) - 63;\r\n                result = (b & 0x1f) << shift;\r\n                shift += 5;\r\n            }while(b>=0x20);\r\n                int dlat = ((result&1) != 0 ?~(result >>1) : (result >>1));\r\n                lat+=dlat;\r\n                shift=0;\r\n                result=0;\r\n                do {\r\n                    b = encoded.charAt(index++) - 63;\r\n                    result |= (b & 0x1f) << shift;\r\n                    shift += 5;\r\n                } while(b > 0x20);\r\n                int dlng=((result&1)!=0?~(result >>1):(result >>1));\r\n                lng+=dlng;\r\n                LatLng p =new LatLng((((double) lat/ 1E5)),\r\n                        (((double) lng /1E5)));\r\n                poly.add(p);\r\n            }\r\n            return poly;\r\n    }*/\r\n    public static List<LatLng> decodePoly(final String encodedPath) {\r\n        int len = encodedPath.length();\r\n\r\n        // For speed we preallocate to an upper bound on the final length, then\r\n        // truncate the array before returning.\r\n        final List<LatLng> path = new ArrayList<LatLng>();\r\n        int index = 0;\r\n        int lat = 0;\r\n        int lng = 0;\r\n\r\n        while (index < len) {\r\n            int result = 1;\r\n            int shift = 0;\r\n            int b;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lat += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            result = 1;\r\n            shift = 0;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lng += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            path.add(new LatLng(lat * 1e-5, lng * 1e-5));\r\n        }\r\n\r\n        return path;\r\n    }\r\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\r\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/sg/edu/np/mad/transportme/Route.java b/app/src/main/java/sg/edu/np/mad/transportme/Route.java
---- a/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ b/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(date 1658503409682)
-@@ -1,20 +1,45 @@
- package sg.edu.np.mad.transportme;
- 
-+import static android.Manifest.permission.ACCESS_COARSE_LOCATION;
-+import static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;
-+import static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;
-+
-+import androidx.annotation.NonNull;
- import androidx.appcompat.app.AppCompatActivity;
-+import androidx.core.app.ActivityCompat;
- import androidx.core.content.ContextCompat;
-+import androidx.core.view.GravityCompat;
-+import androidx.drawerlayout.widget.DrawerLayout;
- import androidx.fragment.app.FragmentActivity;
- import androidx.recyclerview.widget.LinearLayoutManager;
- import androidx.recyclerview.widget.RecyclerView;
- 
-+import android.Manifest;
-+import android.annotation.SuppressLint;
-+import android.content.ActivityNotFoundException;
- import android.content.Context;
-+import android.content.Intent;
-+import android.content.pm.PackageManager;
- import android.graphics.Bitmap;
- import android.graphics.Canvas;
- import android.graphics.Color;
- import android.graphics.Point;
- import android.graphics.drawable.Drawable;
-+import android.location.Location;
-+import android.location.LocationListener;
-+import android.location.LocationManager;
- import android.net.Uri;
- import android.os.Bundle;
- import android.util.Log;
-+import android.view.MenuItem;
-+import android.view.View;
-+import android.widget.ArrayAdapter;
-+import android.widget.AutoCompleteTextView;
-+import android.widget.Button;
-+import android.widget.ImageView;
-+import android.widget.LinearLayout;
-+import android.widget.TextView;
-+import android.widget.Toast;
- 
- import com.android.volley.DefaultRetryPolicy;
- import com.android.volley.Request;
-@@ -38,6 +63,7 @@
- import com.google.android.gms.maps.model.MarkerOptions;
- import com.google.android.gms.maps.model.PatternItem;
- import com.google.android.gms.maps.model.PolylineOptions;
-+import com.google.android.material.navigation.NavigationView;
- 
- import org.json.JSONArray;
- import org.json.JSONException;
-@@ -48,8 +74,15 @@
- import java.util.Arrays;
- import java.util.List;
- 
--public class Route extends FragmentActivity implements OnMapReadyCallback {
-+import sg.edu.np.mad.transportme.user.ProfileFragment;
-+import sg.edu.np.mad.transportme.views.CarparkActivity;
-+import sg.edu.np.mad.transportme.views.MainActivity;
- 
-+public class Route extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {
-+    DrawerLayout drawerLayout;
-+    LinearLayout contentView;
-+    NavigationView navigationView;
-+    static final float END_SCALE = 0.7f;
-     private GoogleMap mMap;
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-@@ -58,28 +91,113 @@
- 
-         SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.routemap);
-         mapFragment.getMapAsync(this);
--    }
-+
-+        ImageView menuIcon = findViewById(R.id.menu_icon);
-+        contentView = findViewById(R.id.contentView);
-+        drawerLayout = findViewById(R.id.drawer_layout);
-+        NavigationView navigationView = findViewById(R.id.nav_view);
-+        navigationView.bringToFront();
-+        navigationView.setNavigationItemSelectedListener(this);
-+        navigationView.setCheckedItem(R.id.nav_route);
-+        menuIcon.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                if(drawerLayout.isDrawerVisible(GravityCompat.START)){
-+                    drawerLayout.closeDrawer(GravityCompat.START);
-+                }
-+                else drawerLayout.openDrawer(GravityCompat.START);
-+            }
-+        });
-+        animateNavigationDrawer();
-+
- 
-+        AutoCompleteTextView atcfrom = findViewById(R.id.actfrom);
-+        AutoCompleteTextView actto = findViewById(R.id.actto);
-+
-+        ArrayList<String> searchStrings = new ArrayList<String>();
-+        for (int i = 0; i < globalBusStops.size(); i++) {
-+            searchStrings.add(globalBusStops.get(i).getDescription());
-+            searchStrings.add(globalBusStops.get(i).getRoadName());
-+
-+        }
-+        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, searchStrings);
-+        atcfrom.setAdapter(adapter);
-+        actto.setAdapter(adapter);
-+
-+        atcfrom.setText("Current Location");
-+        //makes it such that when user clicks on edit textbox, textbox is not automatically filled with "CHANGE PASSWORD"
-+        atcfrom.setOnFocusChangeListener(new View.OnFocusChangeListener() {
-+            @Override
-+            public void onFocusChange(View view, boolean b) {
-+                if (b) {
-+                    atcfrom.setText("");
-+                } else /*if(b == false && password.getEditableText().equals(""))*/ {
-+                    if (!(atcfrom.getEditableText().length() > 0)) {
-+                        atcfrom.setText("Current Location");
-+                    }
-+                }
-+            }
-+        });
-+        TextView placeholder = findViewById(R.id.textviewplaceholder);
-+        Button routeButton = findViewById(R.id.buttonRoute);
-+        routeButton.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                mMap.clear();
-+                String from = String.valueOf(atcfrom.getText());
-+                String to = String.valueOf(actto.getText());
-+                direction(from, to);
-+                placeholder.setVisibility(View.GONE);
-+            }
-+        });
-+        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);
-+
-+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
-+            // TODO: Consider calling
-+            //    ActivityCompat#requestPermissions
-+            // here to request the missing permissions, and then overriding
-+            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
-+            //                                          int[] grantResults)
-+            // to handle the case where the user grants the permission. See the documentation
-+            // for ActivityCompat#requestPermissions for more details.
-+            Toast.makeText(Route.this, "Check Location and Connection Settings", Toast.LENGTH_LONG).show();
-+
-+            return;
-+        } else {
-+            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
-+                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 5, new LocationListener() { //Every 60 seconds or 10m change, run code
-+                    @Override
-+                    public void onLocationChanged(@NonNull Location location) {
-+                        Double Latitude = location.getLatitude(); //Get latitude and logitude
-+                        Double Longitude = location.getLongitude();
-+
-+                        LatLng latLng = new LatLng(Latitude, Longitude);
-+                    }
-+                });
-+            }
-+        }
-+    }
-+    @SuppressLint("MissingPermission")
-     @Override
-     public void onMapReady(GoogleMap googleMap){
-         mMap = googleMap;
--        direction();
--        LatLng sydney = new LatLng(1.3199637,103.7743615);
--        mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
-+        LatLng singapore = new LatLng(1.3521,103.8198);
-+        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(singapore, 10f));
-+        mMap.setMyLocationEnabled(true);
-     }
- 
--    private void direction(){
-+    private void direction(String From, String Destination){
-         RequestQueue requestQueue= Volley.newRequestQueue(this);
-         ArrayList<RouteStep> routeSteps = new ArrayList<>();
- 
--        String url = "https://mad-assignment-backend.herokuapp.com/routetest";
--        /*String url = Uri.parse("https://maps.googleapis.com/maps/api/directions/json")
-+        /*String url = "https://mad-assignment-backend.herokuapp.com/routetest";*/
-+        String url = Uri.parse("https://maps.googleapis.com/maps/api/directions/json")
-                 .buildUpon()
--                .appendQueryParameter("destination","The Tampines Trilliant")
--                .appendQueryParameter("origin","Ngee Ann Polytechnic")
-+                .appendQueryParameter("destination",Destination)
-+                .appendQueryParameter("origin",From)
-                 .appendQueryParameter("mode","transit")
-                 .appendQueryParameter("key","AIzaSyC5TLFoQWmsorYN0--un6BieG6VI2STONE")
--                .toString();*/
-+                .toString();
-         JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {
-             @Override
-             public void onResponse(JSONObject response){
-@@ -88,7 +206,7 @@
-                     if (status.equals("OK")) {
-                         JSONArray routes = response.getJSONArray("routes");
-                         ArrayList<LatLng> points;
--
-+                        LatLngBounds.Builder bounds = LatLngBounds.builder();
-                         Log.d("kek", routes.toString());
-                         for (int i = 0; i < routes.length(); i++) {
- 
-@@ -105,7 +223,7 @@
-                                 JSONArray steps = legs.getJSONObject(j).getJSONArray("steps");
-                                 Log.d("kek", steps.toString());
-                                 for (int k = 0; k < steps.length(); k++) {
--
-+                                    ArrayList<LatLng> stepcoordinates = new ArrayList<>();
-                                     String polyline = steps.getJSONObject(k).getJSONObject("polyline").getString("points");
-                                     String instructions = Jsoup.parse(steps.getJSONObject(k).getString("html_instructions")).text();
-                                     String travelmode = steps.getJSONObject(k).getString("travel_mode");
-@@ -125,6 +243,8 @@
-                                     for (int l = 0; l < list.size(); l++) {
-                                         LatLng position = new LatLng((list.get(l)).latitude, (list.get(l)).longitude);
-                                         points.add(position);
-+                                        bounds.include(position);
-+                                        stepcoordinates.add(position);
-                                     }
-                                     polylineOptions.addAll(points);
-                                     polylineOptions.width(24);
-@@ -157,10 +277,14 @@
-                                         MarkerOptions marker = new MarkerOptions().position(latlongstart);
-                                         marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));
-                                         mMap.addMarker(marker);
-+                                        bounds.include(latlongstart);
-+                                        stepcoordinates.add(latlongstart);
- 
-                                         marker = new MarkerOptions().position(latlongend);
-                                         marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));
-                                         mMap.addMarker(marker);
-+                                        bounds.include(latlongend);
-+                                        stepcoordinates.add(latlongend);
- 
-                                         previousLocation = steps.getJSONObject(k).getJSONObject("transit_details").getJSONObject("departure_stop").getString("name");
-                                         nextLocation = steps.getJSONObject(k).getJSONObject("transit_details").getJSONObject("arrival_stop").getString("name");
-@@ -169,6 +293,7 @@
- 
- 
-                                     RouteStep currentStep = new RouteStep(latlongstart,latlongend,travelMode,instructions, distance,duration,previousLocation,nextLocation);
-+                                    currentStep.stepcoordinates = stepcoordinates;
-                                     if (travelmode.equals("TRANSIT")) {
-                                         currentStep.LineName = steps.getJSONObject(k).getJSONObject("transit_details").getJSONObject("line").getString("name");
-                                         currentStep.NumStops = steps.getJSONObject(k).getJSONObject("transit_details").getInt("num_stops");
-@@ -194,15 +319,14 @@
-                         routerv.setAdapter(adapter);
-                         routerv.setLayoutManager(layout);
- 
--                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3595533, 103.94306)));
--                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3212432, 103.7743509)));
-+                        /*mMap.addMarker(new MarkerOptions().position(new LatLng(1.3595533, 103.94306)));
-+                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3212432, 103.7743509)));*/
- 
--                        LatLngBounds bounds = new LatLngBounds.Builder()
--                                .include(new LatLng(1.3595533, 103.94306))
--                                .include(new LatLng(1.3212432, 103.7743509)).build();
-+
-+                        final LatLngBounds boundsbuilt = bounds.build();
-                         Point point = new Point();
-                         getWindowManager().getDefaultDisplay().getSize(point);
--                        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(bounds, point.x, 150, 30));
-+                        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));
-                     }
-                 } catch(JSONException e){
-                     e.printStackTrace();
-@@ -217,35 +341,14 @@
-         jsonObjectRequest.setRetryPolicy(retryPolicy);
-         requestQueue.add(jsonObjectRequest);
-     }
--
--    /*private List<LatLng> decodePoly(String encoded){
--        List<LatLng>poly=new ArrayList<>();
--        int index=0,len=encoded.length();
--        int lat = 0,lng=0;
--        while(index<len){
--            int b,shift = 0,result=0;
--            do {
--                b = encoded.charAt(index++) - 63;
--                result = (b & 0x1f) << shift;
--                shift += 5;
--            }while(b>=0x20);
--                int dlat = ((result&1) != 0 ?~(result >>1) : (result >>1));
--                lat+=dlat;
--                shift=0;
--                result=0;
--                do {
--                    b = encoded.charAt(index++) - 63;
--                    result |= (b & 0x1f) << shift;
--                    shift += 5;
--                } while(b > 0x20);
--                int dlng=((result&1)!=0?~(result >>1):(result >>1));
--                lng+=dlng;
--                LatLng p =new LatLng((((double) lat/ 1E5)),
--                        (((double) lng /1E5)));
--                poly.add(p);
--            }
--            return poly;
--    }*/
-+    public void moveMapCamera(ArrayList<LatLng> latlngbounds){
-+        LatLngBounds.Builder bounds = LatLngBounds.builder();
-+        for (LatLng latlongobject : latlngbounds){
-+            bounds.include(latlongobject);
-+        }
-+        final LatLngBounds boundsbuilt = bounds.build();
-+        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));
-+    }
-     public static List<LatLng> decodePoly(final String encodedPath) {
-         int len = encodedPath.length();
- 
-@@ -289,4 +392,96 @@
-         vectorDrawable.draw(canvas);
-         return BitmapDescriptorFactory.fromBitmap(bitmap);
-     }
-+    private void animateNavigationDrawer(){
-+        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/
-+        drawerLayout.setScrimColor(Color.parseColor("#e8c490"));
-+        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {
-+            @Override
-+            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {
-+                final float diffScaledOffset = slideOffset * (1 - END_SCALE);
-+                final float offsetScale = 1 - diffScaledOffset;
-+                contentView.setScaleX(offsetScale);
-+                contentView.setScaleY(offsetScale);
-+
-+                final float xOffset = drawerView.getWidth() * slideOffset;
-+                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;
-+                final float xTranslation = xOffset - xOffsetDiff;
-+                contentView.setTranslationX(xTranslation);
-+            }
-+
-+            @Override
-+            public void onDrawerOpened(@NonNull View drawerView) {
-+
-+            }
-+
-+            @Override
-+            public void onDrawerClosed(@NonNull View drawerView) {
-+
-+            }
-+
-+            @Override
-+            public void onDrawerStateChanged(int newState) {
-+
-+            }
-+        });
-+    }
-+
-+    @Override
-+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-+        switch(item.getItemId()){
-+            case R.id.nav_home:
-+
-+                finish();
-+
-+                /*fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times
-+                mapandrv.setVisibility(View.VISIBLE);
-+                favourite = false;*/
-+                break;
-+            case R.id.nav_carpark:
-+                Intent intentcarpark = new Intent(Route.this, CarparkActivity.class);
-+                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(intentcarpark);
-+                break;
-+            case R.id.nav_profile:
-+                Intent intentMainActivity = new Intent(Route.this, MainActivity.class);
-+                intentMainActivity.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                intentMainActivity.putExtra("Profile", "Yes");
-+
-+                startActivity(intentMainActivity);
-+
-+                /*mapandrv.setVisibility(View.INVISIBLE);
-+                fragmentlayout.setVisibility(View.VISIBLE);
-+                replaceFragment(new ProfileFragment());*/
-+                break;
-+            case R.id.nav_route:
-+                Intent routeintent = new Intent(Route.this, Route.class);
-+                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(routeintent);
-+                break;
-+            case R.id.nav_rate:
-+                Uri uri = Uri.parse("market://details?id=sg.edu.np.mad.transportme");
-+                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);
-+                // To count with Play market backstack, After pressing back button,
-+                // to taken back to our application, we need to add following flags to intent.
-+                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |
-+                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |
-+                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
-+                try {
-+                    startActivity(goToMarket);
-+                } catch (ActivityNotFoundException e) {
-+                    startActivity(new Intent(Intent.ACTION_VIEW,
-+                            Uri.parse("https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme")));
-+                    break;
-+                }
-+            case R.id.nav_share:
-+                Intent sendIntent = new Intent();
-+                sendIntent.setAction(Intent.ACTION_SEND);
-+                sendIntent.setType("text/plain");
-+                sendIntent.putExtra(Intent.EXTRA_TEXT, "Download the Best Bus App In Singapore! \n\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme");
-+                startActivity(Intent.createChooser(sendIntent,"Share With"));
-+                break;
-+        }
-+        drawerLayout.closeDrawer(GravityCompat.START);
-+        return true;
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sg.edu.np.mad.transportme.views;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static android.graphics.BitmapFactory.decodeResource;\r\n\r\nimport static sg.edu.np.mad.transportme.BitmapResize.getResizedBitmap;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalCloseness;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminder;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminderBusService;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.grbsChange;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.util.SparseArray;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.Polyline;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.gms.vision.Frame;\r\nimport com.google.android.gms.vision.text.TextBlock;\r\nimport com.google.android.gms.vision.text.TextRecognizer;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\nimport sg.edu.np.mad.transportme.BusStop;\r\nimport sg.edu.np.mad.transportme.BusStopAdapter;\r\nimport sg.edu.np.mad.transportme.DistanceCalculator;\r\nimport sg.edu.np.mad.transportme.R;\r\nimport sg.edu.np.mad.transportme.Route;\r\nimport sg.edu.np.mad.transportme.api.ApiBusStopService;\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\n\r\n\r\npublic class MainActivity extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\r\n    LinearLayout mapandrv;\r\n    FrameLayout fragmentlayout;\r\n    LinearLayout reminderView;      //CHANGE TO SCROLLVIEW LATER\r\n    Button reminderButton;\r\n    Button cancelReminderButton;\r\n    GoogleMap map;\r\n    Uri image_uri;\r\n    LocationManager locationManager;\r\n    DrawerLayout drawerLayout;\r\n    static final float END_SCALE = 0.7f;\r\n    ConstraintLayout contentView;\r\n    public static Boolean favourite = false;\r\n    private static final String[] LOCATION_PERMS={\r\n            Manifest.permission.ACCESS_COARSE_LOCATION,\r\n            Manifest.permission.ACCESS_FINE_LOCATION\r\n    };\r\n    private static final int LOCATION_REQUEST=1337;\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        SwipeRefreshLayout swipeRefreshLayout = findViewById(R.id.swipeLayout);\r\n        ProgressDialog progressDialog = new ProgressDialog(MainActivity.this,R.style.MyAlertDialogStyle); //Show Loading icon when the user first loads\r\n        progressDialog.show();\r\n        progressDialog.setContentView(R.layout.progress_dialog);\r\n        progressDialog.getWindow().setBackgroundDrawableResource(\r\n                android.R.color.transparent\r\n        );\r\n\r\n        contentView = findViewById(R.id.content);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_home);\r\n\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                }\r\n                else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n        FloatingActionButton cameraSearch = findViewById(R.id.fab);\r\n        cameraSearch.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n               /* Intent cameraIntent = new Intent(MainActivity.this, CameraSearch.class);\r\n                startActivity(cameraIntent);*/\r\n                selectImage();\r\n            }\r\n        });\r\n\r\n\r\n        mapandrv = findViewById(R.id.MapAndRV);\r\n        fragmentlayout = findViewById(R.id.frame_layout);\r\n        reminderView = findViewById(R.id.reminderView);\r\n        reminderButton = findViewById(R.id.reminderButton);\r\n        cancelReminderButton = findViewById(R.id.cancelReminderButton);\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNavigationView); // load botttom navigation bar\r\n        bottomNavigationView.setOnItemSelectedListener(item ->{\r\n\r\n            switch(item.getItemId()){\r\n                case R.id.home:\r\n                    fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                    reminderView.setVisibility(View.GONE);\r\n                    cameraSearch.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.VISIBLE);\r\n                    favourite = false;\r\n                    break;\r\n                case R.id.favourites:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new FavouritesFragment());\r\n                    favourite = true;\r\n                    break;\r\n                case R.id.search:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new SearchFragment());\r\n                    break;\r\n                case R.id.mrtmap:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new MrtMapFragment());\r\n                    break;\r\n                case R.id.notify:\r\n                    reminderView.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    fragmentlayout.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.GONE);\r\n                    break;\r\n                case R.id.nav_carpark:\r\n                    Intent intent = new Intent(MainActivity.this, CarparkActivity.class);\r\n                    startActivity(intent);\r\n\r\n            }\r\n            return true;\r\n        });\r\n        cancelReminderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n            }\r\n        });\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.mrtmap);\r\n        mapFragment.getMapAsync(this);\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        ArrayList<BusStop> busStops = globalBusStops;\r\n\r\n        // If location permission is rejected, send toast message to user\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            Toast.makeText(MainActivity.this,\"Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        }\r\n        else{ \r\n            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) { //Comments in this section is the same as the one in the LocationManager.NETWORK_PROVIDER\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 60000, 10, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear(); //Clear all existing markers on the map\r\n                                for (int i = 0; i < busStops.size(); i++){ //Get all bus stop given the radius\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                if(closeBusStops.size() > 0){ // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                        }\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview when they onresponse is recieved\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if(closeBusStops.size() == 0){ // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++){ //Get bus stops nearby\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        if(closeBusStops.size() > 0){ //Call API if there nearby bus stops, if there arent, send toast message\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() { //call api to get bus services\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                }\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview on response from API\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n                        }\r\n                        if(closeBusStops.size() == 0){\r\n                            Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f)); //Move camera to here the user is\r\n\r\n                    }\r\n                });\r\n            }\r\n            else if(locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)){ //This section is similar to the LocationManager.GPS_PROVIDER section above\r\n                //For users to refresh the recyclerview, runs the location reqeust updates\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() { //Whene user refresh run code\r\n                        locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude();\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear();\r\n                                for (int i = 0; i < busStops.size(); i++){\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                if(closeBusStops.size() > 0){ // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                        }\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if(closeBusStops.size() == 0){ // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++){ //Get nearby bus stops\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        if(closeBusStops.size() > 0){\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                }\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                        if(closeBusStops.size() == 0){\r\n                            Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        grbsChange.observe(this,new Observer<String>() {\r\n            @Override\r\n            public void onChanged(String changedValue) {\r\n                Log.e(\"change\",\"\"+globalReminderBusService);\r\n                showReminderButton(reminderButton);\r\n            }\r\n        });\r\n    }\r\n    public void showReminderButton(Button reminderButton)\r\n    {\r\n        if(!(globalReminder == null))\r\n        {\r\n            reminderButton.setText(\"Alight at \"+globalReminder.getDescription());\r\n            reminderButton.setVisibility(View.VISIBLE);\r\n        }\r\n        else\r\n        {\r\n            reminderButton.setVisibility(View.INVISIBLE);\r\n        }\r\n    }\r\n\r\n    public void moveMapsCamera(Double latitude, Double longitude){ //Function to enable move camera from other classes\r\n        LatLng latlongmove = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latlongmove)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n\r\n    }\r\n\r\n    public void busroute(Double latitude, Double longitude, BusStop currentStop, List<Marker> mList, List<LatLng> lList){\r\n        LatLng latlongmarker = new LatLng(latitude, longitude);\r\n        Bitmap icon = Bitmap.createBitmap(15,15, Bitmap.Config.ARGB_8888);\r\n        Drawable shape = getResources().getDrawable(R.drawable.marker_icon);\r\n        Canvas canvas = new Canvas(icon);\r\n        shape.setBounds(0,0,icon.getWidth(),icon.getHeight());\r\n        shape.draw(canvas);\r\n        Marker marker = map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()).icon(BitmapDescriptorFactory.fromBitmap(icon)));\r\n        lList.add(latlongmarker);\r\n        mList.add(marker);\r\n    }\r\n\r\n    public Polyline polyline(List<LatLng> lList) {\r\n        Polyline polyline = map.addPolyline(new PolylineOptions().addAll(lList).color(Color.RED));\r\n        return polyline;\r\n    }\r\n\r\n    public void camerazoom(List<Marker> mList) {\r\n        LatLngBounds.Builder builder = new LatLngBounds.Builder();\r\n        for (Marker m : mList) {\r\n            builder.include(m.getPosition());\r\n        }\r\n        LatLngBounds bounds = builder.build();\r\n        CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, 30);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    public void removemarker(List<Marker> mList, Polyline line) {\r\n        if (line != null) {\r\n            line.remove();\r\n        }\r\n        for (Marker m : mList) {\r\n\r\n            m.remove();\r\n        }\r\n    }\r\n\r\n    private void replaceFragment(Fragment fragment){ //Replace fragment for nav bar\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        fragmentTransaction.replace(R.id.frame_layout,fragment);\r\n        fragmentTransaction.commit();\r\n    }\r\n\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        map = googleMap;\r\n        map.setMyLocationEnabled(true);\r\n\r\n    }\r\n\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n                fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(MainActivity.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                break;\r\n            case R.id.nav_profile:\r\n                mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());\r\n                break;\r\n            case R.id.nav_route:\r\n                Intent intent = new Intent(MainActivity.this, Route.class);\r\n                intent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intent);\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n    @Override\r\n    public void onBackPressed(){\r\n        if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }else{\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n    /*@Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        // The action bar home/up action should open or close the drawer.\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home:\r\n                drawerLayout.openDrawer(GravityCompat.START);\r\n                return true;\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }*/\r\n    private void selectImage() {\r\n        final CharSequence[] options = { \"Take Photo\", \"Choose from Gallery\",\"Cancel\" };\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\r\n        builder.setTitle(\"Choose Image to Scan\");\r\n        builder.setIcon(R.drawable.appsplashicon);\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    ContentValues values = new ContentValues();\r\n                    values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n                    values.put(MediaStore.Images.Media.DESCRIPTION, \"From the Camera\");\r\n                    image_uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,values);\r\n                    Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    takePicture.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n                    startActivityForResult(takePicture,0);\r\n\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n                    Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                    startActivityForResult(pickPhoto , 1);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n                    dialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != RESULT_CANCELED) {\r\n            switch (requestCode) {\r\n                case 0:\r\n                    if (resultCode == RESULT_OK /*&& data != null*/) {\r\n                        try{\r\n                            ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                            Bitmap selectedImage = MediaStore.Images.Media.getBitmap(this.getContentResolver(), image_uri);\r\n                            /*Bitmap selectedImage = (Bitmap) data.getExtras().get(\"data\");*/\r\n                            selectedImage = getResizedBitmap(selectedImage,1000);\r\n                            TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                            Frame frameImage = new Frame.Builder().setBitmap(selectedImage).build();\r\n                            SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                            for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                for (int x=0; i< globalBusStops.size(); i++){\r\n                                    BusStop currentStop = globalBusStops.get(i);\r\n                                    if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                            textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                            textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                        cameraBusStops.add(currentStop);\r\n                                        LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            if(cameraBusStops.size() > 0){\r\n                                Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                    @Override\r\n                                    public void onError(String message) {\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                    }\r\n                                    @Override\r\n                                    public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                        RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                        BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                        LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                        rv.setAdapter(adapter);\r\n                                        rv.setLayoutManager(layout);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else{\r\n                                Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                            }\r\n\r\n                        }\r\n                        catch(Exception e){\r\n                        }\r\n\r\n                    }\r\n\r\n                    break;\r\n                case 1:\r\n                    if (resultCode == RESULT_OK && data != null) {\r\n                        Uri selectedImage = data.getData();\r\n                        String[] filePathColumn = {MediaStore.Images.Media.DATA};\r\n\r\n                        if (selectedImage != null) {\r\n                            Cursor cursor = getContentResolver().query(selectedImage,\r\n                                    filePathColumn, null, null, null);\r\n                            if (cursor != null) {\r\n                                cursor.moveToFirst();\r\n\r\n                                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);\r\n                                String picturePath = cursor.getString(columnIndex);\r\n                                Bitmap selectedPhoneImage = BitmapFactory.decodeFile(picturePath);\r\n\r\n                                try{\r\n                                    ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                                    TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                                    Frame frameImage = new Frame.Builder().setBitmap(selectedPhoneImage).build();\r\n                                    SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                                    for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                        TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                        for (int x=0; i< globalBusStops.size(); i++){\r\n                                            BusStop currentStop = globalBusStops.get(i);\r\n                                            if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                                    textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                                    textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                                cameraBusStops.add(currentStop);\r\n                                                LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                                map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                                map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if(cameraBusStops.size() > 0){\r\n                                        Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                        ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                        apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                            @Override\r\n                                            public void onError(String message) {\r\n                                                Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                            }\r\n                                            @Override\r\n                                            public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                                RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                                BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                                LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                                rv.setAdapter(adapter);\r\n                                                rv.setLayoutManager(layout);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else{\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                                    }\r\n\r\n                                }\r\n                                catch(Exception e){\r\n                                    Log.d(\"HAHA\", \"failed\");\r\n                                }\r\n                                cursor.close();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
---- a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(date 1658502370166)
-@@ -31,6 +31,7 @@
- import android.annotation.SuppressLint;
- import android.app.AlertDialog;
- import android.app.ProgressDialog;
-+import android.content.ActivityNotFoundException;
- import android.content.ContentValues;
- import android.content.DialogInterface;
- import android.content.Intent;
-@@ -119,6 +120,9 @@
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.activity_main);
-+
-+
-+
-         SwipeRefreshLayout swipeRefreshLayout = findViewById(R.id.swipeLayout);
-         ProgressDialog progressDialog = new ProgressDialog(MainActivity.this,R.style.MyAlertDialogStyle); //Show Loading icon when the user first loads
-         progressDialog.show();
-@@ -203,10 +207,20 @@
-                 case R.id.nav_carpark:
-                     Intent intent = new Intent(MainActivity.this, CarparkActivity.class);
-                     startActivity(intent);
--
-+                    break;
-             }
-             return true;
-         });
-+
-+        Intent recievingEnd = getIntent();
-+        String gotoprofile = recievingEnd.getStringExtra("Profile");
-+        if (gotoprofile != null){
-+            mapandrv.setVisibility(View.INVISIBLE);
-+            fragmentlayout.setVisibility(View.VISIBLE);
-+            replaceFragment(new ProfileFragment());
-+            navigationView.setCheckedItem(R.id.nav_profile);
-+        }
-+
-         cancelReminderButton.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View view) {
-@@ -595,9 +609,32 @@
-                 replaceFragment(new ProfileFragment());
-                 break;
-             case R.id.nav_route:
--                Intent intent = new Intent(MainActivity.this, Route.class);
--                intent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
--                startActivity(intent);
-+                Intent routeintent = new Intent(MainActivity.this, Route.class);
-+                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(routeintent);
-+                break;
-+            case R.id.nav_rate:
-+                Uri uri = Uri.parse("market://details?id=sg.edu.np.mad.transportme");
-+                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);
-+                // To count with Play market backstack, After pressing back button,
-+                // to taken back to our application, we need to add following flags to intent.
-+                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |
-+                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |
-+                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
-+                try {
-+                    startActivity(goToMarket);
-+                } catch (ActivityNotFoundException e) {
-+                startActivity(new Intent(Intent.ACTION_VIEW,
-+                        Uri.parse("https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme")));
-+                break;
-+            }
-+            case R.id.nav_share:
-+                Intent sendIntent = new Intent();
-+                sendIntent.setAction(Intent.ACTION_SEND);
-+                sendIntent.setType("text/plain");
-+                sendIntent.putExtra(Intent.EXTRA_TEXT, "Download the Best Bus App In Singapore! \n\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme");
-+                startActivity(Intent.createChooser(sendIntent,"Share With"));
-+                break;
-         }
-         drawerLayout.closeDrawer(GravityCompat.START);
-         return true;
-@@ -622,8 +659,8 @@
-         return super.onOptionsItemSelected(item);
-     }*/
-     private void selectImage() {
--        final CharSequence[] options = { "Take Photo", "Choose from Gallery","Cancel" };
--
-+        final CharSequence[] options = {"Choose from Gallery","Cancel" };
-+        /*final CharSequence[] options = { "Take Photo", "Choose from Gallery","Cancel" };*/
-         AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
-         builder.setTitle("Choose Image to Scan");
-         builder.setIcon(R.drawable.appsplashicon);
-Index: app/src/main/res/layout/activity_route.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".Route\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <fragment\r\n            android:id=\"@+id/routemap\"\r\n            android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            tools:context=\".MapsActivity\" />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/routeRecyclerView\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_weight=\"1\"\r\n            android:paddingBottom=\"15dp\" />\r\n    </LinearLayout>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_route.xml b/app/src/main/res/layout/activity_route.xml
---- a/app/src/main/res/layout/activity_route.xml	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ b/app/src/main/res/layout/activity_route.xml	(date 1658500051326)
-@@ -1,23 +1,114 @@
- <?xml version="1.0" encoding="utf-8"?>
--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-+    xmlns:tools="http://schemas.android.com/tools"
-+    android:id="@+id/drawer_layout"
-+    android:layout_width="match_parent"
-+    android:layout_height="match_parent"
-+    android:fitsSystemWindows="true"
-+    tools:context=".views.MainActivity"
-+    tools:openDrawer="start">
-+<!--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-     xmlns:app="http://schemas.android.com/apk/res-auto"
-     xmlns:tools="http://schemas.android.com/tools"
-     android:layout_width="match_parent"
-     android:layout_height="match_parent"
--    tools:context=".Route">
-+    tools:context=".Route">-->
-+
-+    <com.google.android.material.navigation.NavigationView
-+        android:id="@+id/nav_view"
-+        android:layout_width="wrap_content"
-+        android:layout_height="match_parent"
-+        android:layout_gravity="start"
-+        android:background="@color/white"
-+        android:paddingTop="30dp"
-+        android:visibility="visible"
-+        app:headerLayout="@layout/header"
-+        app:menu="@menu/side_menu">
-+
-+    </com.google.android.material.navigation.NavigationView>
- 
-     <LinearLayout
-+        android:id="@+id/contentView"
-         android:layout_width="match_parent"
-         android:layout_height="match_parent"
-         android:orientation="vertical">
- 
--        <fragment
--            android:id="@+id/routemap"
--            android:name="com.google.android.gms.maps.SupportMapFragment"
--            android:layout_width="match_parent"
--            android:layout_height="match_parent"
--            android:layout_weight="1"
--            tools:context=".MapsActivity" />
-+        <RelativeLayout
-+            android:id="@+id/relativeLayout"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:background="@color/app_yellow"
-+            android:padding="10dp"
-+            app:layout_constraintStart_toStartOf="parent"
-+            app:layout_constraintTop_toTopOf="parent">
-+
-+            <ImageView
-+                android:id="@+id/menu_icon"
-+                android:layout_width="40dp"
-+                android:layout_height="40dp"
-+                android:src="@drawable/ic_baseline_menu_24"
-+                android:visibility="visible" />
-+
-+        </RelativeLayout>
-+
-+        <AutoCompleteTextView
-+            android:id="@+id/actfrom"
-+            android:layout_width="match_parent"
-+            android:layout_height="50dp"
-+            android:layout_marginLeft="10dp"
-+            android:layout_marginTop="10dp"
-+            android:layout_marginRight="10dp"
-+            android:completionThreshold="1"
-+            android:hint="From"
-+            android:singleLine="true" />
-+
-+        <AutoCompleteTextView
-+            android:id="@+id/actto"
-+            android:layout_width="match_parent"
-+            android:layout_height="50dp"
-+            android:layout_marginLeft="10dp"
-+            android:layout_marginRight="10dp"
-+            android:completionThreshold="1"
-+            android:hint="To"
-+            android:singleLine="true" />
-+
-+        <Button
-+            android:id="@+id/buttonRoute"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:layout_marginLeft="10dp"
-+            android:layout_marginRight="10dp"
-+            android:text="Route" />
-+
-+        <androidx.cardview.widget.CardView
-+            android:layout_width="match_parent"
-+            android:layout_height="match_parent"
-+            android:layout_marginLeft="10dp"
-+            android:layout_marginTop="10dp"
-+            android:layout_marginRight="10dp"
-+            android:layout_weight="1"
-+            android:elevation="12dp"
-+            app:cardCornerRadius="12dp">
-+
-+            <fragment
-+                android:id="@+id/routemap"
-+                android:name="com.google.android.gms.maps.SupportMapFragment"
-+                android:layout_width="match_parent"
-+                android:layout_height="match_parent"
-+                android:layout_weight="1"
-+                tools:context=".MapsActivity" />
-+        </androidx.cardview.widget.CardView>
-+
-+
-+        <TextView
-+            android:id="@+id/textviewplaceholder"
-+            android:layout_width="match_parent"
-+            android:layout_height="wrap_content"
-+            android:padding="20dp"
-+            android:text="Start By Searching For a route"
-+            android:textAlignment="center"
-+            android:textSize="24sp" />
- 
-         <androidx.recyclerview.widget.RecyclerView
-             android:id="@+id/routeRecyclerView"
-@@ -27,4 +118,12 @@
-             android:paddingBottom="15dp" />
-     </LinearLayout>
- 
--</androidx.constraintlayout.widget.ConstraintLayout>
-\ No newline at end of file
-+    <androidx.constraintlayout.widget.ConstraintLayout
-+        android:id="@+id/content"
-+        android:layout_width="match_parent"
-+        android:layout_height="match_parent" >
-+
-+    </androidx.constraintlayout.widget.ConstraintLayout>
-+
-+    <!--</androidx.constraintlayout.widget.ConstraintLayout>-->
-+</androidx.drawerlayout.widget.DrawerLayout>
-\ No newline at end of file
-Index: .idea/deploymentTargetDropDown.xml
-===================================================================
-diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
-deleted file mode 100644
---- a/.idea/deploymentTargetDropDown.xml	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ /dev/null	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-@@ -1,17 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="deploymentTargetDropDown">
--    <targetSelectedWithDropDown>
--      <Target>
--        <type value="QUICK_BOOT_TARGET" />
--        <deviceKey>
--          <Key>
--            <type value="VIRTUAL_DEVICE_PATH" />
--            <value value="C:\Users\Tristan\.android\avd\Pixel_4_API_30_1.avd" />
--          </Key>
--        </deviceKey>
--      </Target>
--    </targetSelectedWithDropDown>
--    <timeTargetWasSelectedWithDropDown value="2022-07-10T16:18:45.676243800Z" />
--  </component>
--</project>
-\ No newline at end of file
-Index: app/src/main/res/drawable/ic_baseline_lens_24.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><vector android:height=\"24dp\" android:tint=\"#FFFFFF\"\r\n    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2z\"/>\r\n</vector>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/drawable/ic_baseline_lens_24.xml b/app/src/main/res/drawable/ic_baseline_lens_24.xml
---- a/app/src/main/res/drawable/ic_baseline_lens_24.xml	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ b/app/src/main/res/drawable/ic_baseline_lens_24.xml	(date 1658420887461)
-@@ -1,5 +1,5 @@
--<vector android:height="24dp" android:tint="#FFFFFF"
-+<vector android:height="15dp" android:tint="#E9B872"
-     android:viewportHeight="24" android:viewportWidth="24"
--    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
-+    android:width="15dp" xmlns:android="http://schemas.android.com/apk/res/android">
-     <path android:fillColor="@android:color/white" android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2z"/>
- </vector>
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_test.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/edittext_bg.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_person_24.xml\" value=\"0.32\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.2681904761904762\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_month_view.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/calendar_layout.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.14\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_24.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/marker_icon.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml\" value=\"0.2345\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/favourite.xml\" value=\"0.1625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.15625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_profile.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.2708333333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml\" value=\"0.2164855072463768\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.19701086956521738\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.3625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD/TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.23007246376811594\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.12360688956433637\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_login_page.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/activity_main.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.33\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 598a91ff89575169ae1b1cf06a64eb4eef9072cd)
-+++ b/.idea/misc.xml	(date 1658461449023)
-@@ -45,6 +45,16 @@
-         <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml" value="0.14722222222222223" />
-         <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml" value="0.36666666666666664" />
-         <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml" value="0.36666666666666664" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/busbg.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/filled_bell.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/grey_bell.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_24.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_route_24.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/marker_icon.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml" value="0.2563405797101449" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_route.xml" value="0.2" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml" value="0.19519927536231885" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml" value="0.36666666666666664" />
-         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml" value="0.2345" />
-         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/favourite.xml" value="0.1625" />
-         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml" value="0.15625" />
Index: .idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM__Default_Changelist_.xml	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
+++ /dev/null	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM_[Default_Changelist]" date="1658507621790" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 23/7/2022 12:33 AM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_23_7_2022_12_33_AM_[Default_Changelist]/shelved.patch	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
+++ /dev/null	(revision 7331d90ac27081d3a56b8f104d3f78c4480e7043)
@@ -1,782 +0,0 @@
-Index: app/src/main/res/menu/side_menu.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <group android:checkableBehavior=\"single\">\r\n        <item\r\n            android:id=\"@+id/nav_home\"\r\n            android:title=\"Bus\"\r\n            android:icon=\"@drawable/ic_baseline_directions_bus_24\"/>\r\n        <item\r\n            android:id=\"@+id/nav_carpark\"\r\n            android:title=\"Carpark Availability\"\r\n            android:icon=\"@drawable/ic_baseline_directions_car_24\"/>\r\n        <item\r\n            android:id=\"@+id/nav_route\"\r\n            android:title=\"Directions\"\r\n            android:icon=\"@drawable/ic_baseline_route_24\"/>\r\n    </group>\r\n    <group android:checkableBehavior=\"single\">\r\n        <item\r\n            android:title=\"Profile\">\r\n            <menu>\r\n                <item\r\n                    android:id=\"@+id/nav_profile\"\r\n                    android:title=\"Profile\"\r\n                    android:icon=\"@drawable/ic_baseline_person_24\"/>\r\n            </menu>\r\n        </item>\r\n    </group>\r\n    <item android:title=\"Rate our app\">\r\n        <menu>\r\n            <item\r\n                android:id=\"@+id/nav_share\"\r\n                android:title=\"Share\"\r\n                android:icon=\"@drawable/ic_baseline_share_24\"/>\r\n            <item\r\n                android:id=\"@+id/nav_rate\"\r\n                android:title=\"Rate Us\"\r\n                android:icon=\"@drawable/ic_baseline_star_rate_24\"/>\r\n        </menu>\r\n    </item>\r\n</menu>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/menu/side_menu.xml b/app/src/main/res/menu/side_menu.xml
---- a/app/src/main/res/menu/side_menu.xml	(revision 9f18662899a01678af5b44182fa4ed1abc5066d7)
-+++ b/app/src/main/res/menu/side_menu.xml	(date 1658505270803)
-@@ -13,6 +13,10 @@
-             android:id="@+id/nav_route"
-             android:title="Directions"
-             android:icon="@drawable/ic_baseline_route_24"/>
-+        <item
-+            android:id="@+id/nav_fares"
-+            android:title="Fares"
-+            android:icon="@drawable/ic_baseline_attach_money_24"/>
-     </group>
-     <group android:checkableBehavior="single">
-         <item
-Index: app/src/main/java/sg/edu/np/mad/transportme/Route.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sg.edu.np.mad.transportme;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Point;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.RetryPolicy;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonObjectRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.Dash;\r\nimport com.google.android.gms.maps.model.Dot;\r\nimport com.google.android.gms.maps.model.Gap;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.PatternItem;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.jsoup.Jsoup;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\nimport sg.edu.np.mad.transportme.views.CarparkActivity;\r\nimport sg.edu.np.mad.transportme.views.MainActivity;\r\n\r\npublic class Route extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\r\n    DrawerLayout drawerLayout;\r\n    LinearLayout contentView;\r\n    NavigationView navigationView;\r\n    static final float END_SCALE = 0.7f;\r\n    private GoogleMap mMap;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_route);\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.routemap);\r\n        mapFragment.getMapAsync(this);\r\n\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        contentView = findViewById(R.id.contentView);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_route);\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                }\r\n                else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n\r\n        AutoCompleteTextView atcfrom = findViewById(R.id.actfrom);\r\n        AutoCompleteTextView actto = findViewById(R.id.actto);\r\n\r\n        ArrayList<String> searchStrings = new ArrayList<String>();\r\n        for (int i = 0; i < globalBusStops.size(); i++) {\r\n            searchStrings.add(globalBusStops.get(i).getDescription());\r\n            searchStrings.add(globalBusStops.get(i).getRoadName());\r\n\r\n        }\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, searchStrings);\r\n        atcfrom.setAdapter(adapter);\r\n        actto.setAdapter(adapter);\r\n\r\n        atcfrom.setText(\"Current Location\");\r\n        //makes it such that when user clicks on edit textbox, textbox is not automatically filled with \"CHANGE PASSWORD\"\r\n        atcfrom.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b) {\r\n                    atcfrom.setText(\"\");\r\n                } else /*if(b == false && password.getEditableText().equals(\"\"))*/ {\r\n                    if (!(atcfrom.getEditableText().length() > 0)) {\r\n                        atcfrom.setText(\"Current Location\");\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        TextView placeholder = findViewById(R.id.textviewplaceholder);\r\n        Button routeButton = findViewById(R.id.buttonRoute);\r\n        routeButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                mMap.clear();\r\n                String from = String.valueOf(atcfrom.getText());\r\n                String to = String.valueOf(actto.getText());\r\n                direction(from, to);\r\n                placeholder.setVisibility(View.GONE);\r\n            }\r\n        });\r\n        LocationManager locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            Toast.makeText(Route.this, \"Check Location and Connection Settings\", Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        } else {\r\n            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 10000, 5, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                        Double Longitude = location.getLongitude();\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap){\r\n        mMap = googleMap;\r\n        LatLng singapore = new LatLng(1.3521,103.8198);\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(singapore, 10f));\r\n        mMap.setMyLocationEnabled(true);\r\n    }\r\n\r\n    private void direction(String From, String Destination){\r\n        RequestQueue requestQueue= Volley.newRequestQueue(this);\r\n        ArrayList<RouteStep> routeSteps = new ArrayList<>();\r\n\r\n        /*String url = \"https://mad-assignment-backend.herokuapp.com/routetest\";*/\r\n        String url = Uri.parse(\"https://maps.googleapis.com/maps/api/directions/json\")\r\n                .buildUpon()\r\n                .appendQueryParameter(\"destination\",Destination)\r\n                .appendQueryParameter(\"origin\",From)\r\n                .appendQueryParameter(\"mode\",\"transit\")\r\n                .appendQueryParameter(\"key\",\"AIzaSyC5TLFoQWmsorYN0--un6BieG6VI2STONE\")\r\n                .toString();\r\n        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.GET, url, null, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response){\r\n                try {\r\n                    String status = response.getString(\"status\");\r\n                    if (status.equals(\"OK\")) {\r\n                        JSONArray routes = response.getJSONArray(\"routes\");\r\n                        ArrayList<LatLng> points;\r\n                        LatLngBounds.Builder bounds = LatLngBounds.builder();\r\n                        Log.d(\"kek\", routes.toString());\r\n                        for (int i = 0; i < routes.length(); i++) {\r\n\r\n                            PolylineOptions polylineOptions = null;\r\n                            JSONArray legs = routes.getJSONObject(i).getJSONArray(\"legs\");\r\n\r\n                            Log.d(\"kek\", legs.toString());\r\n                            for (int j = 0; j < legs.length(); j++) {\r\n                                String start_address = legs.getJSONObject(j).getString(\"start_address\");\r\n                                String end_address = legs.getJSONObject(j).getString(\"end_address\");\r\n                                RouteStep firstRouteStep = new RouteStep();\r\n                                firstRouteStep.Instructions = \"From \"+ start_address;\r\n                                routeSteps.add(firstRouteStep);\r\n                                JSONArray steps = legs.getJSONObject(j).getJSONArray(\"steps\");\r\n                                Log.d(\"kek\", steps.toString());\r\n                                for (int k = 0; k < steps.length(); k++) {\r\n                                    ArrayList<LatLng> stepcoordinates = new ArrayList<>();\r\n                                    String polyline = steps.getJSONObject(k).getJSONObject(\"polyline\").getString(\"points\");\r\n                                    String instructions = Jsoup.parse(steps.getJSONObject(k).getString(\"html_instructions\")).text();\r\n                                    String travelmode = steps.getJSONObject(k).getString(\"travel_mode\");\r\n\r\n                                    Double startlat = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lat\");\r\n                                    Double startlong = steps.getJSONObject(k).getJSONObject(\"start_location\").getDouble(\"lng\");\r\n                                    Double endlat = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lat\");\r\n                                    Double endlong = steps.getJSONObject(k).getJSONObject(\"end_location\").getDouble(\"lng\");\r\n\r\n                                    LatLng latlongstart = new LatLng(startlat,startlong);\r\n                                    LatLng latlongend = new LatLng(endlat,endlong);\r\n\r\n                                    List<LatLng> list = decodePoly(polyline);\r\n\r\n                                    points = new ArrayList<>();\r\n                                    polylineOptions = new PolylineOptions();\r\n                                    for (int l = 0; l < list.size(); l++) {\r\n                                        LatLng position = new LatLng((list.get(l)).latitude, (list.get(l)).longitude);\r\n                                        points.add(position);\r\n                                        bounds.include(position);\r\n                                        stepcoordinates.add(position);\r\n                                    }\r\n                                    polylineOptions.addAll(points);\r\n                                    polylineOptions.width(24);\r\n\r\n                                    String travelMode;\r\n                                    String distance = steps.getJSONObject(k).getJSONObject(\"distance\").getString(\"text\");\r\n                                    String duration = steps.getJSONObject(k).getJSONObject(\"duration\").getString(\"text\");\r\n                                    String previousLocation;\r\n                                    String nextLocation;\r\n                                    if (travelmode.equals(\"WALKING\")){\r\n                                        /*polylineOptions.color(ContextCompat.getColor(Route.this, R.color.purple_500));*/\r\n                                        polylineOptions.color(Color.parseColor(\"#62d431\"));\r\n\r\n                                        /*List<PatternItem> pattern = Arrays.asList(\r\n                                                new Dot(), new Gap(20), new Dash(30), new Gap(20));\r\n                                        polylineOptions.setPattern(pattern);*/\r\n                                        travelMode = \"Walk\";\r\n                                        previousLocation = k==0?start_address: steps.getJSONObject(k-1).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n                                        nextLocation = k==steps.length()-1? end_address: steps.getJSONObject(k+1).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n\r\n                                    }\r\n                                    else {/*if (travelmode.equals(\"TRANSIT\")){*/\r\n                                        JSONObject transitline = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\");\r\n                                        String transitlinecolor = transitline.getString(\"color\");\r\n                                        travelMode = transitline.getJSONObject(\"vehicle\").getString(\"name\");\r\n                                        if (travelMode.equals(\"Bus\")){\r\n                                            transitlinecolor = \"#c62020\";\r\n                                        }\r\n                                        polylineOptions.color(Color.parseColor(transitlinecolor));\r\n                                        MarkerOptions marker = new MarkerOptions().position(latlongstart);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n                                        bounds.include(latlongstart);\r\n                                        stepcoordinates.add(latlongstart);\r\n\r\n                                        marker = new MarkerOptions().position(latlongend);\r\n                                        marker.icon(bitmapDescriptorFromVector(Route.this,R.drawable.ic_baseline_lens_24));\r\n                                        mMap.addMarker(marker);\r\n                                        bounds.include(latlongend);\r\n                                        stepcoordinates.add(latlongend);\r\n\r\n                                        previousLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"departure_stop\").getString(\"name\");\r\n                                        nextLocation = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"arrival_stop\").getString(\"name\");\r\n\r\n                                    }\r\n\r\n\r\n                                    RouteStep currentStep = new RouteStep(latlongstart,latlongend,travelMode,instructions, distance,duration,previousLocation,nextLocation);\r\n                                    currentStep.stepcoordinates = stepcoordinates;\r\n                                    if (travelmode.equals(\"TRANSIT\")) {\r\n                                        currentStep.LineName = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"name\");\r\n                                        currentStep.NumStops = steps.getJSONObject(k).getJSONObject(\"transit_details\").getInt(\"num_stops\");\r\n                                        if (travelMode.equals(\"Subway\")){\r\n                                            currentStep.LineColor = steps.getJSONObject(k).getJSONObject(\"transit_details\").getJSONObject(\"line\").getString(\"color\");\r\n                                        }\r\n                                    }\r\n\r\n                                    routeSteps.add(currentStep);\r\n                                    polylineOptions.geodesic(true);\r\n                                    mMap.addPolyline(polylineOptions);\r\n                                }\r\n                                RouteStep lastRouteStep = new RouteStep();\r\n                                lastRouteStep.Instructions = \"Arrive at \"+ end_address;\r\n                                routeSteps.add(lastRouteStep);\r\n                            }\r\n\r\n                        }\r\n                        RecyclerView routerv = findViewById(R.id.routeRecyclerView);\r\n                        StepAdapter adapter = new StepAdapter(Route.this, routeSteps);\r\n                        LinearLayoutManager layout = new LinearLayoutManager(Route.this);\r\n\r\n                        routerv.setAdapter(adapter);\r\n                        routerv.setLayoutManager(layout);\r\n\r\n                        /*mMap.addMarker(new MarkerOptions().position(new LatLng(1.3595533, 103.94306)));\r\n                        mMap.addMarker(new MarkerOptions().position(new LatLng(1.3212432, 103.7743509)));*/\r\n\r\n\r\n                        final LatLngBounds boundsbuilt = bounds.build();\r\n                        Point point = new Point();\r\n                        getWindowManager().getDefaultDisplay().getSize(point);\r\n                        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));\r\n                    }\r\n                } catch(JSONException e){\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener(){\r\n            @Override\r\n            public void onErrorResponse(VolleyError error){\r\n            }\r\n        });\r\n        RetryPolicy retryPolicy = new DefaultRetryPolicy(30000, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n        jsonObjectRequest.setRetryPolicy(retryPolicy);\r\n        requestQueue.add(jsonObjectRequest);\r\n    }\r\n    public void moveMapCamera(ArrayList<LatLng> latlngbounds){\r\n        LatLngBounds.Builder bounds = LatLngBounds.builder();\r\n        for (LatLng latlongobject : latlngbounds){\r\n            bounds.include(latlongobject);\r\n        }\r\n        final LatLngBounds boundsbuilt = bounds.build();\r\n        mMap.animateCamera(CameraUpdateFactory.newLatLngBounds(boundsbuilt, 30));\r\n    }\r\n    public static List<LatLng> decodePoly(final String encodedPath) {\r\n        int len = encodedPath.length();\r\n\r\n        // For speed we preallocate to an upper bound on the final length, then\r\n        // truncate the array before returning.\r\n        final List<LatLng> path = new ArrayList<LatLng>();\r\n        int index = 0;\r\n        int lat = 0;\r\n        int lng = 0;\r\n\r\n        while (index < len) {\r\n            int result = 1;\r\n            int shift = 0;\r\n            int b;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lat += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            result = 1;\r\n            shift = 0;\r\n            do {\r\n                b = encodedPath.charAt(index++) - 63 - 1;\r\n                result += b << shift;\r\n                shift += 5;\r\n            } while (b >= 0x1f);\r\n            lng += (result & 1) != 0 ? ~(result >> 1) : (result >> 1);\r\n\r\n            path.add(new LatLng(lat * 1e-5, lng * 1e-5));\r\n        }\r\n\r\n        return path;\r\n    }\r\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\r\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\r\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\r\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(bitmap);\r\n        vectorDrawable.draw(canvas);\r\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\r\n    }\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n\r\n                finish();\r\n\r\n                /*fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;*/\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(Route.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                break;\r\n            case R.id.nav_profile:\r\n                Intent intentMainActivity = new Intent(Route.this, MainActivity.class);\r\n                intentMainActivity.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                intentMainActivity.putExtra(\"Profile\", \"Yes\");\r\n\r\n                startActivity(intentMainActivity);\r\n\r\n                /*mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());*/\r\n                break;\r\n            case R.id.nav_route:\r\n                Intent routeintent = new Intent(Route.this, Route.class);\r\n                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(routeintent);\r\n                break;\r\n            case R.id.nav_rate:\r\n                Uri uri = Uri.parse(\"market://details?id=sg.edu.np.mad.transportme\");\r\n                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n                // To count with Play market backstack, After pressing back button,\r\n                // to taken back to our application, we need to add following flags to intent.\r\n                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n                try {\r\n                    startActivity(goToMarket);\r\n                } catch (ActivityNotFoundException e) {\r\n                    startActivity(new Intent(Intent.ACTION_VIEW,\r\n                            Uri.parse(\"https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\")));\r\n                    break;\r\n                }\r\n            case R.id.nav_share:\r\n                Intent sendIntent = new Intent();\r\n                sendIntent.setAction(Intent.ACTION_SEND);\r\n                sendIntent.setType(\"text/plain\");\r\n                sendIntent.putExtra(Intent.EXTRA_TEXT, \"Download the Best Bus App In Singapore! \\n\\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\");\r\n                startActivity(Intent.createChooser(sendIntent,\"Share With\"));\r\n                break;\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/sg/edu/np/mad/transportme/Route.java b/app/src/main/java/sg/edu/np/mad/transportme/Route.java
---- a/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(revision 9f18662899a01678af5b44182fa4ed1abc5066d7)
-+++ b/app/src/main/java/sg/edu/np/mad/transportme/Route.java	(date 1658506588074)
-@@ -5,6 +5,7 @@
- import static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;
- 
- import androidx.annotation.NonNull;
-+import androidx.annotation.RequiresApi;
- import androidx.appcompat.app.AppCompatActivity;
- import androidx.core.app.ActivityCompat;
- import androidx.core.content.ContextCompat;
-@@ -29,6 +30,7 @@
- import android.location.LocationListener;
- import android.location.LocationManager;
- import android.net.Uri;
-+import android.os.Build;
- import android.os.Bundle;
- import android.util.Log;
- import android.view.MenuItem;
-@@ -426,6 +428,7 @@
-         });
-     }
- 
-+    @RequiresApi(api = Build.VERSION_CODES.O)
-     @Override
-     public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-         switch(item.getItemId()){
-@@ -457,6 +460,11 @@
-                 Intent routeintent = new Intent(Route.this, Route.class);
-                 routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-                 startActivity(routeintent);
-+                break;
-+            case R.id.nav_fares:
-+                Intent fareintent = new Intent(Route.this, WeekActivity.class);
-+                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(fareintent);
-                 break;
-             case R.id.nav_rate:
-                 Uri uri = Uri.parse("market://details?id=sg.edu.np.mad.transportme");
-@@ -480,6 +488,7 @@
-                 sendIntent.putExtra(Intent.EXTRA_TEXT, "Download the Best Bus App In Singapore! \n\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme");
-                 startActivity(Intent.createChooser(sendIntent,"Share With"));
-                 break;
-+
-         }
-         drawerLayout.closeDrawer(GravityCompat.START);
-         return true;
-Index: app/src/main/res/layout/activity_week.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".WeekActivity\"\r\n    android:orientation=\"vertical\">\r\n\r\n  <LinearLayout\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"wrap_content\"\r\n      android:orientation=\"horizontal\"\r\n      android:layout_marginBottom=\"20dp\"\r\n      android:layout_marginTop=\"20dp\">\r\n    <Button\r\n        android:id=\"@+id/weekBefore\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"&lt;-\"\r\n        android:textColor=\"@color/white\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textSize=\"20dp\"\r\n        android:layout_marginLeft=\"10dp\"/>\r\n    <TextView\r\n        android:id=\"@+id/yearMonth\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"2\"\r\n        android:text=\"July 2022\"\r\n        android:textAlignment=\"center\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textColor=\"@color/app_yellow\"\r\n        android:textSize=\"20dp\"/>\r\n    <Button\r\n        android:id=\"@+id/weekAfter\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"-&gt;\"\r\n        android:textColor=\"@color/white\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textSize=\"20dp\"\r\n        android:layout_marginRight=\"10dp\"/>\r\n  </LinearLayout>\r\n  <LinearLayout\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"wrap_content\"\r\n      android:orientation=\"horizontal\">\r\n\r\n    <TextView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"SUN\"\r\n        android:textSize=\"15dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textAlignment=\"center\"/>\r\n    <TextView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"MON\"\r\n        android:textSize=\"15dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textAlignment=\"center\"/>\r\n    <TextView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"TUE\"\r\n        android:textSize=\"15dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textAlignment=\"center\"/>\r\n    <TextView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"WED\"\r\n        android:textSize=\"15dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textAlignment=\"center\"/>\r\n    <TextView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"THU\"\r\n        android:textSize=\"15dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textAlignment=\"center\"/>\r\n    <TextView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"FRI\"\r\n        android:textSize=\"15dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textAlignment=\"center\"/>\r\n    <TextView\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:text=\"SAT\"\r\n        android:textSize=\"15dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textAlignment=\"center\"/>\r\n\r\n  </LinearLayout>\r\n\r\n  <androidx.recyclerview.widget.RecyclerView\r\n      android:id=\"@+id/calendarRV\"\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"0dp\"\r\n      android:layout_weight=\"0.4\"/>\r\n  <LinearLayout\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"wrap_content\"\r\n      android:orientation=\"horizontal\"\r\n      android:gravity=\"center\">\r\n    <Button\r\n        android:id=\"@+id/log\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"LOG\"\r\n        android:textColor=\"@color/white\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textSize=\"20dp\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/insights\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"INSIGHTS\"\r\n        android:textColor=\"@color/white\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:textSize=\"20dp\"\r\n        android:layout_marginLeft=\"10dp\" />\r\n\r\n  </LinearLayout>\r\n  <LinearLayout\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"wrap_content\"\r\n      android:orientation=\"horizontal\"\r\n      android:gravity=\"center\">\r\n    <TextView\r\n        android:id=\"@+id/total\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Total\"\r\n        android:textSize=\"20dp\"\r\n        android:fontFamily=\"@font/inter_bold\"\r\n        android:layout_marginLeft=\"10dp\"/>\r\n\r\n  </LinearLayout>\r\n\r\n  <ListView\r\n      android:id=\"@+id/weekListView\"\r\n      android:layout_width=\"match_parent\"\r\n      android:layout_height=\"0dp\"\r\n      android:layout_weight=\"5\"/>\r\n\r\n</LinearLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_week.xml b/app/src/main/res/layout/activity_week.xml
---- a/app/src/main/res/layout/activity_week.xml	(revision 9f18662899a01678af5b44182fa4ed1abc5066d7)
-+++ b/app/src/main/res/layout/activity_week.xml	(date 1658507425789)
-@@ -1,162 +1,219 @@
- <?xml version="1.0" encoding="utf-8"?>
--<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    xmlns:app="http://schemas.android.com/apk/res-auto"
-     xmlns:tools="http://schemas.android.com/tools"
-+    android:id="@+id/drawer_layout"
-     android:layout_width="match_parent"
-     android:layout_height="match_parent"
-+    android:fitsSystemWindows="true"
-     tools:context=".WeekActivity"
--    android:orientation="vertical">
-+    tools:openDrawer="start">
-+
-+
-+  <com.google.android.material.navigation.NavigationView
-+      android:id="@+id/nav_view"
-+      android:layout_width="wrap_content"
-+      android:layout_height="match_parent"
-+      android:layout_gravity="start"
-+      android:background="@color/white"
-+      android:paddingTop="30dp"
-+      android:visibility="visible"
-+      app:headerLayout="@layout/header"
-+      app:menu="@menu/side_menu">
-+
-+  </com.google.android.material.navigation.NavigationView>
-+
-+  <LinearLayout
-+      android:id="@+id/weekContentView"
-+      android:layout_width="match_parent"
-+      android:layout_height="match_parent"
-+      android:orientation="vertical"
-+      tools:context=".WeekActivity">
-+
-+    <RelativeLayout
-+        android:id="@+id/relativeLayout"
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:background="@color/app_yellow"
-+        android:padding="10dp"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toTopOf="parent">
-+
-+      <ImageView
-+          android:id="@+id/menu_icon"
-+          android:layout_width="40dp"
-+          android:layout_height="40dp"
-+          android:src="@drawable/ic_baseline_menu_24"
-+          android:visibility="visible" />
-+
-+    </RelativeLayout>
- 
--  <LinearLayout
--      android:layout_width="match_parent"
--      android:layout_height="wrap_content"
--      android:orientation="horizontal"
--      android:layout_marginBottom="20dp"
--      android:layout_marginTop="20dp">
--    <Button
--        android:id="@+id/weekBefore"
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="&lt;-"
--        android:textColor="@color/white"
--        android:fontFamily="@font/inter_bold"
--        android:textSize="20dp"
--        android:layout_marginLeft="10dp"/>
--    <TextView
--        android:id="@+id/yearMonth"
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="2"
--        android:text="July 2022"
--        android:textAlignment="center"
--        android:fontFamily="@font/inter_bold"
--        android:textColor="@color/app_yellow"
--        android:textSize="20dp"/>
--    <Button
--        android:id="@+id/weekAfter"
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="-&gt;"
--        android:textColor="@color/white"
--        android:fontFamily="@font/inter_bold"
--        android:textSize="20dp"
--        android:layout_marginRight="10dp"/>
--  </LinearLayout>
--  <LinearLayout
--      android:layout_width="match_parent"
--      android:layout_height="wrap_content"
--      android:orientation="horizontal">
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:layout_marginTop="20dp"
-+        android:layout_marginBottom="20dp"
-+        android:orientation="horizontal">
-+
-+      <Button
-+          android:id="@+id/weekBefore"
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_marginLeft="10dp"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="&lt;-"
-+          android:textColor="@color/white"
-+          android:textSize="20dp" />
-+
-+      <TextView
-+          android:id="@+id/yearMonth"
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="2"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="July 2022"
-+          android:textAlignment="center"
-+          android:textColor="@color/app_yellow"
-+          android:textSize="20dp" />
-+
-+      <Button
-+          android:id="@+id/weekAfter"
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_marginRight="10dp"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="-&gt;"
-+          android:textColor="@color/white"
-+          android:textSize="20dp" />
-+    </LinearLayout>
-+
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:orientation="horizontal">
- 
--    <TextView
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="SUN"
--        android:textSize="15dp"
--        android:fontFamily="@font/inter_bold"
--        android:textAlignment="center"/>
--    <TextView
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="MON"
--        android:textSize="15dp"
--        android:fontFamily="@font/inter_bold"
--        android:textAlignment="center"/>
--    <TextView
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="TUE"
--        android:textSize="15dp"
--        android:fontFamily="@font/inter_bold"
--        android:textAlignment="center"/>
--    <TextView
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="WED"
--        android:textSize="15dp"
--        android:fontFamily="@font/inter_bold"
--        android:textAlignment="center"/>
--    <TextView
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="THU"
--        android:textSize="15dp"
--        android:fontFamily="@font/inter_bold"
--        android:textAlignment="center"/>
--    <TextView
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="FRI"
--        android:textSize="15dp"
--        android:fontFamily="@font/inter_bold"
--        android:textAlignment="center"/>
--    <TextView
--        android:layout_width="0dp"
--        android:layout_height="wrap_content"
--        android:layout_weight="1"
--        android:text="SAT"
--        android:textSize="15dp"
--        android:fontFamily="@font/inter_bold"
--        android:textAlignment="center"/>
-+      <TextView
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="SUN"
-+          android:textAlignment="center"
-+          android:textSize="15dp" />
-+
-+      <TextView
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="MON"
-+          android:textAlignment="center"
-+          android:textSize="15dp" />
-+
-+      <TextView
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="TUE"
-+          android:textAlignment="center"
-+          android:textSize="15dp" />
-+
-+      <TextView
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="WED"
-+          android:textAlignment="center"
-+          android:textSize="15dp" />
-+
-+      <TextView
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="THU"
-+          android:textAlignment="center"
-+          android:textSize="15dp" />
-+
-+      <TextView
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="FRI"
-+          android:textAlignment="center"
-+          android:textSize="15dp" />
-+
-+      <TextView
-+          android:layout_width="0dp"
-+          android:layout_height="wrap_content"
-+          android:layout_weight="1"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="SAT"
-+          android:textAlignment="center"
-+          android:textSize="15dp" />
- 
--  </LinearLayout>
-+    </LinearLayout>
- 
--  <androidx.recyclerview.widget.RecyclerView
--      android:id="@+id/calendarRV"
--      android:layout_width="match_parent"
--      android:layout_height="0dp"
--      android:layout_weight="0.4"/>
--  <LinearLayout
--      android:layout_width="match_parent"
--      android:layout_height="wrap_content"
--      android:orientation="horizontal"
--      android:gravity="center">
--    <Button
--        android:id="@+id/log"
--        android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
--        android:text="LOG"
--        android:textColor="@color/white"
--        android:fontFamily="@font/inter_bold"
--        android:textSize="20dp" />
-+    <androidx.recyclerview.widget.RecyclerView
-+        android:id="@+id/calendarRV"
-+        android:layout_width="match_parent"
-+        android:layout_height="0dp"
-+        android:layout_weight="0.4" />
-+
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:gravity="center"
-+        android:orientation="horizontal">
-+
-+      <Button
-+          android:id="@+id/log"
-+          android:layout_width="wrap_content"
-+          android:layout_height="wrap_content"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="LOG"
-+          android:textColor="@color/white"
-+          android:textSize="20dp" />
- 
--    <Button
--        android:id="@+id/insights"
--        android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
--        android:text="INSIGHTS"
--        android:textColor="@color/white"
--        android:fontFamily="@font/inter_bold"
--        android:textSize="20dp"
--        android:layout_marginLeft="10dp" />
-+      <Button
-+          android:id="@+id/insights"
-+          android:layout_width="wrap_content"
-+          android:layout_height="wrap_content"
-+          android:layout_marginLeft="10dp"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="INSIGHTS"
-+          android:textColor="@color/white"
-+          android:textSize="20dp" />
- 
--  </LinearLayout>
--  <LinearLayout
--      android:layout_width="match_parent"
--      android:layout_height="wrap_content"
--      android:orientation="horizontal"
--      android:gravity="center">
--    <TextView
--        android:id="@+id/total"
--        android:layout_width="wrap_content"
--        android:layout_height="wrap_content"
--        android:text="Total"
--        android:textSize="20dp"
--        android:fontFamily="@font/inter_bold"
--        android:layout_marginLeft="10dp"/>
-+    </LinearLayout>
-+
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:gravity="center"
-+        android:orientation="horizontal">
-+
-+      <TextView
-+          android:id="@+id/total"
-+          android:layout_width="wrap_content"
-+          android:layout_height="wrap_content"
-+          android:layout_marginLeft="10dp"
-+          android:fontFamily="@font/inter_bold"
-+          android:text="Total"
-+          android:textSize="20dp" />
- 
--  </LinearLayout>
-+    </LinearLayout>
- 
--  <ListView
--      android:id="@+id/weekListView"
--      android:layout_width="match_parent"
--      android:layout_height="0dp"
--      android:layout_weight="5"/>
-+    <ListView
-+        android:id="@+id/weekListView"
-+        android:layout_width="match_parent"
-+        android:layout_height="0dp"
-+        android:layout_weight="5" />
- 
--</LinearLayout>
-\ No newline at end of file
-+  </LinearLayout>
-+</androidx.drawerlayout.widget.DrawerLayout>
-\ No newline at end of file
-Index: app/src/main/java/sg/edu/np/mad/transportme/WeekActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sg.edu.np.mad.transportme;\r\n\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalName;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.time.DayOfWeek;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\n@RequiresApi(api = Build.VERSION_CODES.O)\r\npublic class WeekActivity extends AppCompatActivity implements WeekAdapter.ItemListener {\r\n    private RecyclerView calendarRV;\r\n    private ListView weekListView;\r\n    private TextView weekText, ttl;\r\n    private Button weekBefore, weekAfter, log, insights;\r\n    public static Boolean arraySet = false;\r\n\r\n    FirebaseDatabase db = FirebaseDatabase.getInstance(\"https://transportme-c607f-default-rtdb.asia-southeast1.firebasedatabase.app/\");\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_week);\r\n        calendarRV = findViewById(R.id.calendarRV);\r\n        weekListView = findViewById(R.id.weekListView);\r\n        weekText = findViewById(R.id.yearMonth);\r\n        weekBefore = findViewById(R.id.weekBefore);\r\n        weekAfter = findViewById(R.id.weekAfter);\r\n        log = findViewById(R.id.log);\r\n        insights = findViewById(R.id.insights);\r\n        ttl = findViewById(R.id.total);\r\n        Intent toAddExpense = new Intent(this, AddExpenseActivity.class);\r\n        Intent toInsights = new Intent(this, InsightsActivity.class);\r\n        WeekUtils.dateSelected = LocalDate.now();\r\n        setExpenseArray();\r\n        setWeek();\r\n\r\n\r\n\r\n        weekBefore.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                WeekUtils.dateSelected = WeekUtils.dateSelected.minusWeeks(1);\r\n                setWeek();\r\n            }\r\n        });\r\n\r\n        weekAfter.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                WeekUtils.dateSelected = WeekUtils.dateSelected.plusWeeks(1);\r\n                setWeek();\r\n            }\r\n        });\r\n        log.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                startActivity(toAddExpense);\r\n            }\r\n        });\r\n\r\n        insights.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                startActivity(toInsights);\r\n            }\r\n        });\r\n    }\r\n    private void setWeek() {\r\n\r\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MMMM yyyy\");\r\n        weekText.setText(WeekUtils.dateSelected.format(formatter)); //sets date in MMMM yyyy\r\n        ArrayList<LocalDate> daysInWeekArray = new ArrayList<>();\r\n        LocalDate chosenDate = weeksSunday(WeekUtils.dateSelected);\r\n        LocalDate endDate = chosenDate.plusWeeks(1);\r\n        while (chosenDate.isBefore(endDate))\r\n        {\r\n            daysInWeekArray.add(chosenDate); //ensures it starts from a sunday every time\r\n            chosenDate = chosenDate.plusDays(1);\r\n        }\r\n\r\n        WeekAdapter monthAdapter = new WeekAdapter(daysInWeekArray, this);\r\n        RecyclerView.LayoutManager layoutManager = new GridLayoutManager(getApplicationContext(), 7);\r\n        calendarRV.setLayoutManager(layoutManager);\r\n        calendarRV.setAdapter(monthAdapter);\r\n    }\r\n    private static LocalDate weeksSunday(LocalDate current) //ensures it starts from a sunday every time\r\n    {\r\n        LocalDate prevWeek = current.minusWeeks(1);\r\n\r\n        while (current.isAfter(prevWeek))\r\n        {\r\n            if(current.getDayOfWeek() == DayOfWeek.SUNDAY)\r\n                return current;\r\n\r\n            current = current.minusDays(1);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void onItemClick(int position, LocalDate day) {\r\n        WeekUtils.dateSelected = day;\r\n        setWeek();\r\n        setExpenseAdapter();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        setExpenseAdapter();\r\n    }\r\n\r\n    private void setExpenseAdapter() {\r\n        ArrayList<Expense> daysExpense = Expense.expensePerDate(WeekUtils.dateSelected);\r\n        ExpenseAdapter expenseAdapter = new ExpenseAdapter(getApplicationContext(), daysExpense);\r\n        weekListView.setAdapter(expenseAdapter);\r\n        double totalcost = 0;\r\n        for (Expense expense : daysExpense){\r\n            double cost = Double.parseDouble(expense.getCost());\r\n            totalcost += cost;\r\n        }\r\n        ttl.setText(\"Total: $\"+totalcost);\r\n\r\n    }\r\n\r\n    private void setExpenseArray() {\r\n        DatabaseReference reference = db.getReference() //Database Reference expense\r\n                .child(\"User\")\r\n                .child(globalName)\r\n                .child(\"Expenses\");\r\n        Log.w(\"check\",\"check\");\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if (!arraySet){\r\n                    for (DataSnapshot expenses: snapshot.getChildren()) {\r\n                        Log.w(\"date\", expenses.child(\"Date\").getValue().toString());\r\n                        Log.w(\"cost\", expenses.child(\"Cost\").getValue().toString());\r\n                        Log.w(\"selected\", expenses.child(\"Selected\").getValue().toString());\r\n                        LocalDate date = LocalDate.parse(expenses.child(\"Date\").getValue().toString());\r\n                        Expense expense = new Expense(date, expenses.child(\"Cost\").getValue().toString(), expenses.child(\"Selected\").getValue().toString());\r\n                        Expense.expenseArrayList.add(expense);\r\n                    }\r\n                }\r\n                SharedPreferences prefs =  getSharedPreferences(\"ExpenseData\", MODE_PRIVATE);\r\n                arraySet = prefs.getString(\"arraySet\", \"\").equals(\"\");\r\n                Log.w(\"s\", arraySet.toString());\r\n                setExpenseAdapter();\r\n            }\r\n\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n\r\n\r\n        });\r\n\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/sg/edu/np/mad/transportme/WeekActivity.java b/app/src/main/java/sg/edu/np/mad/transportme/WeekActivity.java
---- a/app/src/main/java/sg/edu/np/mad/transportme/WeekActivity.java	(revision 9f18662899a01678af5b44182fa4ed1abc5066d7)
-+++ b/app/src/main/java/sg/edu/np/mad/transportme/WeekActivity.java	(date 1658506757594)
-@@ -1,23 +1,33 @@
- package sg.edu.np.mad.transportme;
- 
-+import static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;
- import static sg.edu.np.mad.transportme.user.LoginPage.globalName;
- 
- import androidx.annotation.NonNull;
- import androidx.annotation.RequiresApi;
- import androidx.appcompat.app.AppCompatActivity;
-+import androidx.core.view.GravityCompat;
-+import androidx.drawerlayout.widget.DrawerLayout;
- import androidx.recyclerview.widget.GridLayoutManager;
- import androidx.recyclerview.widget.RecyclerView;
- 
-+import android.content.ActivityNotFoundException;
- import android.content.Intent;
- import android.content.SharedPreferences;
-+import android.graphics.Color;
-+import android.net.Uri;
- import android.os.Build;
- import android.os.Bundle;
- import android.util.Log;
-+import android.view.MenuItem;
- import android.view.View;
- import android.widget.Button;
-+import android.widget.ImageView;
-+import android.widget.LinearLayout;
- import android.widget.ListView;
- import android.widget.TextView;
- 
-+import com.google.android.material.navigation.NavigationView;
- import com.google.firebase.database.DataSnapshot;
- import com.google.firebase.database.DatabaseError;
- import com.google.firebase.database.DatabaseReference;
-@@ -29,20 +39,45 @@
- import java.time.LocalTime;
- import java.time.format.DateTimeFormatter;
- import java.util.ArrayList;
-+
-+import sg.edu.np.mad.transportme.views.CarparkActivity;
-+import sg.edu.np.mad.transportme.views.MainActivity;
-+
- @RequiresApi(api = Build.VERSION_CODES.O)
--public class WeekActivity extends AppCompatActivity implements WeekAdapter.ItemListener {
-+public class WeekActivity extends AppCompatActivity implements WeekAdapter.ItemListener, NavigationView.OnNavigationItemSelectedListener {
-     private RecyclerView calendarRV;
-     private ListView weekListView;
-     private TextView weekText, ttl;
-     private Button weekBefore, weekAfter, log, insights;
-     public static Boolean arraySet = false;
--
-+    static final float END_SCALE = 0.7f;
-+    DrawerLayout drawerLayout;
-+    LinearLayout contentView;
-     FirebaseDatabase db = FirebaseDatabase.getInstance("https://transportme-c607f-default-rtdb.asia-southeast1.firebasedatabase.app/");
- 
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.activity_week);
-+
-+        ImageView menuIcon = findViewById(R.id.menu_icon);
-+        contentView = findViewById(R.id.weekContentView);
-+        drawerLayout = findViewById(R.id.drawer_layout);
-+        NavigationView navigationView = findViewById(R.id.nav_view);
-+        navigationView.bringToFront();
-+        navigationView.setNavigationItemSelectedListener(this);
-+        navigationView.setCheckedItem(R.id.nav_fares);
-+        menuIcon.setOnClickListener(new View.OnClickListener() {
-+            @Override
-+            public void onClick(View view) {
-+                if(drawerLayout.isDrawerVisible(GravityCompat.START)){
-+                    drawerLayout.closeDrawer(GravityCompat.START);
-+                }
-+                else drawerLayout.openDrawer(GravityCompat.START);
-+            }
-+        });
-+        animateNavigationDrawer();
-+
-         calendarRV = findViewById(R.id.calendarRV);
-         weekListView = findViewById(R.id.weekListView);
-         weekText = findViewById(R.id.yearMonth);
-@@ -180,9 +215,104 @@
- 
-             }
- 
-+        });
-+
-+    }
-+    private void animateNavigationDrawer(){
-+        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/
-+        drawerLayout.setScrimColor(Color.parseColor("#e8c490"));
-+        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {
-+            @Override
-+            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {
-+                final float diffScaledOffset = slideOffset * (1 - END_SCALE);
-+                final float offsetScale = 1 - diffScaledOffset;
-+                contentView.setScaleX(offsetScale);
-+                contentView.setScaleY(offsetScale);
-+
-+                final float xOffset = drawerView.getWidth() * slideOffset;
-+                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;
-+                final float xTranslation = xOffset - xOffsetDiff;
-+                contentView.setTranslationX(xTranslation);
-+            }
-+
-+            @Override
-+            public void onDrawerOpened(@NonNull View drawerView) {
- 
-+            }
-+
-+            @Override
-+            public void onDrawerClosed(@NonNull View drawerView) {
-+
-+            }
-+
-+            @Override
-+            public void onDrawerStateChanged(int newState) {
-+
-+            }
-         });
-+    }
- 
-+    @Override
-+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-+        switch(item.getItemId()){
-+            case R.id.nav_home:
- 
-+                finish();
-+
-+                /*fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times
-+                mapandrv.setVisibility(View.VISIBLE);
-+                favourite = false;*/
-+                break;
-+            case R.id.nav_carpark:
-+                Intent intentcarpark = new Intent(WeekActivity.this, CarparkActivity.class);
-+                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(intentcarpark);
-+                break;
-+            case R.id.nav_profile:
-+                Intent intentMainActivity = new Intent(WeekActivity.this, MainActivity.class);
-+                intentMainActivity.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                intentMainActivity.putExtra("Profile", "Yes");
-+
-+                startActivity(intentMainActivity);
-+
-+                /*mapandrv.setVisibility(View.INVISIBLE);
-+                fragmentlayout.setVisibility(View.VISIBLE);
-+                replaceFragment(new ProfileFragment());*/
-+                break;
-+            case R.id.nav_route:
-+                Intent routeintent = new Intent(WeekActivity.this, Route.class);
-+                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(routeintent);
-+                break;
-+            case R.id.nav_fares:
-+                Intent fareintent = new Intent(WeekActivity.this, WeekActivity.class);
-+                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(fareintent);
-+                break;
-+            case R.id.nav_rate:
-+                Uri uri = Uri.parse("market://details?id=sg.edu.np.mad.transportme");
-+                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);
-+                // To count with Play market backstack, After pressing back button,
-+                // to taken back to our application, we need to add following flags to intent.
-+                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |
-+                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |
-+                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);
-+                try {
-+                    startActivity(goToMarket);
-+                } catch (ActivityNotFoundException e) {
-+                    startActivity(new Intent(Intent.ACTION_VIEW,
-+                            Uri.parse("https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme")));
-+                    break;
-+                }
-+            case R.id.nav_share:
-+                Intent sendIntent = new Intent();
-+                sendIntent.setAction(Intent.ACTION_SEND);
-+                sendIntent.setType("text/plain");
-+                sendIntent.putExtra(Intent.EXTRA_TEXT, "Download the Best Bus App In Singapore! \n\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme");
-+                startActivity(Intent.createChooser(sendIntent,"Share With"));
-+                break;
-+        }
-+        drawerLayout.closeDrawer(GravityCompat.START);
-+        return true;
-     }
- }
-\ No newline at end of file
-Index: app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package sg.edu.np.mad.transportme.views;\r\n\r\nimport static android.Manifest.permission.ACCESS_COARSE_LOCATION;\r\nimport static android.content.Intent.FLAG_ACTIVITY_NO_ANIMATION;\r\nimport static android.graphics.BitmapFactory.decodeResource;\r\n\r\nimport static sg.edu.np.mad.transportme.BitmapResize.getResizedBitmap;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalCloseness;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminder;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.globalReminderBusService;\r\nimport static sg.edu.np.mad.transportme.user.LoginPage.grbsChange;\r\nimport static sg.edu.np.mad.transportme.views.LoadingScreen.globalBusStops;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationListener;\r\nimport android.location.LocationManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.util.SparseArray;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.FrameLayout;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.maps.CameraUpdate;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CameraPosition;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.LatLngBounds;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.Polyline;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.gms.vision.Frame;\r\nimport com.google.android.gms.vision.text.TextBlock;\r\nimport com.google.android.gms.vision.text.TextRecognizer;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\nimport sg.edu.np.mad.transportme.BusStop;\r\nimport sg.edu.np.mad.transportme.BusStopAdapter;\r\nimport sg.edu.np.mad.transportme.DistanceCalculator;\r\nimport sg.edu.np.mad.transportme.R;\r\nimport sg.edu.np.mad.transportme.Route;\r\nimport sg.edu.np.mad.transportme.api.ApiBusStopService;\r\nimport sg.edu.np.mad.transportme.user.ProfileFragment;\r\n\r\n\r\npublic class MainActivity extends FragmentActivity implements OnMapReadyCallback, NavigationView.OnNavigationItemSelectedListener {\r\n    LinearLayout mapandrv;\r\n    FrameLayout fragmentlayout;\r\n    LinearLayout reminderView;      //CHANGE TO SCROLLVIEW LATER\r\n    Button reminderButton;\r\n    Button cancelReminderButton;\r\n    GoogleMap map;\r\n    Uri image_uri;\r\n    LocationManager locationManager;\r\n    DrawerLayout drawerLayout;\r\n    static final float END_SCALE = 0.7f;\r\n    ConstraintLayout contentView;\r\n    public static Boolean favourite = false;\r\n    private static final String[] LOCATION_PERMS={\r\n            Manifest.permission.ACCESS_COARSE_LOCATION,\r\n            Manifest.permission.ACCESS_FINE_LOCATION\r\n    };\r\n    private static final int LOCATION_REQUEST=1337;\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n\r\n\r\n        SwipeRefreshLayout swipeRefreshLayout = findViewById(R.id.swipeLayout);\r\n        ProgressDialog progressDialog = new ProgressDialog(MainActivity.this,R.style.MyAlertDialogStyle); //Show Loading icon when the user first loads\r\n        progressDialog.show();\r\n        progressDialog.setContentView(R.layout.progress_dialog);\r\n        progressDialog.getWindow().setBackgroundDrawableResource(\r\n                android.R.color.transparent\r\n        );\r\n\r\n        contentView = findViewById(R.id.content);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        ImageView menuIcon = findViewById(R.id.menu_icon);\r\n        navigationView.bringToFront();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(R.id.nav_home);\r\n\r\n        menuIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n                    drawerLayout.closeDrawer(GravityCompat.START);\r\n                }\r\n                else drawerLayout.openDrawer(GravityCompat.START);\r\n            }\r\n        });\r\n        animateNavigationDrawer();\r\n\r\n        FloatingActionButton cameraSearch = findViewById(R.id.fab);\r\n        cameraSearch.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n               /* Intent cameraIntent = new Intent(MainActivity.this, CameraSearch.class);\r\n                startActivity(cameraIntent);*/\r\n                selectImage();\r\n            }\r\n        });\r\n\r\n\r\n        mapandrv = findViewById(R.id.MapAndRV);\r\n        fragmentlayout = findViewById(R.id.frame_layout);\r\n        reminderView = findViewById(R.id.reminderView);\r\n        reminderButton = findViewById(R.id.reminderButton);\r\n        cancelReminderButton = findViewById(R.id.cancelReminderButton);\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNavigationView); // load botttom navigation bar\r\n        bottomNavigationView.setOnItemSelectedListener(item ->{\r\n\r\n            switch(item.getItemId()){\r\n                case R.id.home:\r\n                    fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                    reminderView.setVisibility(View.GONE);\r\n                    cameraSearch.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.VISIBLE);\r\n                    favourite = false;\r\n                    break;\r\n                case R.id.favourites:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new FavouritesFragment());\r\n                    favourite = true;\r\n                    break;\r\n                case R.id.search:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new SearchFragment());\r\n                    break;\r\n                case R.id.mrtmap:\r\n                    mapandrv.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    fragmentlayout.setVisibility(View.VISIBLE);\r\n                    replaceFragment(new MrtMapFragment());\r\n                    break;\r\n                case R.id.notify:\r\n                    reminderView.setVisibility(View.VISIBLE);\r\n                    mapandrv.setVisibility(View.VISIBLE);\r\n                    fragmentlayout.setVisibility(View.INVISIBLE);\r\n                    cameraSearch.setVisibility(View.INVISIBLE);\r\n                    swipeRefreshLayout.setVisibility(View.GONE);\r\n                    break;\r\n                case R.id.nav_carpark:\r\n                    Intent intent = new Intent(MainActivity.this, CarparkActivity.class);\r\n                    startActivity(intent);\r\n                    break;\r\n            }\r\n            return true;\r\n        });\r\n\r\n        Intent recievingEnd = getIntent();\r\n        String gotoprofile = recievingEnd.getStringExtra(\"Profile\");\r\n        if (gotoprofile != null){\r\n            mapandrv.setVisibility(View.INVISIBLE);\r\n            fragmentlayout.setVisibility(View.VISIBLE);\r\n            replaceFragment(new ProfileFragment());\r\n            navigationView.setCheckedItem(R.id.nav_profile);\r\n        }\r\n\r\n        cancelReminderButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n            }\r\n        });\r\n\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.mrtmap);\r\n        mapFragment.getMapAsync(this);\r\n        locationManager = (LocationManager) getSystemService(LOCATION_SERVICE);\r\n\r\n        ArrayList<BusStop> busStops = globalBusStops;\r\n\r\n        // If location permission is rejected, send toast message to user\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            Toast.makeText(MainActivity.this,\"Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n\r\n            return;\r\n        }\r\n        else{ \r\n            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) { //Comments in this section is the same as the one in the LocationManager.NETWORK_PROVIDER\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() {\r\n                        locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 60000, 10, new LocationListener() { //Every 60 seconds or 10m change, run code\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude(); //Get latitude and logitude\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear(); //Clear all existing markers on the map\r\n                                for (int i = 0; i < busStops.size(); i++){ //Get all bus stop given the radius\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                if(closeBusStops.size() > 0){ // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                        }\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview when they onresponse is recieved\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if(closeBusStops.size() == 0){ // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++){ //Get bus stops nearby\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        if(closeBusStops.size() > 0){ //Call API if there nearby bus stops, if there arent, send toast message\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() { //call api to get bus services\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                }\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView); //Load recyclerview on response from API\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n                        }\r\n                        if(closeBusStops.size() == 0){\r\n                            Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f)); //Move camera to here the user is\r\n\r\n                    }\r\n                });\r\n            }\r\n            else if(locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)){ //This section is similar to the LocationManager.GPS_PROVIDER section above\r\n                //For users to refresh the recyclerview, runs the location reqeust updates\r\n                swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n                    @Override\r\n                    public void onRefresh() { //Whene user refresh run code\r\n                        locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                            @Override\r\n                            public void onLocationChanged(@NonNull Location location) {\r\n                                Double Latitude = location.getLatitude();\r\n                                Double Longitude = location.getLongitude();\r\n\r\n\r\n                                LatLng latLng = new LatLng(Latitude, Longitude);\r\n                                Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n                                ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                                map.clear();\r\n                                for (int i = 0; i < busStops.size(); i++){\r\n                                    BusStop busStop = busStops.get(i);\r\n                                    busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                                    if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                        closeBusStops.add(busStop);\r\n                                        LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                                    }\r\n                                }\r\n                                if(closeBusStops.size() > 0){ // If close bus stops > 0 run API and load recycler view\r\n                                    ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                    apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() {\r\n                                        @Override\r\n                                        public void onError(String message) {\r\n                                            Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                        }\r\n                                        @Override\r\n                                        public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                            RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                            BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                            LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                            rv.setAdapter(adapter);\r\n                                            rv.setLayoutManager(layout);\r\n                                            progressDialog.dismiss();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                swipeRefreshLayout.setRefreshing(false); //Close refreshing Icon\r\n                                if(closeBusStops.size() == 0){ // If there are no nearby bus stop, show toast message\r\n                                    Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                                    map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n                // Main location request when the app first loads\r\n                locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 60000, 10, new LocationListener() {\r\n                    @Override\r\n                    public void onLocationChanged(@NonNull Location location) {\r\n                        Double Latitude = location.getLatitude();\r\n                        Double Longitude = location.getLongitude();\r\n\r\n\r\n                        LatLng latLng = new LatLng(Latitude, Longitude);\r\n                        Geocoder geocoder = new Geocoder(getApplicationContext());\r\n\r\n\r\n\r\n                        ArrayList<BusStop> closeBusStops = new ArrayList<>();\r\n                        for (int i = 0; i < busStops.size(); i++){ //Get nearby bus stops\r\n                            BusStop busStop = busStops.get(i);\r\n                            busStop.setDistanceToLocation(DistanceCalculator.distanceBetween(busStop.getLatitude(), busStop.getLongitude(), Latitude, Longitude));\r\n\r\n                            if (busStop.getDistanceToLocation() <= globalCloseness){\r\n                                closeBusStops.add(busStop);\r\n                                LatLng latlongmarker = new LatLng(busStop.getLatitude(), busStop.getLongitude());\r\n                                map.addMarker(new MarkerOptions().position(latlongmarker).title(busStop.getDescription()));\r\n                            }\r\n                        }\r\n                        if(closeBusStops.size() > 0){\r\n                            ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                            apiBusStopService.getBusService(closeBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                @Override\r\n                                public void onError(String message) {\r\n                                    Toast.makeText(MainActivity.this,\"Cannot Get Bus Stops, Check Location and Connection\",Toast.LENGTH_LONG).show();\r\n                                }\r\n                                @Override\r\n                                public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n\r\n                                    RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                    BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                    LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                    rv.setAdapter(adapter);\r\n                                    rv.setLayoutManager(layout);\r\n                                    progressDialog.dismiss();\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                        if(closeBusStops.size() == 0){\r\n                            Toast.makeText(MainActivity.this,\"No nearby bus stops\",Toast.LENGTH_LONG).show();\r\n                            map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n                            progressDialog.dismiss();\r\n                        }\r\n\r\n                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16.2f));\r\n\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        grbsChange.observe(this,new Observer<String>() {\r\n            @Override\r\n            public void onChanged(String changedValue) {\r\n                Log.e(\"change\",\"\"+globalReminderBusService);\r\n                showReminderButton(reminderButton);\r\n            }\r\n        });\r\n    }\r\n    public void showReminderButton(Button reminderButton)\r\n    {\r\n        if(!(globalReminder == null))\r\n        {\r\n            reminderButton.setText(\"Alight at \"+globalReminder.getDescription());\r\n            reminderButton.setVisibility(View.VISIBLE);\r\n        }\r\n        else\r\n        {\r\n            reminderButton.setVisibility(View.INVISIBLE);\r\n        }\r\n    }\r\n\r\n    public void moveMapsCamera(Double latitude, Double longitude){ //Function to enable move camera from other classes\r\n        LatLng latlongmove = new LatLng(latitude, longitude);\r\n        CameraPosition cameraPosition = new CameraPosition.Builder()\r\n                .target(latlongmove)\r\n                .zoom(17f)\r\n                .build();\r\n        CameraUpdate cu = CameraUpdateFactory.newCameraPosition(cameraPosition);\r\n        map.animateCamera(cu);\r\n\r\n    }\r\n\r\n    public void busroute(Double latitude, Double longitude, BusStop currentStop, List<Marker> mList, List<LatLng> lList){\r\n        LatLng latlongmarker = new LatLng(latitude, longitude);\r\n        Bitmap icon = Bitmap.createBitmap(15,15, Bitmap.Config.ARGB_8888);\r\n        Drawable shape = getResources().getDrawable(R.drawable.marker_icon);\r\n        Canvas canvas = new Canvas(icon);\r\n        shape.setBounds(0,0,icon.getWidth(),icon.getHeight());\r\n        shape.draw(canvas);\r\n        Marker marker = map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()).icon(BitmapDescriptorFactory.fromBitmap(icon)));\r\n        lList.add(latlongmarker);\r\n        mList.add(marker);\r\n    }\r\n\r\n    public Polyline polyline(List<LatLng> lList) {\r\n        Polyline polyline = map.addPolyline(new PolylineOptions().addAll(lList).color(Color.RED));\r\n        return polyline;\r\n    }\r\n\r\n    public void camerazoom(List<Marker> mList) {\r\n        LatLngBounds.Builder builder = new LatLngBounds.Builder();\r\n        for (Marker m : mList) {\r\n            builder.include(m.getPosition());\r\n        }\r\n        LatLngBounds bounds = builder.build();\r\n        CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, 30);\r\n        map.animateCamera(cu);\r\n    }\r\n\r\n    public void removemarker(List<Marker> mList, Polyline line) {\r\n        if (line != null) {\r\n            line.remove();\r\n        }\r\n        for (Marker m : mList) {\r\n\r\n            m.remove();\r\n        }\r\n    }\r\n\r\n    private void replaceFragment(Fragment fragment){ //Replace fragment for nav bar\r\n        FragmentManager fragmentManager = getSupportFragmentManager();\r\n        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\r\n        fragmentTransaction.replace(R.id.frame_layout,fragment);\r\n        fragmentTransaction.commit();\r\n    }\r\n\r\n    @SuppressLint(\"MissingPermission\")\r\n    @Override\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        map = googleMap;\r\n        map.setMyLocationEnabled(true);\r\n\r\n    }\r\n\r\n    private void animateNavigationDrawer(){\r\n        /*drawerLayout.setScrimColor(getResources().getColor(com.google.android.material.R.color.));*/\r\n        drawerLayout.setScrimColor(Color.parseColor(\"#e8c490\"));\r\n        drawerLayout.addDrawerListener(new DrawerLayout.DrawerListener() {\r\n            @Override\r\n            public void onDrawerSlide(@NonNull View drawerView, float slideOffset) {\r\n                final float diffScaledOffset = slideOffset * (1 - END_SCALE);\r\n                final float offsetScale = 1 - diffScaledOffset;\r\n                contentView.setScaleX(offsetScale);\r\n                contentView.setScaleY(offsetScale);\r\n\r\n                final float xOffset = drawerView.getWidth() * slideOffset;\r\n                final float xOffsetDiff = contentView.getWidth() * diffScaledOffset / 2;\r\n                final float xTranslation = xOffset - xOffsetDiff;\r\n                contentView.setTranslationX(xTranslation);\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerOpened(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerClosed(@NonNull View drawerView) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onDrawerStateChanged(int newState) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n        switch(item.getItemId()){\r\n            case R.id.nav_home:\r\n                fragmentlayout.setVisibility(View.INVISIBLE); //Set fragment to invisible, show map and main recycler view to help with loading times\r\n                mapandrv.setVisibility(View.VISIBLE);\r\n                favourite = false;\r\n                break;\r\n            case R.id.nav_carpark:\r\n                Intent intentcarpark = new Intent(MainActivity.this, CarparkActivity.class);\r\n                intentcarpark.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(intentcarpark);\r\n                break;\r\n            case R.id.nav_profile:\r\n                mapandrv.setVisibility(View.INVISIBLE);\r\n                fragmentlayout.setVisibility(View.VISIBLE);\r\n                replaceFragment(new ProfileFragment());\r\n                break;\r\n            case R.id.nav_route:\r\n                Intent routeintent = new Intent(MainActivity.this, Route.class);\r\n                routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);\r\n                startActivity(routeintent);\r\n                break;\r\n            case R.id.nav_rate:\r\n                Uri uri = Uri.parse(\"market://details?id=sg.edu.np.mad.transportme\");\r\n                Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n                // To count with Play market backstack, After pressing back button,\r\n                // to taken back to our application, we need to add following flags to intent.\r\n                goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                        Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                        Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n                try {\r\n                    startActivity(goToMarket);\r\n                } catch (ActivityNotFoundException e) {\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\"https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\")));\r\n                break;\r\n            }\r\n            case R.id.nav_share:\r\n                Intent sendIntent = new Intent();\r\n                sendIntent.setAction(Intent.ACTION_SEND);\r\n                sendIntent.setType(\"text/plain\");\r\n                sendIntent.putExtra(Intent.EXTRA_TEXT, \"Download the Best Bus App In Singapore! \\n\\n https://play.google.com/store/apps/details?id=sg.edu.np.mad.transportme\");\r\n                startActivity(Intent.createChooser(sendIntent,\"Share With\"));\r\n                break;\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n    @Override\r\n    public void onBackPressed(){\r\n        if(drawerLayout.isDrawerVisible(GravityCompat.START)){\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }else{\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n    /*@Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        // The action bar home/up action should open or close the drawer.\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home:\r\n                drawerLayout.openDrawer(GravityCompat.START);\r\n                return true;\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }*/\r\n    private void selectImage() {\r\n        final CharSequence[] options = {\"Choose from Gallery\",\"Cancel\" };\r\n        /*final CharSequence[] options = { \"Take Photo\", \"Choose from Gallery\",\"Cancel\" };*/\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);\r\n        builder.setTitle(\"Choose Image to Scan\");\r\n        builder.setIcon(R.drawable.appsplashicon);\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    ContentValues values = new ContentValues();\r\n                    values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n                    values.put(MediaStore.Images.Media.DESCRIPTION, \"From the Camera\");\r\n                    image_uri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,values);\r\n                    Intent takePicture = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);\r\n                    takePicture.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n                    startActivityForResult(takePicture,0);\r\n\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n                    Intent pickPhoto = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                    startActivityForResult(pickPhoto , 1);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n                    dialog.dismiss();\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode != RESULT_CANCELED) {\r\n            switch (requestCode) {\r\n                case 0:\r\n                    if (resultCode == RESULT_OK /*&& data != null*/) {\r\n                        try{\r\n                            ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                            Bitmap selectedImage = MediaStore.Images.Media.getBitmap(this.getContentResolver(), image_uri);\r\n                            /*Bitmap selectedImage = (Bitmap) data.getExtras().get(\"data\");*/\r\n                            selectedImage = getResizedBitmap(selectedImage,1000);\r\n                            TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                            Frame frameImage = new Frame.Builder().setBitmap(selectedImage).build();\r\n                            SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                            for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                for (int x=0; i< globalBusStops.size(); i++){\r\n                                    BusStop currentStop = globalBusStops.get(i);\r\n                                    if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                            textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                            textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                        cameraBusStops.add(currentStop);\r\n                                        LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                        map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                        map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            if(cameraBusStops.size() > 0){\r\n                                Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                    @Override\r\n                                    public void onError(String message) {\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                    }\r\n                                    @Override\r\n                                    public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                        RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                        BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                        LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                        rv.setAdapter(adapter);\r\n                                        rv.setLayoutManager(layout);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else{\r\n                                Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                            }\r\n\r\n                        }\r\n                        catch(Exception e){\r\n                        }\r\n\r\n                    }\r\n\r\n                    break;\r\n                case 1:\r\n                    if (resultCode == RESULT_OK && data != null) {\r\n                        Uri selectedImage = data.getData();\r\n                        String[] filePathColumn = {MediaStore.Images.Media.DATA};\r\n\r\n                        if (selectedImage != null) {\r\n                            Cursor cursor = getContentResolver().query(selectedImage,\r\n                                    filePathColumn, null, null, null);\r\n                            if (cursor != null) {\r\n                                cursor.moveToFirst();\r\n\r\n                                int columnIndex = cursor.getColumnIndex(filePathColumn[0]);\r\n                                String picturePath = cursor.getString(columnIndex);\r\n                                Bitmap selectedPhoneImage = BitmapFactory.decodeFile(picturePath);\r\n\r\n                                try{\r\n                                    ArrayList<BusStop> cameraBusStops = new ArrayList<>();\r\n                                    TextRecognizer textRecognizer = new TextRecognizer.Builder(this).build();\r\n                                    Frame frameImage = new Frame.Builder().setBitmap(selectedPhoneImage).build();\r\n                                    SparseArray<TextBlock> textBlockSpaceArray = textRecognizer.detect(frameImage);\r\n                                    for (int i =0; i<textBlockSpaceArray.size();i++){\r\n                                        TextBlock textBlock = textBlockSpaceArray.get(textBlockSpaceArray.keyAt(i));\r\n                                        for (int x=0; i< globalBusStops.size(); i++){\r\n                                            BusStop currentStop = globalBusStops.get(i);\r\n                                            if (textBlock.getValue().equalsIgnoreCase(currentStop.getDescription()) ||\r\n                                                    textBlock.getValue().equals(currentStop.getBusStopCode()) ||\r\n                                                    textBlock.getValue().equalsIgnoreCase(currentStop.getRoadName())){\r\n                                                cameraBusStops.add(currentStop);\r\n                                                LatLng latlongmarker = new LatLng(currentStop.getLatitude(), currentStop.getLongitude());\r\n                                                map.addMarker(new MarkerOptions().position(latlongmarker).title(currentStop.getDescription()));\r\n                                                map.moveCamera(CameraUpdateFactory.newLatLngZoom(latlongmarker, 16.2f));\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if(cameraBusStops.size() > 0){\r\n                                        Toast.makeText(MainActivity.this,\"Bus Stop Recognized, loading Bus Stop\",Toast.LENGTH_LONG).show();\r\n                                        ApiBusStopService apiBusStopService = new ApiBusStopService(MainActivity.this);\r\n                                        apiBusStopService.getBusService(cameraBusStops,new ApiBusStopService.VolleyResponseListener2() { //Call API for nearby bus stops\r\n                                            @Override\r\n                                            public void onError(String message) {\r\n                                                Toast.makeText(MainActivity.this,\"Cannot Get Bus Stop, Check Location and Connection Settings\",Toast.LENGTH_LONG).show();\r\n                                            }\r\n                                            @Override\r\n                                            public void onResponse(ArrayList<BusStop> busStopsLoaded) {\r\n                                                RecyclerView rv = findViewById(R.id.recyclerView);\r\n                                                BusStopAdapter adapter = new BusStopAdapter(busStopsLoaded,MainActivity.this);\r\n                                                LinearLayoutManager layout = new LinearLayoutManager(MainActivity.this);\r\n                                                rv.setAdapter(adapter);\r\n                                                rv.setLayoutManager(layout);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else{\r\n                                        Toast.makeText(MainActivity.this,\"Cannot Recognize Text Choose Another Photo\",Toast.LENGTH_LONG).show();\r\n\r\n                                    }\r\n\r\n                                }\r\n                                catch(Exception e){\r\n                                    Log.d(\"HAHA\", \"failed\");\r\n                                }\r\n                                cursor.close();\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java
---- a/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(revision 9f18662899a01678af5b44182fa4ed1abc5066d7)
-+++ b/app/src/main/java/sg/edu/np/mad/transportme/views/MainActivity.java	(date 1658505404107)
-@@ -91,6 +91,7 @@
- import sg.edu.np.mad.transportme.DistanceCalculator;
- import sg.edu.np.mad.transportme.R;
- import sg.edu.np.mad.transportme.Route;
-+import sg.edu.np.mad.transportme.WeekActivity;
- import sg.edu.np.mad.transportme.api.ApiBusStopService;
- import sg.edu.np.mad.transportme.user.ProfileFragment;
- 
-@@ -590,6 +591,7 @@
-         });
-     }
- 
-+    @RequiresApi(api = Build.VERSION_CODES.O)
-     @Override
-     public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-         switch(item.getItemId()){
-@@ -612,6 +614,11 @@
-                 Intent routeintent = new Intent(MainActivity.this, Route.class);
-                 routeintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-                 startActivity(routeintent);
-+                break;
-+            case R.id.nav_fares:
-+                Intent fareintent = new Intent(MainActivity.this, WeekActivity.class);
-+                fareintent.addFlags(FLAG_ACTIVITY_NO_ANIMATION);
-+                startActivity(fareintent);
-                 break;
-             case R.id.nav_rate:
-                 Uri uri = Uri.parse("market://details?id=sg.edu.np.mad.transportme");
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.14722222222222223\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_test.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/#Poly/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/edittext_bg.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_person_24.xml\" value=\"0.32\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml\" value=\"0.2681904761904762\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_insights.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_month_view.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/calendar_layout.xml\" value=\"0.27760416666666665\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/expense_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml\" value=\"0.2345\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/favourite.xml\" value=\"0.1625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.15625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_profile.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.2708333333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml\" value=\"0.2164855072463768\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.19701086956521738\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml\" value=\"0.3625\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/MAD/TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.23007246376811594\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml\" value=\"0.2859375\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml\" value=\"0.19427083333333334\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/cyrus/Desktop/submit/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml\" value=\"0.12360688956433637\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_login_page.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG GitHub AGAIN/app/src/main/res/layout/activity_main.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/activity_main.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_service_layout.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/bell.xml\" value=\"0.26\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/favourite.xml\" value=\"0.102\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/grey_bell.xml\" value=\"0.102\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/ic_baseline_notifications_active_24.xml\" value=\"0.26\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/rounded_button.xml\" value=\"0.14\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/small_bell.xml\" value=\"0.2985\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/activity_login_page.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/activity_main.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/activity_registration_page.xml\" value=\"0.17831813576494426\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/bus_stop_layout.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/fragment_notify.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/fragment_search.xml\" value=\"0.36666666666666664\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/progress_dialog.xml\" value=\"0.35507246376811596\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/step_bus_layout.xml\" value=\"0.35507246376811596\" />\r\n        <entry key=\"..\\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/menu/bottom_nav_menu.xml\" value=\"0.36102564102564105\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/../FIXREGIS N WORD/!/!/!/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 9f18662899a01678af5b44182fa4ed1abc5066d7)
-+++ b/.idea/misc.xml	(date 1658505602456)
-@@ -15,19 +15,47 @@
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/edittext_bg.xml" value="0.2985" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_person_24.xml" value="0.32" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml" value="0.2681904761904762" />
--        <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_insights.xml" value="0.33" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml" value="0.25" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml" value="0.2" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml" value="0.36666666666666664" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_month_view.xml" value="0.27760416666666665" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml" value="0.25" />
--        <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml" value="0.1" />
--        <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml" value="0.36666666666666664" />
-+        <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml" value="0.27760416666666665" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml" value="0.36666666666666664" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/calendar_layout.xml" value="0.27760416666666665" />
--        <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/expense_layout.xml" value="0.36666666666666664" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml" value="0.25" />
-         <entry key="..\:/SEM 3 SCHOOL/MAD/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml" value="0.36666666666666664" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/ic_launcher_foreground.xml" value="0.14" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_24.xml" value="0.2985" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/marker_icon.xml" value="0.2985" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_expense_edit.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_login_page.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml" value="0.1" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_registration_page.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml" value="0.22" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_service_layout.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/bus_stop_layout.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_favourites.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_mrt_map.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_profile.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/header.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/list_item_layout.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/progress_dialog.xml" value="0.14722222222222223" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/bottom_nav_menu.xml" value="0.36666666666666664" />
-+        <entry key="..\:/Users/Koo Wen Qi/Desktop/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml" value="0.36666666666666664" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable-v24/busbg.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/filled_bell.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/grey_bell.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_lens_24.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/ic_baseline_route_24.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/drawable/marker_icon.xml" value="0.2165" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_main.xml" value="0.2" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_route.xml" value="0.2" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_week.xml" value="0.2" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/layout/fragment_search.xml" value="0.19519927536231885" />
-+        <entry key="..\:/Users/cyrus/Desktop/MAD fine/MAD-Assignment-TransportMe/app/src/main/res/menu/side_menu.xml" value="0.36666666666666664" />
-         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/bg_round.xml" value="0.2345" />
-         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/drawable/favourite.xml" value="0.1625" />
-         <entry key="..\:/Users/cyrus/Desktop/MAD-Assignment-TransportMe/app/src/main/res/layout/activity_loading_screen.xml" value="0.15625" />
-@@ -57,27 +85,12 @@
-         <entry key="..\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/activity_main.xml" value="0.17831813576494426" />
-         <entry key="..\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_service_layout.xml" value="0.33" />
-         <entry key="..\:/Users/voidi/Desktop/MAD/ASG Github/app/src/main/res/layout/bus_stop_layout.xml" value="0.33" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/bell.xml" value="0.26" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/favourite.xml" value="0.102" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/grey_bell.xml" value="0.102" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/ic_baseline_notifications_active_24.xml" value="0.26" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/rounded_button.xml" value="0.14" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/drawable/small_bell.xml" value="0.2985" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/activity_login_page.xml" value="0.17831813576494426" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/activity_main.xml" value="0.25" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/activity_registration_page.xml" value="0.17831813576494426" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/bus_stop_layout.xml" value="0.5" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/fragment_notify.xml" value="0.36666666666666664" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/fragment_search.xml" value="0.36666666666666664" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/progress_dialog.xml" value="0.35507246376811596" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/layout/step_bus_layout.xml" value="0.35507246376811596" />
--        <entry key="..\:/Users/voidi/Desktop/MAD/FIXREGIS N WORD!!!/app/src/main/res/menu/bottom_nav_menu.xml" value="0.36102564102564105" />
-       </map>
-     </option>
-   </component>
-   <component name="ExternalStorageConfigurationManager" enabled="true" />
-   <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
--    <output url="file://$PROJECT_DIR$/../FIXREGIS N WORD/!/!/!/build/classes" />
-+    <output url="file://$PROJECT_DIR$/build/classes" />
-   </component>
-   <component name="ProjectType">
-     <option name="id" value="Android" />
